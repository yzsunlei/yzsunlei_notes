<svg ed:name="Page-1" ed:vSpacing="30" ed:hSpacing="30" xmlns="http://www.w3.org/2000/svg" xmlns:ed="https://www.edrawsoft.cn/xml/2017/SVGExtensions/" id="page100" width="1561" xmlns:xlink="http://www.w3.org/1999/xlink" height="7898" xmlns:ev="http://www.w3.org/2001/xml-events" viewBox="0 0 1561 7898"><style type="text/css"><![CDATA[
g[ed\:togtopicid],g[ed\:hyperlink],g[ed\:comment],g[ed\:note] {cursor:pointer;}
g[id] {-moz-user-select: none;-ms-user-select: none;user-select: none;}
svg text::selection,svg tspan::selection{background-color: #4285f4;color: #ffffff;fill: #ffffff;}
.st2 {fill:#303030;font-family:宋体;font-size:11pt}
.st3 {fill:#454545;font-family:宋体;font-size:9pt}
.st1 {fill:#ffffff;font-family:宋体;font-size:14pt}
]]></style><defs><linearGradient id="lg1" x1="0%" y1="0%" x2="0%" y2="100%"><stop offset="0" stop-color="#ffffff"/><stop offset="0.25" stop-color="#f0f5f0"/><stop offset="0.75" stop-color="#e1ebe1"/><stop offset="1" stop-color="#c8d7c8"/></linearGradient></defs><rect fill="#ffffff" y="0" width="1561" height="7898" x="0"/><path stroke="#696969" d="M-83.4,1497C26.9,1195.8,-93.6,-1524,105.3,-1524" stroke-linecap="round" fill="none" ed:parentid="101" id="103" transform="matrix(1,0,0,1,276,2425)" ed:tosuperid="102" stroke-linejoin="round"/><path stroke="#696969" d="M-76,764.3C21.4,555.6,-88.9,-791.3,105.3,-791.3" stroke-linecap="round" fill="none" ed:parentid="101" id="105" transform="matrix(1,0,0,1,276,3158)" ed:tosuperid="104" stroke-linejoin="round"/><path stroke="#696969" d="M-56.1,138C1.3,59.2,-16.9,-165,105.3,-165" stroke-linecap="round" fill="none" ed:parentid="101" id="107" transform="matrix(1,0,0,1,276,3784)" ed:tosuperid="106" stroke-linejoin="round"/><path stroke="#696969" d="M-61.3,-228.8C5.9,-123.2,-52.6,255.8,105.3,255.8" stroke-linecap="round" fill="none" ed:parentid="101" id="109" transform="matrix(1,0,0,1,276,4205)" ed:tosuperid="108" stroke-linejoin="round"/><path stroke="#696969" d="M-72.9,-595C19,-413.5,-86.8,622,105.3,622" stroke-linecap="round" fill="none" ed:parentid="101" id="111" transform="matrix(1,0,0,1,276,4571)" ed:tosuperid="110" stroke-linejoin="round"/><path stroke="#696969" d="M-79.3,-1011.8C23.9,-768.3,-91.1,1038.8,105.3,1038.8" stroke-linecap="round" fill="none" ed:parentid="101" id="113" transform="matrix(1,0,0,1,276,4988)" ed:tosuperid="112" stroke-linejoin="round"/><path stroke="#696969" d="M-82.4,-1360.5C26.2,-1074.5,-93,1387.5,105.3,1387.5" stroke-linecap="round" fill="none" ed:parentid="101" id="115" transform="matrix(1,0,0,1,276,5336)" ed:tosuperid="114" stroke-linejoin="round"/><path stroke="#696969" d="M-84.4,-1672.7C27.6,-1353,-94.2,1699.8,105.3,1699.8" stroke-linecap="round" fill="none" ed:parentid="101" id="117" transform="matrix(1,0,0,1,276,5649)" ed:tosuperid="116" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,423.1C5.4,423.1,-13.5,-423.1,13.5,-423.1" stroke-linecap="round" fill="none" ed:parentid="102" id="119" transform="matrix(1,0,0,1,663,478)" ed:tosuperid="118" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,336.6C5.4,336.6,-13.5,-336.6,13.5,-336.6" stroke-linecap="round" fill="none" ed:parentid="102" id="121" transform="matrix(1,0,0,1,663,564)" ed:tosuperid="120" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,236.6C5.4,236.6,-13.5,-236.6,13.5,-236.6" stroke-linecap="round" fill="none" ed:parentid="102" id="123" transform="matrix(1,0,0,1,663,664)" ed:tosuperid="122" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,59.6C5.4,59.6,-13.5,-59.6,13.5,-59.6" stroke-linecap="round" fill="none" ed:parentid="102" id="125" transform="matrix(1,0,0,1,663,841)" ed:tosuperid="124" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-120.4C5.4,-120.4,-13.5,120.4,13.5,120.4" stroke-linecap="round" fill="none" ed:parentid="102" id="127" transform="matrix(1,0,0,1,663,1021)" ed:tosuperid="126" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-214.9C5.4,-214.9,-13.5,214.9,13.5,214.9" stroke-linecap="round" fill="none" ed:parentid="102" id="129" transform="matrix(1,0,0,1,663,1116)" ed:tosuperid="128" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-319.9C5.4,-319.9,-13.5,319.9,13.5,319.9" stroke-linecap="round" fill="none" ed:parentid="102" id="131" transform="matrix(1,0,0,1,663,1221)" ed:tosuperid="130" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-372.9C5.4,-372.9,-13.5,372.9,13.5,372.9" stroke-linecap="round" fill="none" ed:parentid="102" id="133" transform="matrix(1,0,0,1,663,1274)" ed:tosuperid="132" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,66.5C5.4,66.5,-13.5,-66.5,13.5,-66.5" stroke-linecap="round" fill="none" ed:parentid="120" id="135" transform="matrix(1,0,0,1,876,161)" ed:tosuperid="134" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,46.5C5.2,46.5,-13.1,-46.5,13.5,-46.5" stroke-linecap="round" fill="none" ed:parentid="120" id="137" transform="matrix(1,0,0,1,876,181)" ed:tosuperid="136" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,33.5C4,33.5,-10.2,-33.5,13.5,-33.5" stroke-linecap="round" fill="none" ed:parentid="120" id="139" transform="matrix(1,0,0,1,876,194)" ed:tosuperid="138" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,13.5C0.4,13.5,-1.8,-13.5,13.5,-13.5" stroke-linecap="round" fill="none" ed:parentid="120" id="141" transform="matrix(1,0,0,1,876,214)" ed:tosuperid="140" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-13.5C0.4,-13.5,-1.8,13.5,13.5,13.5" stroke-linecap="round" fill="none" ed:parentid="120" id="143" transform="matrix(1,0,0,1,876,241)" ed:tosuperid="142" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-33.5C4,-33.5,-10.2,33.5,13.5,33.5" stroke-linecap="round" fill="none" ed:parentid="120" id="145" transform="matrix(1,0,0,1,876,261)" ed:tosuperid="144" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-53.5C5.4,-53.5,-13.5,53.5,13.5,53.5" stroke-linecap="round" fill="none" ed:parentid="120" id="147" transform="matrix(1,0,0,1,876,281)" ed:tosuperid="146" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-73.5C5.4,-73.5,-13.5,73.5,13.5,73.5" stroke-linecap="round" fill="none" ed:parentid="120" id="149" transform="matrix(1,0,0,1,876,301)" ed:tosuperid="148" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,6.5C-1.2,6.5,1.8,-6.5,13.5,-6.5" stroke-linecap="round" fill="none" ed:parentid="122" id="151" transform="matrix(1,0,0,1,876,421)" ed:tosuperid="150" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-13.5C0.4,-13.5,-1.8,13.5,13.5,13.5" stroke-linecap="round" fill="none" ed:parentid="122" id="153" transform="matrix(1,0,0,1,876,441)" ed:tosuperid="152" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,143.5C5.4,143.5,-13.5,-143.5,13.5,-143.5" stroke-linecap="round" fill="none" ed:parentid="124" id="155" transform="matrix(1,0,0,1,858,638)" ed:tosuperid="154" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,130.5C5.4,130.5,-13.5,-130.5,13.5,-130.5" stroke-linecap="round" fill="none" ed:parentid="124" id="157" transform="matrix(1,0,0,1,858,651)" ed:tosuperid="156" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,110.5C5.4,110.5,-13.5,-110.5,13.5,-110.5" stroke-linecap="round" fill="none" ed:parentid="124" id="159" transform="matrix(1,0,0,1,858,671)" ed:tosuperid="158" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,90.5C5.4,90.5,-13.5,-90.5,13.5,-90.5" stroke-linecap="round" fill="none" ed:parentid="124" id="161" transform="matrix(1,0,0,1,858,691)" ed:tosuperid="160" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,63.5C5.4,63.5,-13.5,-63.5,13.5,-63.5" stroke-linecap="round" fill="none" ed:parentid="124" id="164" transform="matrix(1,0,0,1,858,718)" ed:tosuperid="163" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,43.5C5,43.5,-12.6,-43.5,13.5,-43.5" stroke-linecap="round" fill="none" ed:parentid="124" id="166" transform="matrix(1,0,0,1,858,738)" ed:tosuperid="165" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,23.5C2.4,23.5,-6.5,-23.5,13.5,-23.5" stroke-linecap="round" fill="none" ed:parentid="124" id="168" transform="matrix(1,0,0,1,858,758)" ed:tosuperid="167" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3.5C-1.9,3.5,3.5,-3.5,13.5,-3.5" stroke-linecap="round" fill="none" ed:parentid="124" id="170" transform="matrix(1,0,0,1,858,778)" ed:tosuperid="169" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-16.5C1,-16.5,-3.3,16.5,13.5,16.5" stroke-linecap="round" fill="none" ed:parentid="124" id="172" transform="matrix(1,0,0,1,858,798)" ed:tosuperid="171" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-29.5C3.4,-29.5,-8.9,29.5,13.5,29.5" stroke-linecap="round" fill="none" ed:parentid="124" id="174" transform="matrix(1,0,0,1,858,811)" ed:tosuperid="173" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-49.5C5.3,-49.5,-13.3,49.5,13.5,49.5" stroke-linecap="round" fill="none" ed:parentid="124" id="176" transform="matrix(1,0,0,1,858,831)" ed:tosuperid="175" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-76.5C5.4,-76.5,-13.5,76.5,13.5,76.5" stroke-linecap="round" fill="none" ed:parentid="124" id="178" transform="matrix(1,0,0,1,858,858)" ed:tosuperid="177" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-96.5C5.4,-96.5,-13.5,96.5,13.5,96.5" stroke-linecap="round" fill="none" ed:parentid="124" id="180" transform="matrix(1,0,0,1,858,878)" ed:tosuperid="179" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-123.5C5.4,-123.5,-13.5,123.5,13.5,123.5" stroke-linecap="round" fill="none" ed:parentid="124" id="182" transform="matrix(1,0,0,1,858,905)" ed:tosuperid="181" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-150.5C5.4,-150.5,-13.5,150.5,13.5,150.5" stroke-linecap="round" fill="none" ed:parentid="124" id="184" transform="matrix(1,0,0,1,858,932)" ed:tosuperid="183" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3.5C-1.9,3.5,3.5,-3.5,13.5,-3.5" stroke-linecap="round" fill="none" ed:parentid="126" id="186" transform="matrix(1,0,0,1,900,1138)" ed:tosuperid="185" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,16.5C1,16.5,-3.3,-16.5,13.5,-16.5" stroke-linecap="round" fill="none" ed:parentid="126" id="188" transform="matrix(1,0,0,1,900,1125)" ed:tosuperid="187" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-16.5C1,-16.5,-3.3,16.5,13.5,16.5" stroke-linecap="round" fill="none" ed:parentid="126" id="190" transform="matrix(1,0,0,1,900,1158)" ed:tosuperid="189" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,65C5.4,65,-13.5,-65,13.5,-65" stroke-linecap="round" fill="none" ed:parentid="128" id="192" transform="matrix(1,0,0,1,900,1266)" ed:tosuperid="191" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,52C5.4,52,-13.5,-52,13.5,-52" stroke-linecap="round" fill="none" ed:parentid="128" id="194" transform="matrix(1,0,0,1,900,1279)" ed:tosuperid="193" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,39C4.6,39,-11.7,-39,13.5,-39" stroke-linecap="round" fill="none" ed:parentid="128" id="196" transform="matrix(1,0,0,1,900,1292)" ed:tosuperid="195" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,26C2.9,26,-7.6,-26,13.5,-26" stroke-linecap="round" fill="none" ed:parentid="128" id="198" transform="matrix(1,0,0,1,900,1305)" ed:tosuperid="197" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,13C0.3,13,-1.6,-13,13.5,-13" stroke-linecap="round" fill="none" ed:parentid="128" id="200" transform="matrix(1,0,0,1,900,1318)" ed:tosuperid="199" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="128" id="202" transform="matrix(1,0,0,1,900,1331)" ed:tosuperid="201" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-13C0.3,-13,-1.6,13,13.5,13" stroke-linecap="round" fill="none" ed:parentid="128" id="204" transform="matrix(1,0,0,1,900,1344)" ed:tosuperid="203" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-26C2.9,-26,-7.6,26,13.5,26" stroke-linecap="round" fill="none" ed:parentid="128" id="206" transform="matrix(1,0,0,1,900,1357)" ed:tosuperid="205" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-39C4.6,-39,-11.7,39,13.5,39" stroke-linecap="round" fill="none" ed:parentid="128" id="208" transform="matrix(1,0,0,1,900,1370)" ed:tosuperid="207" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-52C5.4,-52,-13.5,52,13.5,52" stroke-linecap="round" fill="none" ed:parentid="128" id="210" transform="matrix(1,0,0,1,900,1383)" ed:tosuperid="209" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-65C5.4,-65,-13.5,65,13.5,65" stroke-linecap="round" fill="none" ed:parentid="128" id="212" transform="matrix(1,0,0,1,900,1396)" ed:tosuperid="211" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,20C1.8,20,-5,-20,13.5,-20" stroke-linecap="round" fill="none" ed:parentid="130" id="214" transform="matrix(1,0,0,1,924,1521)" ed:tosuperid="213" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="130" id="216" transform="matrix(1,0,0,1,924,1541)" ed:tosuperid="215" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-27C3,-27,-8,27,13.5,27" stroke-linecap="round" fill="none" ed:parentid="130" id="218" transform="matrix(1,0,0,1,924,1568)" ed:tosuperid="217" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,13C0.3,13,-1.6,-13,13.5,-13" stroke-linecap="round" fill="none" ed:parentid="132" id="220" transform="matrix(1,0,0,1,924,1634)" ed:tosuperid="219" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="132" id="222" transform="matrix(1,0,0,1,924,1647)" ed:tosuperid="221" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-13C0.3,-13,-1.6,13,13.5,13" stroke-linecap="round" fill="none" ed:parentid="132" id="224" transform="matrix(1,0,0,1,924,1660)" ed:tosuperid="223" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-419.4C5.4,-419.4,-13.5,419.4,13.5,419.4" stroke-linecap="round" fill="none" ed:parentid="102" id="226" transform="matrix(1,0,0,1,663,1320)" ed:tosuperid="225" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-7.5C-0.9,-7.5,1.3,7.5,13.5,7.5" stroke-linecap="round" fill="none" ed:parentid="225" id="230" transform="matrix(1,0,0,1,858,1747)" ed:tosuperid="229" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-20.5C1.8,-20.5,-5.2,20.5,13.5,20.5" stroke-linecap="round" fill="none" ed:parentid="225" id="232" transform="matrix(1,0,0,1,858,1760)" ed:tosuperid="231" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,164.6C5.4,164.6,-13.5,-164.6,13.5,-164.6" stroke-linecap="round" fill="none" ed:parentid="104" id="234" transform="matrix(1,0,0,1,673,2202)" ed:tosuperid="233" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,26.1C2.9,26.1,-7.6,-26.1,13.5,-26.1" stroke-linecap="round" fill="none" ed:parentid="104" id="236" transform="matrix(1,0,0,1,673,2340)" ed:tosuperid="235" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-20.4C1.8,-20.4,-5.2,20.4,13.5,20.4" stroke-linecap="round" fill="none" ed:parentid="104" id="238" transform="matrix(1,0,0,1,673,2387)" ed:tosuperid="237" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-86.9C5.4,-86.9,-13.5,86.9,13.5,86.9" stroke-linecap="round" fill="none" ed:parentid="104" id="240" transform="matrix(1,0,0,1,673,2453)" ed:tosuperid="239" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-203.4C5.4,-203.4,-13.5,203.4,13.5,203.4" stroke-linecap="round" fill="none" ed:parentid="104" id="242" transform="matrix(1,0,0,1,673,2570)" ed:tosuperid="241" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-276.4C5.4,-276.4,-13.5,276.4,13.5,276.4" stroke-linecap="round" fill="none" ed:parentid="104" id="244" transform="matrix(1,0,0,1,673,2643)" ed:tosuperid="243" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,95C5.4,95,-13.5,-95,13.5,-95" stroke-linecap="round" fill="none" ed:parentid="233" id="246" transform="matrix(1,0,0,1,820,1942)" ed:tosuperid="245" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,82C5.4,82,-13.5,-82,13.5,-82" stroke-linecap="round" fill="none" ed:parentid="233" id="248" transform="matrix(1,0,0,1,820,1955)" ed:tosuperid="247" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,69C5.4,69,-13.5,-69,13.5,-69" stroke-linecap="round" fill="none" ed:parentid="233" id="250" transform="matrix(1,0,0,1,820,1968)" ed:tosuperid="249" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,56C5.4,56,-13.5,-56,13.5,-56" stroke-linecap="round" fill="none" ed:parentid="233" id="252" transform="matrix(1,0,0,1,820,1981)" ed:tosuperid="251" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,43C5,43,-12.5,-43,13.5,-43" stroke-linecap="round" fill="none" ed:parentid="233" id="254" transform="matrix(1,0,0,1,820,1994)" ed:tosuperid="253" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,23C2.3,23,-6.3,-23,13.5,-23" stroke-linecap="round" fill="none" ed:parentid="233" id="256" transform="matrix(1,0,0,1,820,2014)" ed:tosuperid="255" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,10C-0.4,10,-0,-10,13.5,-10" stroke-linecap="round" fill="none" ed:parentid="233" id="258" transform="matrix(1,0,0,1,820,2027)" ed:tosuperid="257" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-3C-2,-3,3.8,3,13.5,3" stroke-linecap="round" fill="none" ed:parentid="233" id="260" transform="matrix(1,0,0,1,820,2040)" ed:tosuperid="259" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-30C3.5,-30,-9.1,30,13.5,30" stroke-linecap="round" fill="none" ed:parentid="233" id="262" transform="matrix(1,0,0,1,820,2067)" ed:tosuperid="261" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-43C5,-43,-12.5,43,13.5,43" stroke-linecap="round" fill="none" ed:parentid="233" id="264" transform="matrix(1,0,0,1,820,2080)" ed:tosuperid="263" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-56C5.4,-56,-13.5,56,13.5,56" stroke-linecap="round" fill="none" ed:parentid="233" id="266" transform="matrix(1,0,0,1,820,2093)" ed:tosuperid="265" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-69C5.4,-69,-13.5,69,13.5,69" stroke-linecap="round" fill="none" ed:parentid="233" id="268" transform="matrix(1,0,0,1,820,2106)" ed:tosuperid="267" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-82C5.4,-82,-13.5,82,13.5,82" stroke-linecap="round" fill="none" ed:parentid="233" id="270" transform="matrix(1,0,0,1,820,2119)" ed:tosuperid="269" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-102C5.4,-102,-13.5,102,13.5,102" stroke-linecap="round" fill="none" ed:parentid="233" id="272" transform="matrix(1,0,0,1,820,2139)" ed:tosuperid="271" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,9.5C-0.5,9.5,0.2,-9.5,13.5,-9.5" stroke-linecap="round" fill="none" ed:parentid="235" id="274" transform="matrix(1,0,0,1,856,2305)" ed:tosuperid="273" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-3.5C-1.9,-3.5,3.5,3.5,13.5,3.5" stroke-linecap="round" fill="none" ed:parentid="235" id="278" transform="matrix(1,0,0,1,856,2318)" ed:tosuperid="277" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-23.5C2.4,-23.5,-6.5,23.5,13.5,23.5" stroke-linecap="round" fill="none" ed:parentid="235" id="280" transform="matrix(1,0,0,1,856,2338)" ed:tosuperid="279" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,10C-0.4,10,-0,-10,13.5,-10" stroke-linecap="round" fill="none" ed:parentid="237" id="282" transform="matrix(1,0,0,1,880,2397)" ed:tosuperid="281" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-10C-0.4,-10,-0,10,13.5,10" stroke-linecap="round" fill="none" ed:parentid="237" id="284" transform="matrix(1,0,0,1,880,2417)" ed:tosuperid="283" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,36.5C4.4,36.5,-11.1,-36.5,13.5,-36.5" stroke-linecap="round" fill="none" ed:parentid="239" id="286" transform="matrix(1,0,0,1,880,2504)" ed:tosuperid="285" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,16.5C1,16.5,-3.3,-16.5,13.5,-16.5" stroke-linecap="round" fill="none" ed:parentid="239" id="288" transform="matrix(1,0,0,1,880,2524)" ed:tosuperid="287" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-3.5C-1.9,-3.5,3.5,3.5,13.5,3.5" stroke-linecap="round" fill="none" ed:parentid="239" id="290" transform="matrix(1,0,0,1,880,2544)" ed:tosuperid="289" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-16.5C1,-16.5,-3.3,16.5,13.5,16.5" stroke-linecap="round" fill="none" ed:parentid="239" id="292" transform="matrix(1,0,0,1,880,2557)" ed:tosuperid="291" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-43.5C5,-43.5,-12.6,43.5,13.5,43.5" stroke-linecap="round" fill="none" ed:parentid="239" id="294" transform="matrix(1,0,0,1,880,2584)" ed:tosuperid="293" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,60C5.4,60,-13.5,-60,13.5,-60" stroke-linecap="round" fill="none" ed:parentid="241" id="296" transform="matrix(1,0,0,1,988,2713)" ed:tosuperid="295" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,33C3.9,33,-10.1,-33,13.5,-33" stroke-linecap="round" fill="none" ed:parentid="241" id="298" transform="matrix(1,0,0,1,988,2740)" ed:tosuperid="297" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,20C1.8,20,-5,-20,13.5,-20" stroke-linecap="round" fill="none" ed:parentid="241" id="300" transform="matrix(1,0,0,1,988,2753)" ed:tosuperid="299" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,7C-1.1,7,1.6,-7,13.5,-7" stroke-linecap="round" fill="none" ed:parentid="241" id="302" transform="matrix(1,0,0,1,988,2766)" ed:tosuperid="301" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-13C0.3,-13,-1.6,13,13.5,13" stroke-linecap="round" fill="none" ed:parentid="241" id="304" transform="matrix(1,0,0,1,988,2786)" ed:tosuperid="303" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-33C3.9,-33,-10.1,33,13.5,33" stroke-linecap="round" fill="none" ed:parentid="241" id="307" transform="matrix(1,0,0,1,988,2806)" ed:tosuperid="306" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-60C5.4,-60,-13.5,60,13.5,60" stroke-linecap="round" fill="none" ed:parentid="241" id="309" transform="matrix(1,0,0,1,988,2833)" ed:tosuperid="308" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="243" id="311" transform="matrix(1,0,0,1,868,2919)" ed:tosuperid="310" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,267.1C5.4,267.1,-13.5,-267.1,13.5,-267.1" stroke-linecap="round" fill="none" ed:parentid="106" id="313" transform="matrix(1,0,0,1,741,3352)" ed:tosuperid="312" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,207.6C5.4,207.6,-13.5,-207.6,13.5,-207.6" stroke-linecap="round" fill="none" ed:parentid="106" id="315" transform="matrix(1,0,0,1,741,3411)" ed:tosuperid="314" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,184.6C5.4,184.6,-13.5,-184.6,13.5,-184.6" stroke-linecap="round" fill="none" ed:parentid="106" id="317" transform="matrix(1,0,0,1,741,3434)" ed:tosuperid="316" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,141.6C5.4,141.6,-13.5,-141.6,13.5,-141.6" stroke-linecap="round" fill="none" ed:parentid="106" id="319" transform="matrix(1,0,0,1,741,3477)" ed:tosuperid="318" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-74.4C5.4,-74.4,-13.5,74.4,13.5,74.4" stroke-linecap="round" fill="none" ed:parentid="106" id="321" transform="matrix(1,0,0,1,741,3693)" ed:tosuperid="320" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-263.9C5.4,-263.9,-13.5,263.9,13.5,263.9" stroke-linecap="round" fill="none" ed:parentid="106" id="323" transform="matrix(1,0,0,1,741,3883)" ed:tosuperid="322" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-300.4C5.4,-300.4,-13.5,300.4,13.5,300.4" stroke-linecap="round" fill="none" ed:parentid="106" id="325" transform="matrix(1,0,0,1,741,3919)" ed:tosuperid="324" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-333.4C5.4,-333.4,-13.5,333.4,13.5,333.4" stroke-linecap="round" fill="none" ed:parentid="106" id="327" transform="matrix(1,0,0,1,741,3952)" ed:tosuperid="326" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,316.6C5.4,316.6,-13.5,-316.6,13.5,-316.6" stroke-linecap="round" fill="none" ed:parentid="106" id="329" transform="matrix(1,0,0,1,741,3302)" ed:tosuperid="328" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,29.5C3.4,29.5,-8.9,-29.5,13.5,-29.5" stroke-linecap="round" fill="none" ed:parentid="312" id="331" transform="matrix(1,0,0,1,930,3055)" ed:tosuperid="330" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,9.5C-0.5,9.5,0.2,-9.5,13.5,-9.5" stroke-linecap="round" fill="none" ed:parentid="312" id="333" transform="matrix(1,0,0,1,930,3075)" ed:tosuperid="332" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-10.5C-0.3,-10.5,-0.3,10.5,13.5,10.5" stroke-linecap="round" fill="none" ed:parentid="312" id="335" transform="matrix(1,0,0,1,930,3095)" ed:tosuperid="334" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-23.5C2.4,-23.5,-6.5,23.5,13.5,23.5" stroke-linecap="round" fill="none" ed:parentid="312" id="337" transform="matrix(1,0,0,1,930,3108)" ed:tosuperid="336" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-36.5C4.4,-36.5,-11.1,36.5,13.5,36.5" stroke-linecap="round" fill="none" ed:parentid="312" id="339" transform="matrix(1,0,0,1,930,3121)" ed:tosuperid="338" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,10C-0.4,10,-0,-10,13.5,-10" stroke-linecap="round" fill="none" ed:parentid="314" id="341" transform="matrix(1,0,0,1,906,3194)" ed:tosuperid="340" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-10C-0.4,-10,-0,10,13.5,10" stroke-linecap="round" fill="none" ed:parentid="314" id="343" transform="matrix(1,0,0,1,906,3214)" ed:tosuperid="342" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="316" id="345" transform="matrix(1,0,0,1,906,3250)" ed:tosuperid="344" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,30C3.5,30,-9.1,-30,13.5,-30" stroke-linecap="round" fill="none" ed:parentid="318" id="351" transform="matrix(1,0,0,1,918,3306)" ed:tosuperid="350" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,10C-0.4,10,-0,-10,13.5,-10" stroke-linecap="round" fill="none" ed:parentid="318" id="353" transform="matrix(1,0,0,1,918,3326)" ed:tosuperid="352" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-10C-0.4,-10,-0,10,13.5,10" stroke-linecap="round" fill="none" ed:parentid="318" id="355" transform="matrix(1,0,0,1,918,3346)" ed:tosuperid="354" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-30C3.5,-30,-9.1,30,13.5,30" stroke-linecap="round" fill="none" ed:parentid="318" id="357" transform="matrix(1,0,0,1,918,3366)" ed:tosuperid="356" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,173C5.4,173,-13.5,-173,13.5,-173" stroke-linecap="round" fill="none" ed:parentid="320" id="359" transform="matrix(1,0,0,1,918,3595)" ed:tosuperid="358" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,153C5.4,153,-13.5,-153,13.5,-153" stroke-linecap="round" fill="none" ed:parentid="320" id="361" transform="matrix(1,0,0,1,918,3615)" ed:tosuperid="360" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,140C5.4,140,-13.5,-140,13.5,-140" stroke-linecap="round" fill="none" ed:parentid="320" id="363" transform="matrix(1,0,0,1,918,3628)" ed:tosuperid="362" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,127C5.4,127,-13.5,-127,13.5,-127" stroke-linecap="round" fill="none" ed:parentid="320" id="365" transform="matrix(1,0,0,1,918,3641)" ed:tosuperid="364" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,114C5.4,114,-13.5,-114,13.5,-114" stroke-linecap="round" fill="none" ed:parentid="320" id="367" transform="matrix(1,0,0,1,918,3654)" ed:tosuperid="366" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,94C5.4,94,-13.5,-94,13.5,-94" stroke-linecap="round" fill="none" ed:parentid="320" id="369" transform="matrix(1,0,0,1,918,3674)" ed:tosuperid="368" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,74C5.4,74,-13.5,-74,13.5,-74" stroke-linecap="round" fill="none" ed:parentid="320" id="371" transform="matrix(1,0,0,1,918,3694)" ed:tosuperid="370" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,54C5.4,54,-13.5,-54,13.5,-54" stroke-linecap="round" fill="none" ed:parentid="320" id="373" transform="matrix(1,0,0,1,918,3714)" ed:tosuperid="372" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,41C4.8,41,-12.2,-41,13.5,-41" stroke-linecap="round" fill="none" ed:parentid="320" id="375" transform="matrix(1,0,0,1,918,3727)" ed:tosuperid="374" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,21C1.9,21,-5.4,-21,13.5,-21" stroke-linecap="round" fill="none" ed:parentid="320" id="377" transform="matrix(1,0,0,1,918,3747)" ed:tosuperid="376" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,1C-2.7,1,5.4,-1,13.5,-1" stroke-linecap="round" fill="none" ed:parentid="320" id="379" transform="matrix(1,0,0,1,918,3767)" ed:tosuperid="378" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-19C1.6,-19,-4.5,19,13.5,19" stroke-linecap="round" fill="none" ed:parentid="320" id="381" transform="matrix(1,0,0,1,918,3787)" ed:tosuperid="380" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-39C4.6,-39,-11.7,39,13.5,39" stroke-linecap="round" fill="none" ed:parentid="320" id="383" transform="matrix(1,0,0,1,918,3807)" ed:tosuperid="382" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-66C5.4,-66,-13.5,66,13.5,66" stroke-linecap="round" fill="none" ed:parentid="320" id="385" transform="matrix(1,0,0,1,918,3834)" ed:tosuperid="384" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-100C5.4,-100,-13.5,100,13.5,100" stroke-linecap="round" fill="none" ed:parentid="320" id="387" transform="matrix(1,0,0,1,918,3868)" ed:tosuperid="386" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-120C5.4,-120,-13.5,120,13.5,120" stroke-linecap="round" fill="none" ed:parentid="320" id="389" transform="matrix(1,0,0,1,918,3888)" ed:tosuperid="388" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-140C5.4,-140,-13.5,140,13.5,140" stroke-linecap="round" fill="none" ed:parentid="320" id="391" transform="matrix(1,0,0,1,918,3908)" ed:tosuperid="390" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-160C5.4,-160,-13.5,160,13.5,160" stroke-linecap="round" fill="none" ed:parentid="320" id="393" transform="matrix(1,0,0,1,918,3928)" ed:tosuperid="392" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-173C5.4,-173,-13.5,173,13.5,173" stroke-linecap="round" fill="none" ed:parentid="320" id="397" transform="matrix(1,0,0,1,918,3941)" ed:tosuperid="396" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-3.5C-1.9,-3.5,3.5,3.5,13.5,3.5" stroke-linecap="round" fill="none" ed:parentid="322" id="399" transform="matrix(1,0,0,1,966,4150)" ed:tosuperid="398" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,13C0.3,13,-1.6,-13,13.5,-13" stroke-linecap="round" fill="none" ed:parentid="324" id="401" transform="matrix(1,0,0,1,978,4207)" ed:tosuperid="400" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="324" id="403" transform="matrix(1,0,0,1,978,4220)" ed:tosuperid="402" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-20C1.8,-20,-5,20,13.5,20" stroke-linecap="round" fill="none" ed:parentid="324" id="405" transform="matrix(1,0,0,1,978,4240)" ed:tosuperid="404" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,18.1C1.4,18.1,-4.1,-18.1,13.5,-18.1" stroke-linecap="round" fill="none" ed:parentid="108" id="407" transform="matrix(1,0,0,1,689,4442)" ed:tosuperid="406" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-4.9C-1.6,-4.9,2.7,4.9,13.5,4.9" stroke-linecap="round" fill="none" ed:parentid="108" id="409" transform="matrix(1,0,0,1,689,4465)" ed:tosuperid="408" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-21.4C2,-21.4,-5.6,21.4,13.5,21.4" stroke-linecap="round" fill="none" ed:parentid="108" id="411" transform="matrix(1,0,0,1,689,4482)" ed:tosuperid="410" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-37.9C4.5,-37.9,-11.5,37.9,13.5,37.9" stroke-linecap="round" fill="none" ed:parentid="108" id="413" transform="matrix(1,0,0,1,689,4498)" ed:tosuperid="412" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-50.9C5.4,-50.9,-13.4,50.9,13.5,50.9" stroke-linecap="round" fill="none" ed:parentid="108" id="415" transform="matrix(1,0,0,1,689,4511)" ed:tosuperid="414" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,61.1C5.4,61.1,-13.5,-61.1,13.5,-61.1" stroke-linecap="round" fill="none" ed:parentid="108" id="417" transform="matrix(1,0,0,1,689,4399)" ed:tosuperid="416" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,41.1C4.8,41.1,-12.2,-41.1,13.5,-41.1" stroke-linecap="round" fill="none" ed:parentid="108" id="419" transform="matrix(1,0,0,1,689,4419)" ed:tosuperid="418" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" stroke-linecap="round" fill="none" ed:parentid="406" id="421" transform="matrix(1,0,0,1,848,4421)" ed:tosuperid="420" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-10C-0.4,-10,-0,10,13.5,10" stroke-linecap="round" fill="none" ed:parentid="406" id="423" transform="matrix(1,0,0,1,848,4434)" ed:tosuperid="422" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-3.5C-1.9,-3.5,3.5,3.5,13.5,3.5" stroke-linecap="round" fill="none" ed:parentid="410" id="427" transform="matrix(1,0,0,1,920,4507)" ed:tosuperid="426" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-70.9C5.4,-70.9,-13.5,70.9,13.5,70.9" stroke-linecap="round" fill="none" ed:parentid="108" id="431" transform="matrix(1,0,0,1,689,4531)" ed:tosuperid="430" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,194.1C5.4,194.1,-13.5,-194.1,13.5,-194.1" stroke-linecap="round" fill="none" ed:parentid="114" id="433" transform="matrix(1,0,0,1,722,6530)" ed:tosuperid="432" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,167.1C5.4,167.1,-13.5,-167.1,13.5,-167.1" stroke-linecap="round" fill="none" ed:parentid="114" id="435" transform="matrix(1,0,0,1,722,6557)" ed:tosuperid="434" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,140.1C5.4,140.1,-13.5,-140.1,13.5,-140.1" stroke-linecap="round" fill="none" ed:parentid="114" id="437" transform="matrix(1,0,0,1,722,6584)" ed:tosuperid="436" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,120.1C5.4,120.1,-13.5,-120.1,13.5,-120.1" stroke-linecap="round" fill="none" ed:parentid="114" id="439" transform="matrix(1,0,0,1,722,6604)" ed:tosuperid="438" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,93.1C5.4,93.1,-13.5,-93.1,13.5,-93.1" stroke-linecap="round" fill="none" ed:parentid="114" id="441" transform="matrix(1,0,0,1,722,6631)" ed:tosuperid="440" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,80.1C5.4,80.1,-13.5,-80.1,13.5,-80.1" stroke-linecap="round" fill="none" ed:parentid="114" id="443" transform="matrix(1,0,0,1,722,6644)" ed:tosuperid="442" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,40.1C4.7,40.1,-12,-40.1,13.5,-40.1" stroke-linecap="round" fill="none" ed:parentid="114" id="445" transform="matrix(1,0,0,1,722,6684)" ed:tosuperid="444" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-22.9C2.3,-22.9,-6.3,22.9,13.5,22.9" stroke-linecap="round" fill="none" ed:parentid="114" id="447" transform="matrix(1,0,0,1,722,6747)" ed:tosuperid="446" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-62.4C5.4,-62.4,-13.5,62.4,13.5,62.4" stroke-linecap="round" fill="none" ed:parentid="114" id="449" transform="matrix(1,0,0,1,722,6786)" ed:tosuperid="448" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-98.9C5.4,-98.9,-13.5,98.9,13.5,98.9" stroke-linecap="round" fill="none" ed:parentid="114" id="451" transform="matrix(1,0,0,1,722,6823)" ed:tosuperid="450" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-131.9C5.4,-131.9,-13.5,131.9,13.5,131.9" stroke-linecap="round" fill="none" ed:parentid="114" id="453" transform="matrix(1,0,0,1,722,6856)" ed:tosuperid="452" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-144.9C5.4,-144.9,-13.5,144.9,13.5,144.9" stroke-linecap="round" fill="none" ed:parentid="114" id="455" transform="matrix(1,0,0,1,722,6869)" ed:tosuperid="454" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-184.4C5.4,-184.4,-13.5,184.4,13.5,184.4" stroke-linecap="round" fill="none" ed:parentid="114" id="457" transform="matrix(1,0,0,1,722,6908)" ed:tosuperid="456" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,27C3,27,-8,-27,13.5,-27" stroke-linecap="round" fill="none" ed:parentid="444" id="459" transform="matrix(1,0,0,1,911,6617)" ed:tosuperid="458" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,7C-1.1,7,1.6,-7,13.5,-7" stroke-linecap="round" fill="none" ed:parentid="444" id="463" transform="matrix(1,0,0,1,911,6637)" ed:tosuperid="462" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-27C3,-27,-8,27,13.5,27" stroke-linecap="round" fill="none" ed:parentid="444" id="465" transform="matrix(1,0,0,1,911,6671)" ed:tosuperid="464" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,23C2.3,23,-6.3,-23,13.5,-23" stroke-linecap="round" fill="none" ed:parentid="446" id="467" transform="matrix(1,0,0,1,887,6747)" ed:tosuperid="466" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,10C-0.4,10,-0,-10,13.5,-10" stroke-linecap="round" fill="none" ed:parentid="446" id="469" transform="matrix(1,0,0,1,887,6760)" ed:tosuperid="468" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-10C-0.4,-10,-0,10,13.5,10" stroke-linecap="round" fill="none" ed:parentid="446" id="471" transform="matrix(1,0,0,1,887,6780)" ed:tosuperid="470" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-23C2.3,-23,-6.3,23,13.5,23" stroke-linecap="round" fill="none" ed:parentid="446" id="473" transform="matrix(1,0,0,1,887,6793)" ed:tosuperid="472" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-3.5C-1.9,-3.5,3.5,3.5,13.5,3.5" stroke-linecap="round" fill="none" ed:parentid="448" id="475" transform="matrix(1,0,0,1,899,6852)" ed:tosuperid="474" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,20C1.8,20,-5,-20,13.5,-20" stroke-linecap="round" fill="none" ed:parentid="450" id="479" transform="matrix(1,0,0,1,1007,6902)" ed:tosuperid="478" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-7C-1.1,-7,1.6,7,13.5,7" stroke-linecap="round" fill="none" ed:parentid="450" id="481" transform="matrix(1,0,0,1,1007,6929)" ed:tosuperid="480" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-20C1.8,-20,-5,20,13.5,20" stroke-linecap="round" fill="none" ed:parentid="450" id="483" transform="matrix(1,0,0,1,1007,6942)" ed:tosuperid="482" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="452" id="485" transform="matrix(1,0,0,1,995,6988)" ed:tosuperid="484" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="454" id="489" transform="matrix(1,0,0,1,1055,7014)" ed:tosuperid="488" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,26.5C2.9,26.5,-7.8,-26.5,13.5,-26.5" stroke-linecap="round" fill="none" ed:parentid="456" id="493" transform="matrix(1,0,0,1,1013,7066)" ed:tosuperid="492" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,6.5C-1.2,6.5,1.8,-6.5,13.5,-6.5" stroke-linecap="round" fill="none" ed:parentid="456" id="495" transform="matrix(1,0,0,1,1013,7086)" ed:tosuperid="494" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-13.5C0.4,-13.5,-1.8,13.5,13.5,13.5" stroke-linecap="round" fill="none" ed:parentid="456" id="497" transform="matrix(1,0,0,1,1013,7106)" ed:tosuperid="496" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-26.5C2.9,-26.5,-7.8,26.5,13.5,26.5" stroke-linecap="round" fill="none" ed:parentid="456" id="499" transform="matrix(1,0,0,1,1013,7119)" ed:tosuperid="498" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,41.6C4.9,41.6,-12.3,-41.6,13.5,-41.6" stroke-linecap="round" fill="none" ed:parentid="116" id="501" transform="matrix(1,0,0,1,622,7307)" ed:tosuperid="500" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,15.1C0.7,15.1,-2.6,-15.1,13.5,-15.1" stroke-linecap="round" fill="none" ed:parentid="116" id="503" transform="matrix(1,0,0,1,622,7333)" ed:tosuperid="502" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-7.9C-0.9,-7.9,1.1,7.9,13.5,7.9" stroke-linecap="round" fill="none" ed:parentid="116" id="505" transform="matrix(1,0,0,1,622,7356)" ed:tosuperid="504" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-57.9C5.4,-57.9,-13.5,57.9,13.5,57.9" stroke-linecap="round" fill="none" ed:parentid="116" id="507" transform="matrix(1,0,0,1,622,7406)" ed:tosuperid="506" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,68.1C5.4,68.1,-13.5,-68.1,13.5,-68.1" stroke-linecap="round" fill="none" ed:parentid="116" id="509" transform="matrix(1,0,0,1,622,7280)" ed:tosuperid="508" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,6.5C-1.2,6.5,1.8,-6.5,13.5,-6.5" stroke-linecap="round" fill="none" ed:parentid="500" id="511" transform="matrix(1,0,0,1,871,7259)" ed:tosuperid="510" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-13.5C0.4,-13.5,-1.8,13.5,13.5,13.5" stroke-linecap="round" fill="none" ed:parentid="500" id="513" transform="matrix(1,0,0,1,871,7279)" ed:tosuperid="512" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="502" id="515" transform="matrix(1,0,0,1,811,7318)" ed:tosuperid="514" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" stroke-linecap="round" fill="none" ed:parentid="504" id="521" transform="matrix(1,0,0,1,877,7361)" ed:tosuperid="520" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-10C-0.4,-10,-0,10,13.5,10" stroke-linecap="round" fill="none" ed:parentid="504" id="523" transform="matrix(1,0,0,1,877,7374)" ed:tosuperid="522" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,13C0.3,13,-1.6,-13,13.5,-13" stroke-linecap="round" fill="none" ed:parentid="506" id="525" transform="matrix(1,0,0,1,859,7451)" ed:tosuperid="524" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-7C-1.1,-7,1.6,7,13.5,7" stroke-linecap="round" fill="none" ed:parentid="506" id="527" transform="matrix(1,0,0,1,859,7471)" ed:tosuperid="526" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-27C3,-27,-8,27,13.5,27" stroke-linecap="round" fill="none" ed:parentid="506" id="529" transform="matrix(1,0,0,1,859,7491)" ed:tosuperid="528" stroke-linejoin="round"/><path stroke="#696969" d="M-85.4,-1855.5C28.3,-1517.4,-94.8,1882.5,105.3,1882.5" stroke-linecap="round" fill="none" ed:parentid="101" id="531" transform="matrix(1,0,0,1,276,5831)" ed:tosuperid="530" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,58.1C5.4,58.1,-13.5,-58.1,13.5,-58.1" stroke-linecap="round" fill="none" ed:parentid="530" id="533" transform="matrix(1,0,0,1,464,7656)" ed:tosuperid="532" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,18.1C1.4,18.1,-4.1,-18.1,13.5,-18.1" stroke-linecap="round" fill="none" ed:parentid="530" id="535" transform="matrix(1,0,0,1,464,7696)" ed:tosuperid="534" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-18.4C1.4,-18.4,-4.2,18.4,13.5,18.4" stroke-linecap="round" fill="none" ed:parentid="530" id="537" transform="matrix(1,0,0,1,464,7732)" ed:tosuperid="536" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-61.4C5.4,-61.4,-13.5,61.4,13.5,61.4" stroke-linecap="round" fill="none" ed:parentid="530" id="539" transform="matrix(1,0,0,1,464,7775)" ed:tosuperid="538" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,6.5C-1.2,6.5,1.8,-6.5,13.5,-6.5" stroke-linecap="round" fill="none" ed:parentid="532" id="541" transform="matrix(1,0,0,1,689,7591)" ed:tosuperid="540" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-13.5C0.4,-13.5,-1.8,13.5,13.5,13.5" stroke-linecap="round" fill="none" ed:parentid="532" id="543" transform="matrix(1,0,0,1,689,7611)" ed:tosuperid="542" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,13.5C0.4,13.5,-1.8,-13.5,13.5,-13.5" stroke-linecap="round" fill="none" ed:parentid="534" id="547" transform="matrix(1,0,0,1,731,7664)" ed:tosuperid="546" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-13.5C0.4,-13.5,-1.8,13.5,13.5,13.5" stroke-linecap="round" fill="none" ed:parentid="534" id="549" transform="matrix(1,0,0,1,731,7691)" ed:tosuperid="548" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" stroke-linecap="round" fill="none" ed:parentid="536" id="551" transform="matrix(1,0,0,1,689,7748)" ed:tosuperid="550" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-10C-0.4,-10,-0,10,13.5,10" stroke-linecap="round" fill="none" ed:parentid="536" id="553" transform="matrix(1,0,0,1,689,7761)" ed:tosuperid="552" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,13C0.3,13,-1.6,-13,13.5,-13" stroke-linecap="round" fill="none" ed:parentid="538" id="555" transform="matrix(1,0,0,1,653,7824)" ed:tosuperid="554" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="538" id="557" transform="matrix(1,0,0,1,653,7837)" ed:tosuperid="556" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-20C1.8,-20,-5,20,13.5,20" stroke-linecap="round" fill="none" ed:parentid="538" id="559" transform="matrix(1,0,0,1,653,7857)" ed:tosuperid="558" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,166.1C5.4,166.1,-13.5,-166.1,13.5,-166.1" stroke-linecap="round" fill="none" ed:parentid="110" id="561" transform="matrix(1,0,0,1,671,5027)" ed:tosuperid="560" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,71.6C5.4,71.6,-13.5,-71.6,13.5,-71.6" stroke-linecap="round" fill="none" ed:parentid="112" id="563" transform="matrix(1,0,0,1,687,5955)" ed:tosuperid="562" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,143.1C5.4,143.1,-13.5,-143.1,13.5,-143.1" stroke-linecap="round" fill="none" ed:parentid="110" id="565" transform="matrix(1,0,0,1,671,5050)" ed:tosuperid="564" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,130.1C5.4,130.1,-13.5,-130.1,13.5,-130.1" stroke-linecap="round" fill="none" ed:parentid="110" id="567" transform="matrix(1,0,0,1,671,5063)" ed:tosuperid="566" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,11.6C-0,11.6,-0.9,-11.6,13.5,-11.6" stroke-linecap="round" fill="none" ed:parentid="110" id="569" transform="matrix(1,0,0,1,671,5181)" ed:tosuperid="568" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-116.9C5.4,-116.9,-13.5,116.9,13.5,116.9" stroke-linecap="round" fill="none" ed:parentid="110" id="571" transform="matrix(1,0,0,1,671,5310)" ed:tosuperid="570" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-139.9C5.4,-139.9,-13.5,139.9,13.5,139.9" stroke-linecap="round" fill="none" ed:parentid="110" id="573" transform="matrix(1,0,0,1,671,5333)" ed:tosuperid="572" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-156.4C5.4,-156.4,-13.5,156.4,13.5,156.4" stroke-linecap="round" fill="none" ed:parentid="110" id="575" transform="matrix(1,0,0,1,671,5349)" ed:tosuperid="574" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-172.9C5.4,-172.9,-13.5,172.9,13.5,172.9" stroke-linecap="round" fill="none" ed:parentid="110" id="577" transform="matrix(1,0,0,1,671,5366)" ed:tosuperid="576" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-202.4C5.4,-202.4,-13.5,202.4,13.5,202.4" stroke-linecap="round" fill="none" ed:parentid="110" id="579" transform="matrix(1,0,0,1,671,5395)" ed:tosuperid="578" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-238.9C5.4,-238.9,-13.5,238.9,13.5,238.9" stroke-linecap="round" fill="none" ed:parentid="110" id="581" transform="matrix(1,0,0,1,671,5432)" ed:tosuperid="580" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-258.9C5.4,-258.9,-13.5,258.9,13.5,258.9" stroke-linecap="round" fill="none" ed:parentid="110" id="583" transform="matrix(1,0,0,1,671,5452)" ed:tosuperid="582" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-1.4C-2.4,-1.4,4.6,1.4,13.5,1.4" stroke-linecap="round" fill="none" ed:parentid="112" id="585" transform="matrix(1,0,0,1,687,6028)" ed:tosuperid="584" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-57.9C5.4,-57.9,-13.5,57.9,13.5,57.9" stroke-linecap="round" fill="none" ed:parentid="112" id="587" transform="matrix(1,0,0,1,687,6084)" ed:tosuperid="586" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-84.4C5.4,-84.4,-13.5,84.4,13.5,84.4" stroke-linecap="round" fill="none" ed:parentid="112" id="589" transform="matrix(1,0,0,1,687,6111)" ed:tosuperid="588" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-114.4C5.4,-114.4,-13.5,114.4,13.5,114.4" stroke-linecap="round" fill="none" ed:parentid="112" id="591" transform="matrix(1,0,0,1,687,6141)" ed:tosuperid="590" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,269.1C5.4,269.1,-13.5,-269.1,13.5,-269.1" stroke-linecap="round" fill="none" ed:parentid="110" id="593" transform="matrix(1,0,0,1,671,4924)" ed:tosuperid="592" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,256.1C5.4,256.1,-13.5,-256.1,13.5,-256.1" stroke-linecap="round" fill="none" ed:parentid="110" id="595" transform="matrix(1,0,0,1,671,4937)" ed:tosuperid="594" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,236.1C5.4,236.1,-13.5,-236.1,13.5,-236.1" stroke-linecap="round" fill="none" ed:parentid="110" id="597" transform="matrix(1,0,0,1,671,4957)" ed:tosuperid="596" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,216.1C5.4,216.1,-13.5,-216.1,13.5,-216.1" stroke-linecap="round" fill="none" ed:parentid="110" id="599" transform="matrix(1,0,0,1,671,4977)" ed:tosuperid="598" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,189.1C5.4,189.1,-13.5,-189.1,13.5,-189.1" stroke-linecap="round" fill="none" ed:parentid="110" id="601" transform="matrix(1,0,0,1,671,5004)" ed:tosuperid="600" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" stroke-linecap="round" fill="none" ed:parentid="560" id="603" transform="matrix(1,0,0,1,788,4858)" ed:tosuperid="602" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-10C-0.4,-10,-0,10,13.5,10" stroke-linecap="round" fill="none" ed:parentid="560" id="605" transform="matrix(1,0,0,1,788,4871)" ed:tosuperid="604" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,105.5C5.4,105.5,-13.5,-105.5,13.5,-105.5" stroke-linecap="round" fill="none" ed:parentid="568" id="607" transform="matrix(1,0,0,1,854,5064)" ed:tosuperid="606" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,85.5C5.4,85.5,-13.5,-85.5,13.5,-85.5" stroke-linecap="round" fill="none" ed:parentid="568" id="609" transform="matrix(1,0,0,1,854,5084)" ed:tosuperid="608" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,58.5C5.4,58.5,-13.5,-58.5,13.5,-58.5" stroke-linecap="round" fill="none" ed:parentid="568" id="611" transform="matrix(1,0,0,1,854,5111)" ed:tosuperid="610" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,38.5C4.6,38.5,-11.6,-38.5,13.5,-38.5" stroke-linecap="round" fill="none" ed:parentid="568" id="613" transform="matrix(1,0,0,1,854,5131)" ed:tosuperid="612" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,25.5C2.8,25.5,-7.4,-25.5,13.5,-25.5" stroke-linecap="round" fill="none" ed:parentid="568" id="615" transform="matrix(1,0,0,1,854,5144)" ed:tosuperid="614" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" stroke-linecap="round" fill="none" ed:parentid="568" id="617" transform="matrix(1,0,0,1,854,5157)" ed:tosuperid="616" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-0.5C-2.7,-0.5,5.4,0.5,13.5,0.5" stroke-linecap="round" fill="none" ed:parentid="568" id="619" transform="matrix(1,0,0,1,854,5170)" ed:tosuperid="618" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-13.5C0.4,-13.5,-1.8,13.5,13.5,13.5" stroke-linecap="round" fill="none" ed:parentid="568" id="621" transform="matrix(1,0,0,1,854,5183)" ed:tosuperid="620" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-26.5C2.9,-26.5,-7.8,26.5,13.5,26.5" stroke-linecap="round" fill="none" ed:parentid="568" id="623" transform="matrix(1,0,0,1,854,5196)" ed:tosuperid="622" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-46.5C5.2,-46.5,-13.1,46.5,13.5,46.5" stroke-linecap="round" fill="none" ed:parentid="568" id="625" transform="matrix(1,0,0,1,854,5216)" ed:tosuperid="624" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-59.5C5.4,-59.5,-13.5,59.5,13.5,59.5" stroke-linecap="round" fill="none" ed:parentid="568" id="627" transform="matrix(1,0,0,1,854,5229)" ed:tosuperid="626" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-72.5C5.4,-72.5,-13.5,72.5,13.5,72.5" stroke-linecap="round" fill="none" ed:parentid="568" id="629" transform="matrix(1,0,0,1,854,5242)" ed:tosuperid="628" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-92.5C5.4,-92.5,-13.5,92.5,13.5,92.5" stroke-linecap="round" fill="none" ed:parentid="568" id="631" transform="matrix(1,0,0,1,854,5262)" ed:tosuperid="630" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-105.5C5.4,-105.5,-13.5,105.5,13.5,105.5" stroke-linecap="round" fill="none" ed:parentid="568" id="633" transform="matrix(1,0,0,1,854,5275)" ed:tosuperid="632" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" stroke-linecap="round" fill="none" ed:parentid="570" id="635" transform="matrix(1,0,0,1,812,5424)" ed:tosuperid="634" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-10C-0.4,-10,-0,10,13.5,10" stroke-linecap="round" fill="none" ed:parentid="570" id="637" transform="matrix(1,0,0,1,812,5437)" ed:tosuperid="636" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-3.5C-1.9,-3.5,3.5,3.5,13.5,3.5" stroke-linecap="round" fill="none" ed:parentid="574" id="641" transform="matrix(1,0,0,1,764,5509)" ed:tosuperid="640" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,16.5C1,16.5,-3.3,-16.5,13.5,-16.5" stroke-linecap="round" fill="none" ed:parentid="578" id="645" transform="matrix(1,0,0,1,830,5581)" ed:tosuperid="644" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3.5C-1.9,3.5,3.5,-3.5,13.5,-3.5" stroke-linecap="round" fill="none" ed:parentid="578" id="647" transform="matrix(1,0,0,1,830,5594)" ed:tosuperid="646" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-16.5C1,-16.5,-3.3,16.5,13.5,16.5" stroke-linecap="round" fill="none" ed:parentid="578" id="649" transform="matrix(1,0,0,1,830,5614)" ed:tosuperid="648" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-7C-1.1,-7,1.6,7,13.5,7" stroke-linecap="round" fill="none" ed:parentid="580" id="653" transform="matrix(1,0,0,1,944,5678)" ed:tosuperid="652" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-278.9C5.4,-278.9,-13.5,278.9,13.5,278.9" stroke-linecap="round" fill="none" ed:parentid="110" id="657" transform="matrix(1,0,0,1,671,5472)" ed:tosuperid="656" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,104.6C5.4,104.6,-13.5,-104.6,13.5,-104.6" stroke-linecap="round" fill="none" ed:parentid="112" id="659" transform="matrix(1,0,0,1,687,5922)" ed:tosuperid="658" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,20C1.8,20,-5,-20,13.5,-20" stroke-linecap="round" fill="none" ed:parentid="562" id="661" transform="matrix(1,0,0,1,876,5863)" ed:tosuperid="660" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,7C-1.1,7,1.6,-7,13.5,-7" stroke-linecap="round" fill="none" ed:parentid="562" id="663" transform="matrix(1,0,0,1,876,5876)" ed:tosuperid="662" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-20C1.8,-20,-5,20,13.5,20" stroke-linecap="round" fill="none" ed:parentid="562" id="665" transform="matrix(1,0,0,1,876,5903)" ed:tosuperid="664" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,40C4.7,40,-12,-40,13.5,-40" stroke-linecap="round" fill="none" ed:parentid="584" id="667" transform="matrix(1,0,0,1,840,5989)" ed:tosuperid="666" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,20C1.8,20,-5,-20,13.5,-20" stroke-linecap="round" fill="none" ed:parentid="584" id="669" transform="matrix(1,0,0,1,840,6009)" ed:tosuperid="668" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="584" id="671" transform="matrix(1,0,0,1,840,6029)" ed:tosuperid="670" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-20C1.8,-20,-5,20,13.5,20" stroke-linecap="round" fill="none" ed:parentid="584" id="673" transform="matrix(1,0,0,1,840,6049)" ed:tosuperid="672" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-40C4.7,-40,-12,40,13.5,40" stroke-linecap="round" fill="none" ed:parentid="584" id="675" transform="matrix(1,0,0,1,840,6069)" ed:tosuperid="674" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-3.5C-1.9,-3.5,3.5,3.5,13.5,3.5" stroke-linecap="round" fill="none" ed:parentid="586" id="677" transform="matrix(1,0,0,1,852,6146)" ed:tosuperid="676" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" stroke-linecap="round" fill="none" ed:parentid="588" id="679" transform="matrix(1,0,0,1,852,6192)" ed:tosuperid="678" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-10C-0.4,-10,-0,10,13.5,10" stroke-linecap="round" fill="none" ed:parentid="588" id="681" transform="matrix(1,0,0,1,852,6205)" ed:tosuperid="680" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-7C-1.1,-7,1.6,7,13.5,7" stroke-linecap="round" fill="none" ed:parentid="590" id="683" transform="matrix(1,0,0,1,828,6262)" ed:tosuperid="682" stroke-linejoin="round"/><g ed:layout="rightmap" id="101" transform="matrix(1,0,0,1,23,3922)" ed:width="295" ed:height="54" ed:topictype="mainidea"><path d="M4,0L291,0C293.7,0,295,1.3,295,4L295,50C295,52.7,293.7,54,291,54L4,54C1.3,54,0,52.7,0,50L0,4C0,1.3,1.3,0,4,0z" stroke="#435fbc" stroke-width="3" fill="#435fbc" stroke-linejoin="round"/><text class="st1"><tspan y="34.9" style="white-space:pre" x="21">《DevOps和自动化运维实践》</tspan></text></g><g ed:parentid="101" id="102" transform="matrix(1,0,0,1,381,884)" ed:width="268" ed:height="33"><path d="M4,0L264,0C266.7,0,268,1.3,268,4L268,29C268,31.7,266.7,33,264,33L4,33C1.3,33,0,31.7,0,29L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="22.9" style="white-space:pre" x="18">第1章 DevOps与自动化运维第意义</tspan></text></g><g ed:parentid="101" id="104" transform="matrix(1,0,0,1,381,2350)" ed:width="278" ed:height="33"><path d="M4,0L274,0C276.7,0,278,1.3,278,4L278,29C278,31.7,276.7,33,274,33L4,33C1.3,33,0,31.7,0,29L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="22.9" style="white-space:pre" x="18">第2章 Shell脚本在DevOps下的应用</tspan></text></g><g ed:parentid="101" id="106" transform="matrix(1,0,0,1,381,3602)" ed:width="346" ed:height="33"><path d="M4,0L342,0C344.7,0,346,1.3,346,4L346,29C346,31.7,344.7,33,342,33L4,33C1.3,33,0,31.7,0,29L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="22.9" style="white-space:pre" x="18">第3章 Python在DevOps与自动化运维中第应用</tspan></text></g><g ed:parentid="101" id="108" transform="matrix(1,0,0,1,381,4444)" ed:width="294" ed:height="33"><path d="M4,0L290,0C292.7,0,294,1.3,294,4L294,29C294,31.7,292.7,33,290,33L4,33C1.3,33,0,31.7,0,29L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="22.9" style="white-space:pre" x="18">第4章 Vagrant在DevOps环境中的应用</tspan></text></g><g ed:parentid="101" id="110" transform="matrix(1,0,0,1,381,5176)" ed:width="276" ed:height="33"><path d="M4,0L272,0C274.7,0,276,1.3,276,4L276,29C276,31.7,274.7,33,272,33L4,33C1.3,33,0,31.7,0,29L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="22.9" style="white-space:pre" x="18">第5章 自动化部署管理工具Ansible</tspan></text></g><g ed:parentid="101" id="112" transform="matrix(1,0,0,1,381,6010)" ed:width="292" ed:height="33"><path d="M4,0L288,0C290.7,0,292,1.3,292,4L292,29C292,31.7,290.7,33,288,33L4,33C1.3,33,0,31.7,0,29L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="22.9" style="white-space:pre" x="18">第6章 自动化配置管理工具SaltStack</tspan></text></g><g ed:parentid="101" id="114" transform="matrix(1,0,0,1,381,6707)" ed:width="327" ed:height="33"><path d="M4,0L323,0C325.7,0,327,1.3,327,4L327,29C327,31.7,325.7,33,323,33L4,33C1.3,33,0,31.7,0,29L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="22.9" style="white-space:pre" x="18">第7章 Docker和Jenkins在DevOps中的应用</tspan></text></g><g ed:parentid="101" id="116" transform="matrix(1,0,0,1,381,7332)" ed:width="227" ed:height="33"><path d="M4,0L223,0C225.7,0,227,1.3,227,4L227,29C227,31.7,225.7,33,223,33L4,33C1.3,33,0,31.7,0,29L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="22.9" style="white-space:pre" x="18">第8章自动化运维的后续思考</tspan></text></g><g ed:parentid="102" id="118" transform="matrix(1,0,0,1,676,21)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">DevOps（英文Development和Operations的组合）是一组过程、方法与系统的统称，用于促进</tspan><tspan y="28.6" style="white-space:pre" x="8">开发（应用程序/软件工程）、技术运营和质量保障部门之间的沟通、协作与整合。</tspan></text></g><g ed:parentid="102" id="120" transform="matrix(1,0,0,1,676,208)" ed:width="186" ed:height="19.5"><path stroke="#696969" d="M0,19.5L186,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">1.1.DevOps在企业中存在的意义</tspan></text></g><g ed:parentid="102" id="122" transform="matrix(1,0,0,1,676,408)" ed:width="186" ed:height="19.5"><path stroke="#696969" d="M0,19.5L186,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">1.2.为什么企业需要自动化运维</tspan></text></g><g ed:parentid="102" id="124" transform="matrix(1,0,0,1,676,762)" ed:width="168" ed:height="19.5"><path stroke="#696969" d="M0,19.5L168,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">1.3.Web编程相关体系知识点</tspan></text></g><g ed:parentid="102" id="126" transform="matrix(1,0,0,1,676,1122)" ed:width="210" ed:height="19.5"><path stroke="#696969" d="M0,19.5L210,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">1.4.从事DevOps工作应该掌握的语言</tspan></text></g><g ed:parentid="102" id="128" transform="matrix(1,0,0,1,676,1311)" ed:width="210" ed:height="19.5"><path stroke="#696969" d="M0,19.5L210,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">1.5.从事DevOps工作应该掌握的工具</tspan></text></g><g ed:parentid="102" id="130" transform="matrix(1,0,0,1,676,1521)" ed:width="234" ed:height="19.5"><path stroke="#696969" d="M0,19.5L234,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">1.6.了解网站系统架构设计和高并发场景</tspan></text></g><g ed:parentid="102" id="132" transform="matrix(1,0,0,1,676,1627)" ed:width="234" ed:height="19.5"><path stroke="#696969" d="M0,19.5L234,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">1.7.了解数据库集群主从复制的基本原理</tspan></text></g><g ed:parentid="120" id="134" transform="matrix(1,0,0,1,889,61)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">如下几个因素更加促进了DevOps的发展：虚拟化和云计算基础设施的日益普及；业务负责要求</tspan><tspan y="28.6" style="white-space:pre" x="8">加快产品交付的速度；数据中心自动化配置管理工具的普及；</tspan></text></g><g ed:parentid="120" id="136" transform="matrix(1,0,0,1,889,101)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">DevOps是一个完整的、面向IT运维的工作流，其以IT自动化以及持续集成（CI）、持续部署</tspan><tspan y="28.6" style="white-space:pre" x="8">（CD）为基础，用于优化程序开发、测试、系统运维等所有环节。</tspan></text></g><g ed:parentid="120" id="138" transform="matrix(1,0,0,1,889,141)" ed:width="270" ed:height="19.5"><path stroke="#696969" d="M0,19.5L270,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">DevOps其实包含了三个部分：开发、测试和运维</tspan></text></g><g ed:parentid="120" id="140" transform="matrix(1,0,0,1,889,167)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">“黑盒运维”的特点是开发和运维的目标是相反的。开发团队的任务是为产品增加新功能、不</tspan><tspan y="28.6" style="white-space:pre" x="8">断升级产品，并以此制定绩效；运维团队的目标则是稳定第一</tspan></text></g><g ed:parentid="120" id="142" transform="matrix(1,0,0,1,889,207)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">DevOps希望做到的是打通软件产品交付过程中的IT工具链，它的核心理念在于生产团队（研</tspan><tspan y="28.6" style="white-space:pre" x="8">发、运维和QA）之间的高效沟通和协作，使得各个团队减少时间损耗，从而更加高效地协同工</tspan><tspan y="42.5" style="white-space:pre" x="8">作</tspan></text></g><g ed:parentid="120" id="144" transform="matrix(1,0,0,1,889,261)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">DevOps的一个巨大的好处就是可以高效地交付。DevOps的另外一个好处就是其还能改善公司组</tspan><tspan y="28.6" style="white-space:pre" x="8">织文化、提高员工的参与感。</tspan></text></g><g ed:parentid="120" id="146" transform="matrix(1,0,0,1,889,301)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">持续集成（Continuous Integration，CI）是一种软件开发实践，即团队开发成员经常集成它</tspan><tspan y="28.6" style="white-space:pre" x="8">们的工作，通常每个成员每天至少集成一次</tspan></text></g><g ed:parentid="120" id="148" transform="matrix(1,0,0,1,889,341)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">持续部署（Continuous Deployment，CD）是通过自动化的构建、测试和部署循环来快速交付</tspan><tspan y="28.6" style="white-space:pre" x="8">高质量的产品</tspan></text></g><g ed:parentid="122" id="150" transform="matrix(1,0,0,1,889,381)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">自动化运维把周期性、重复性、规律性的工作交给自动化平台（或产品）去处理，通过标准</tspan><tspan y="28.6" style="white-space:pre" x="8">化、自动化、架构化、过程优化来降低运维成本、提高运维效率。</tspan></text></g><g ed:parentid="122" id="152" transform="matrix(1,0,0,1,889,421)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">自动化运维可能带来的好处，具体如下：消除无效率；减少错误；最大化员工使用；提高满意</tspan><tspan y="28.6" style="white-space:pre" x="8">度水平；降低成本；</tspan></text></g><g ed:parentid="124" id="154" transform="matrix(1,0,0,1,871,461)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">RESTful是目前最为流行的一种互联网软件架构。因为它结构清晰、符合标准、易于理解、扩</tspan><tspan y="28.6" style="white-space:pre" x="8">展方便，</tspan></text></g><g ed:parentid="124" id="156" transform="matrix(1,0,0,1,871,501)" ed:width="432" ed:height="19.5"><path stroke="#696969" d="M0,19.5L432,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">几种常用的认证机制：HTTP Basic Auth；OAuth；Cookie Auth；Token Auth；</tspan></text></g><g ed:parentid="124" id="158" transform="matrix(1,0,0,1,871,527)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Token Auth的优点：支持跨域访问；无状态；更适用CDN；去耦；更适合于移动应用；CSRF；</tspan><tspan y="28.6" style="white-space:pre" x="8">性能；不需要为登录页面做特殊处理；基于标准化；</tspan></text></g><g ed:parentid="124" id="160" transform="matrix(1,0,0,1,871,567)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">同步和异步关注的是消息通信机制。阻塞与非阻塞关注的是程序在等待调用结果（消息、返回</tspan><tspan y="28.6" style="white-space:pre" x="8">值）时的状态。</tspan></text></g><g ed:parentid="124" id="163" transform="matrix(1,0,0,1,871,607)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Socket通信则用于在双方建立起连接之后直接进行数据的传输，还可以在连接时实现信息的主</tspan><tspan y="28.6" style="white-space:pre" x="8">动推送，而不需要每次都由客户端向服务器端发送请求。Socket的主要特点包括数据丢失率</tspan><tspan y="42.5" style="white-space:pre" x="8">低，使用简单且易于移植等</tspan></text></g><g ed:parentid="124" id="165" transform="matrix(1,0,0,1,871,661)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">WebSocket的最大特点就是，服务器可以主动向客户端推送信息，客户端也可以主动向服务器</tspan><tspan y="28.6" style="white-space:pre" x="8">发送信息，是真正的双向平等对话，属于服务器推送技术的一种</tspan></text></g><g ed:parentid="124" id="167" transform="matrix(1,0,0,1,871,701)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">相比传统HTTP，WebSocket具有如下好处：一个Web客户端只建立一个TCP连接；WebSocket服务</tspan><tspan y="28.6" style="white-space:pre" x="8">端可以推送（PUSH）数据到Web客户端；具有更加轻量级的头，减少了数据传送量；</tspan></text></g><g ed:parentid="124" id="169" transform="matrix(1,0,0,1,871,741)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">RabbitMQ是由Erlang语言编写的、实现了高级消息队列协议（AMQP）的开源消息代理软件（也</tspan><tspan y="28.6" style="white-space:pre" x="8">可称为面向消息的中间件）</tspan></text></g><g ed:parentid="124" id="171" transform="matrix(1,0,0,1,871,781)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">AMQP（Advanced Message Queuing Protocol）是一个提供统一消息服务的应用层标准高级消</tspan><tspan y="28.6" style="white-space:pre" x="8">息队列协议，是应用层协议的一个开放标准，为面向消息的中间件设计</tspan></text></g><g ed:parentid="124" id="173" transform="matrix(1,0,0,1,871,821)" ed:width="390" ed:height="19.5"><path stroke="#696969" d="M0,19.5L390,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">RabbitMQ在工作中的常用应用场景：异步处理；流量削峰；应用解耦；</tspan></text></g><g ed:parentid="124" id="175" transform="matrix(1,0,0,1,871,847)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">服务器健康检测技术，主要方法是通过发送不同类型的协议包并检查能否接收到正确的应答来</tspan><tspan y="28.6" style="white-space:pre" x="8">判断后端的服务器是否存活，如果后端的服务器出现故障就会自动剔除</tspan></text></g><g ed:parentid="124" id="177" transform="matrix(1,0,0,1,871,887)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">主要的服务器健康检测技术包括以下三种：ICMP-负载均衡器向后端的服务器发送ICMP ECHO包</tspan><tspan y="28.6" style="white-space:pre" x="8">（俗称的“ping”）；TCP-负载均衡器向后端的某个端口发起TCP连接请求；HTTP-负载均衡器</tspan><tspan y="42.5" style="white-space:pre" x="8">向后端的服务器发送HTTP请求；</tspan></text></g><g ed:parentid="124" id="179" transform="matrix(1,0,0,1,871,941)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">负载均衡器实现会话保持一般包含如下几种方案：基于源IP地址的持续性保持；基于Cookie数</tspan><tspan y="28.6" style="white-space:pre" x="8">据的持续性保持；基于HTTP报文头的持续性保持；</tspan></text></g><g ed:parentid="124" id="181" transform="matrix(1,0,0,1,871,981)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Session是由应用服务器维持的一个服务器端的存储空间，用户在连接服务器时，会由服务器</tspan><tspan y="28.6" style="white-space:pre" x="8">生成一个唯一的SessionID，该SessionID可作为标识符用于存取服务器端的Session存储空</tspan><tspan y="42.5" style="white-space:pre" x="8">间。</tspan></text></g><g ed:parentid="124" id="183" transform="matrix(1,0,0,1,871,1035)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">解决网站跨服务器的Session共享问题的需求变得迫切起来，最终催生了多种解决方案：基于</tspan><tspan y="28.6" style="white-space:pre" x="8">Cookie的Session共享；基于数据库的Session共享；Session复制；基于Memcache/Redis的</tspan><tspan y="42.5" style="white-space:pre" x="8">Session共享；</tspan></text></g><g ed:parentid="126" id="185" transform="matrix(1,0,0,1,913,1115)" ed:width="486" ed:height="19.5"><path stroke="#696969" d="M0,19.5L486,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Go语言的优势：部署简单；并发性好，天生支持高并发；良好的语言设计；执行性能好；</tspan></text></g><g ed:parentid="126" id="187" transform="matrix(1,0,0,1,913,1089)" ed:width="492" ed:height="19.5"><path stroke="#696969" d="M0,19.5L492,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">除了我们所熟悉的Shell和Python之外，建议在此基础上熟悉下Go（Golang）的特性和语法</tspan></text></g><g ed:parentid="126" id="189" transform="matrix(1,0,0,1,913,1141)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Go语言适用的场景：服务器编程；分布式存储、数据库代理器等；Key-Value存储；网络编</tspan><tspan y="28.6" style="white-space:pre" x="8">程；内存数据库；游戏服务器的开发；云平台；</tspan></text></g><g ed:parentid="128" id="191" transform="matrix(1,0,0,1,913,1181)" ed:width="420" ed:height="19.5"><path stroke="#696969" d="M0,19.5L420,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">版本控制管理（SCM）：GitHub、GitLab、SubVersion，一般是选择GitLab。</tspan></text></g><g ed:parentid="128" id="193" transform="matrix(1,0,0,1,913,1207)" ed:width="186" ed:height="19.5"><path stroke="#696969" d="M0,19.5L186,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">构建工具：Ant、Gradle、Maven</tspan></text></g><g ed:parentid="128" id="195" transform="matrix(1,0,0,1,913,1233)" ed:width="252" ed:height="19.5"><path stroke="#696969" d="M0,19.5L252,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">持续集成（CI）：Jenkins，大名鼎鼎的软件</tspan></text></g><g ed:parentid="128" id="197" transform="matrix(1,0,0,1,913,1259)" ed:width="270" ed:height="19.5"><path stroke="#696969" d="M0,19.5L270,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">配置管理：Ansible、Chef、Puppet、SaltStack</tspan></text></g><g ed:parentid="128" id="199" transform="matrix(1,0,0,1,913,1285)" ed:width="168" ed:height="19.5"><path stroke="#696969" d="M0,19.5L168,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">虚拟化：Xen或KVM、Vagrant</tspan></text></g><g ed:parentid="128" id="201" transform="matrix(1,0,0,1,913,1311)" ed:width="222" ed:height="19.5"><path stroke="#696969" d="M0,19.5L222,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">容器：Docker、LXC、第三方厂商如AWS</tspan></text></g><g ed:parentid="128" id="203" transform="matrix(1,0,0,1,913,1337)" ed:width="204" ed:height="19.5"><path stroke="#696969" d="M0,19.5L204,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">服务注册与发现：Zookeeper、etcd</tspan></text></g><g ed:parentid="128" id="205" transform="matrix(1,0,0,1,913,1363)" ed:width="180" ed:height="19.5"><path stroke="#696969" d="M0,19.5L180,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">日志管理：大家都很熟悉的ELK</tspan></text></g><g ed:parentid="128" id="207" transform="matrix(1,0,0,1,913,1389)" ed:width="180" ed:height="19.5"><path stroke="#696969" d="M0,19.5L180,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">日志收集系统：Fluentd、Heka</tspan></text></g><g ed:parentid="128" id="209" transform="matrix(1,0,0,1,913,1415)" ed:width="258" ed:height="19.5"><path stroke="#696969" d="M0,19.5L258,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">压力测试：JMeter、Blaze Meter、loader.io</tspan></text></g><g ed:parentid="128" id="211" transform="matrix(1,0,0,1,913,1441)" ed:width="198" ed:height="19.5"><path stroke="#696969" d="M0,19.5L198,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">消息中间件：ActiveMQ、RabbitMQ</tspan></text></g><g ed:parentid="130" id="213" transform="matrix(1,0,0,1,937,1467)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">可以参考吞吐量、每秒查询率（QPS）、响应时间（Response Time）、并发用户数，PV等作为</tspan><tspan y="28.6" style="white-space:pre" x="8">辅助指标，但它们并不能真实地反映网站的性能。</tspan></text></g><g ed:parentid="130" id="215" transform="matrix(1,0,0,1,937,1507)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">网站架构一般分成网页缓存层、负载均衡层、Web服务器层、数据缓存层及数据库层，其实一</tspan><tspan y="28.6" style="white-space:pre" x="8">般还会多加一层，即文件服务器层，</tspan></text></g><g ed:parentid="130" id="217" transform="matrix(1,0,0,1,937,1547)" ed:width="378" ed:height="47.5"><path stroke="#696969" d="M0,47.5L378,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">秒杀系统的核心思想：层层过滤。</tspan><tspan y="28.6" style="white-space:pre" x="8">❏尽量将请求拦截在上游，以降低下游的压力。</tspan><tspan y="42.5" style="white-space:pre" x="8">❏充分利用缓存与消息队列，提高请求处理的速度及削峰填谷的作用</tspan></text></g><g ed:parentid="132" id="219" transform="matrix(1,0,0,1,937,1601)" ed:width="156" ed:height="19.5"><path stroke="#696969" d="M0,19.5L156,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">redis主从复制的具体流程</tspan></text></g><g ed:parentid="132" id="221" transform="matrix(1,0,0,1,937,1627)" ed:width="426" ed:height="19.5"><path stroke="#696969" d="M0,19.5L426,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">MySQL数据库的主从Replication同步（又称为主从复制）是一个很成熟的架构</tspan></text></g><g ed:parentid="132" id="223" transform="matrix(1,0,0,1,937,1653)" ed:width="468" ed:height="19.5"><path stroke="#696969" d="M0,19.5L468,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">主从复制是MySQL数据库提供的一种高可用、高性能的解决方案，其原理其实并不复杂</tspan></text></g><g ed:parentid="102" id="225" transform="matrix(1,0,0,1,676,1720)" ed:width="168" ed:height="19.5"><path stroke="#696969" d="M0,19.5L168,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">1.8.Linux服务器的安全防护</tspan></text></g><g ed:parentid="225" id="229" transform="matrix(1,0,0,1,871,1679)" ed:width="514" ed:height="75.5"><path stroke="#696969" d="M0,75.5L514,75.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.5" style="white-space:pre" x="8">做好基础的安全措施，可以从如下几个方面着手：1.首先要保证自己的Linux服务器的密码绝</tspan><tspan y="28.5" style="white-space:pre" x="8">对安全；防止SSH暴力破解是一个老生常谈的问题；分析系统的日志文件，寻找入侵者曾经试</tspan><tspan y="42.5" style="white-space:pre" x="8">图入侵系统的蛛丝马迹；建议不定期使用grep error/var/log/messages检查自己的服务器是</tspan><tspan y="56.5" style="white-space:pre" x="8">否存在硬件损坏的情况；建议不定期使用Chkrootkit应用程序对rootkit的踪迹和特征进行查</tspan><tspan y="70.5" style="white-space:pre" x="8">找；推荐使用Tiprwire开源软件来检查文件系统的完整性；</tspan></text></g><g ed:parentid="225" id="231" transform="matrix(1,0,0,1,871,1761)" ed:width="402" ed:height="19.5"><path stroke="#696969" d="M0,19.5L402,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">还可以设计代码级别的WAF软件防火墙，主要是通过ngx_lua模块来实现的</tspan></text></g><g ed:parentid="104" id="233" transform="matrix(1,0,0,1,686,2018)" ed:width="120" ed:height="19.5"><path stroke="#696969" d="M0,19.5L120,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">2.1.Shell编程基础</tspan></text></g><g ed:parentid="104" id="235" transform="matrix(1,0,0,1,686,2295)" ed:width="156" ed:height="19.5"><path stroke="#696969" d="M0,19.5L156,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">2.2.Shell中的控制流结构</tspan></text></g><g ed:parentid="104" id="237" transform="matrix(1,0,0,1,686,2388)" ed:width="180" ed:height="19.5"><path stroke="#696969" d="M0,19.5L180,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">2.3.sed的基础用法及实用举例</tspan></text></g><g ed:parentid="104" id="239" transform="matrix(1,0,0,1,686,2521)" ed:width="180" ed:height="19.5"><path stroke="#696969" d="M0,19.5L180,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">2.4.awk的基础用法及实用实例</tspan></text></g><g ed:parentid="104" id="241" transform="matrix(1,0,0,1,686,2754)" ed:width="288" ed:height="19.5"><path stroke="#696969" d="M0,19.5L288,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">2.5.Shell应用于DevOps开发中应掌握的系统知识点</tspan></text></g><g ed:parentid="104" id="243" transform="matrix(1,0,0,1,686,2900)" ed:width="168" ed:height="19.5"><path stroke="#696969" d="M0,19.5L168,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">2.6.生产环境下的Shell脚本</tspan></text></g><g ed:parentid="233" id="245" transform="matrix(1,0,0,1,833,1814)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Shell是核心程序Kernel之外的命令解析器，其既是一个程序，同时也是一种命令语言和程序</tspan><tspan y="28.6" style="white-space:pre" x="8">设计语言</tspan></text></g><g ed:parentid="233" id="247" transform="matrix(1,0,0,1,833,1854)" ed:width="348" ed:height="19.5"><path stroke="#696969" d="M0,19.5L348,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Shell脚本的第一行均会包含一个以“#!”为起始标志的文本行</tspan></text></g><g ed:parentid="233" id="249" transform="matrix(1,0,0,1,833,1880)" ed:width="234" ed:height="19.5"><path stroke="#696969" d="M0,19.5L234,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">正则表达式是操作字符串的一种逻辑公式</tspan></text></g><g ed:parentid="233" id="251" transform="matrix(1,0,0,1,833,1906)" ed:width="246" ed:height="19.5"><path stroke="#696969" d="M0,19.5L246,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">环境变量用于所有用户进程（包括子进程）</tspan></text></g><g ed:parentid="233" id="253" transform="matrix(1,0,0,1,833,1932)" ed:width="474" ed:height="19.5"><path stroke="#696969" d="M0,19.5L474,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">特殊变量“$*”和“$@”表示所有的位置参数。特殊变量“$#”表示位置参数的总数。</tspan></text></g><g ed:parentid="233" id="255" transform="matrix(1,0,0,1,833,1958)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Shell脚本有两种运行方式，第一种方式是利用sh命令，第二种执行方式是利用chmod命令设置</tspan><tspan y="28.6" style="white-space:pre" x="8">Shell脚本文件。</tspan></text></g><g ed:parentid="233" id="257" transform="matrix(1,0,0,1,833,1998)" ed:width="402" ed:height="19.5"><path stroke="#696969" d="M0,19.5L402,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">一个Unix进程或命令终止运行时，将会自动向父进程返回一个出口状态。</tspan></text></g><g ed:parentid="233" id="259" transform="matrix(1,0,0,1,833,2024)" ed:width="510" ed:height="19.5"><path stroke="#696969" d="M0,19.5L510,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">从用途上考虑，变量可以分为内部变量、本地变量、环境变量、参数变量和用户自定义的变量</tspan></text></g><g ed:parentid="233" id="261" transform="matrix(1,0,0,1,833,2050)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Linux中含有两个重要的文件，“/etc/profile”和“$HOME/.bash_profile”，每当系统登录</tspan><tspan y="28.6" style="white-space:pre" x="8">时都要读取这两个文件，用来初始化系统所用到的变量，其中“/etc/profile”是超级用户所</tspan><tspan y="42.5" style="white-space:pre" x="8">用，“$HOME/.bash_profile”是每个用户自己独立的，可以通过修改该文件来设置PATH变量</tspan></text></g><g ed:parentid="233" id="263" transform="matrix(1,0,0,1,833,2104)" ed:width="474" ed:height="19.5"><path stroke="#696969" d="M0,19.5L474,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">read命令用于接收标准输入（键盘）的输入，或其他文件描述符的输入（后面会讲到）</tspan></text></g><g ed:parentid="233" id="265" transform="matrix(1,0,0,1,833,2130)" ed:width="276" ed:height="19.5"><path stroke="#696969" d="M0,19.5L276,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Shell脚本默认按十进制解释字符串中的数字字符</tspan></text></g><g ed:parentid="233" id="267" transform="matrix(1,0,0,1,833,2156)" ed:width="462" ed:height="19.5"><path stroke="#696969" d="M0,19.5L462,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">命令替换的目的是获取命令的输出，且为变量赋值或对命令的输出作进一步的处理。</tspan></text></g><g ed:parentid="233" id="269" transform="matrix(1,0,0,1,833,2182)" ed:width="426" ed:height="19.5"><path stroke="#696969" d="M0,19.5L426,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">test语句与if/then和case结构的语句一起，构成了Shell编程的控制转移结构</tspan></text></g><g ed:parentid="233" id="271" transform="matrix(1,0,0,1,833,2208)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">文件测试主要是指文件的状态和属性测试，其中包括文件是否存在、文件的类型、文件的访问</tspan><tspan y="28.6" style="white-space:pre" x="8">权限以及其他属性等</tspan></text></g><g ed:parentid="235" id="273" transform="matrix(1,0,0,1,869,2248)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Shell中的控制结构也比较清晰：if...then...else...fi语句；case语句；for循环；until循</tspan><tspan y="28.6" style="white-space:pre" x="8">环；</tspan><tspan y="42.5" style="white-space:pre" x="8">while循环；break控制；continue控制</tspan></text></g><g ed:parentid="235" id="277" transform="matrix(1,0,0,1,869,2302)" ed:width="354" ed:height="19.5"><path stroke="#696969" d="M0,19.5L354,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">case取值后面必须为单词in，每一种模式都必须以右括号结束。</tspan></text></g><g ed:parentid="235" id="279" transform="matrix(1,0,0,1,869,2328)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Linux中包含了很多逐行读取一个文件的方法，其中最常用的就是下面脚本里的方法（管道</tspan><tspan y="28.6" style="white-space:pre" x="8">法），而且这也是效率最高、使用最多的方法</tspan></text></g><g ed:parentid="237" id="281" transform="matrix(1,0,0,1,893,2368)" ed:width="366" ed:height="19.5"><path stroke="#696969" d="M0,19.5L366,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">sed是Linux平台下的轻量级流编辑器，一般可用于处理文本文件。</tspan></text></g><g ed:parentid="237" id="283" transform="matrix(1,0,0,1,893,2394)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">sed与vim最大的区别是，sed不需要像vim一样打开文件，可以在脚本里面直接操作文档，所以</tspan><tspan y="28.6" style="white-space:pre" x="8">大家将会发现它在Shell脚本里的使用频率是很高的</tspan></text></g><g ed:parentid="239" id="285" transform="matrix(1,0,0,1,893,2434)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">awk是一个强大的文本分析工具，相对于grep的查找、sed的编辑，awk在对数据进行分析并生</tspan><tspan y="28.6" style="white-space:pre" x="8">成报告时显得尤为强大。</tspan></text></g><g ed:parentid="239" id="287" transform="matrix(1,0,0,1,893,2474)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">awk就是逐行读入文件，以空格为默认分隔符对每行进行切片，切开的部分再进行各种分析处</tspan><tspan y="28.6" style="white-space:pre" x="8">理。</tspan></text></g><g ed:parentid="239" id="289" transform="matrix(1,0,0,1,893,2514)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">awk语言的最基本功能是在文件或字符串中基于指定规则浏览和抽取信息，抽取信息之后才能</tspan><tspan y="28.6" style="white-space:pre" x="8">进行其他的文本操作。</tspan></text></g><g ed:parentid="239" id="291" transform="matrix(1,0,0,1,893,2554)" ed:width="282" ed:height="19.5"><path stroke="#696969" d="M0,19.5L282,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">实现混合编程的关键是awk与Shell脚本之间的对话</tspan></text></g><g ed:parentid="239" id="293" transform="matrix(1,0,0,1,893,2580)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">awk与Shell脚本之间的信息交流：awk从Shell脚本中获取所需要的信息（通常是变量的值）、</tspan><tspan y="28.6" style="white-space:pre" x="8">在awk中执行Shell命令行、Shell脚本将命令执行的结果发送给awk处理，以及Shell脚本读取</tspan><tspan y="42.5" style="white-space:pre" x="8">awk的执行结果等。</tspan></text></g><g ed:parentid="241" id="295" transform="matrix(1,0,0,1,1001,2634)" ed:width="456" ed:height="19.5"><path stroke="#696969" d="M0,19.5L456,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">现代操作系统提供了三种基本的构造并发程序的方法：进程；I/O多路复用；线程；</tspan></text></g><g ed:parentid="241" id="297" transform="matrix(1,0,0,1,1001,2660)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">wait命令有一个很重要的用途就是在Shell的并发编程中，可以在Shell脚本中启动多个后台进</tspan><tspan y="28.6" style="white-space:pre" x="8">程（使用“&amp;”），然后调用wait命令，等待所有后台进程都运行完毕，Shell脚本再继续向下</tspan><tspan y="42.5" style="white-space:pre" x="8">执行</tspan></text></g><g ed:parentid="241" id="299" transform="matrix(1,0,0,1,1001,2714)" ed:width="366" ed:height="19.5"><path stroke="#696969" d="M0,19.5L366,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">可采用下面两种方式来调用外部的脚本，即exec方式和source方式</tspan></text></g><g ed:parentid="241" id="301" transform="matrix(1,0,0,1,1001,2740)" ed:width="132" ed:height="19.5"><path stroke="#696969" d="M0,19.5L132,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">使用flock建立排它锁</tspan></text></g><g ed:parentid="241" id="303" transform="matrix(1,0,0,1,1001,2766)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">在Linux系统中，一切皆可以看成文件，文件又可分为普通文件、目录文件、链接文件和设备</tspan><tspan y="28.6" style="white-space:pre" x="8">文件。</tspan></text></g><g ed:parentid="241" id="306" transform="matrix(1,0,0,1,1001,2806)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">“并发”在微观上并不是同时执行的，其只是把时间分成若干段，使多个进程快速交替地执</tspan><tspan y="28.6" style="white-space:pre" x="8">行，从宏观上来看，就好像是这些进程都在同时执行</tspan></text></g><g ed:parentid="241" id="308" transform="matrix(1,0,0,1,1001,2846)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">管道（pipe）是Linux支持的最初的Unix IPC形式之一，具有以下特点：管道是半双工的，数</tspan><tspan y="28.6" style="white-space:pre" x="8">据只能向一个方向流动；只能用于父子进程或者兄弟进程之间；单独构成一个独立的文件系</tspan><tspan y="42.5" style="white-space:pre" x="8">统；数据的读出和写入；</tspan></text></g><g ed:parentid="243" id="310" transform="matrix(1,0,0,1,881,2900)" ed:width="468" ed:height="19.5"><path stroke="#696969" d="M0,19.5L468,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">将生产环境下的Shell脚本分为备份类、统计类、监控类、运维开发类和自动化运维类</tspan></text></g><g ed:parentid="106" id="312" transform="matrix(1,0,0,1,754,3065)" ed:width="162" ed:height="19.5"><path stroke="#696969" d="M0,19.5L162,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">3.1.Python语言的应用领域</tspan></text></g><g ed:parentid="106" id="314" transform="matrix(1,0,0,1,754,3184)" ed:width="138" ed:height="19.5"><path stroke="#696969" d="M0,19.5L138,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">3.2.选择Python的原因</tspan></text></g><g ed:parentid="106" id="316" transform="matrix(1,0,0,1,754,3230)" ed:width="138" ed:height="19.5"><path stroke="#696969" d="M0,19.5L138,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">3.3.Python的版本说明</tspan></text></g><g ed:parentid="106" id="318" transform="matrix(1,0,0,1,754,3316)" ed:width="150" ed:height="19.5"><path stroke="#696969" d="M0,19.5L150,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">3.4.Python基础学习工具</tspan></text></g><g ed:parentid="106" id="320" transform="matrix(1,0,0,1,754,3748)" ed:width="150" ed:height="19.5"><path stroke="#696969" d="M0,19.5L150,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">3.5.Python基础知识进阶</tspan></text></g><g ed:parentid="106" id="322" transform="matrix(1,0,0,1,754,4127)" ed:width="198" ed:height="19.5"><path stroke="#696969" d="M0,19.5L198,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">3.6.Python经常用到的第三方类库</tspan></text></g><g ed:parentid="106" id="324" transform="matrix(1,0,0,1,754,4200)" ed:width="210" ed:height="19.5"><path stroke="#696969" d="M0,19.5L210,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">3.7.利用Flask设计后端Restful API</tspan></text></g><g ed:parentid="106" id="326" transform="matrix(1,0,0,1,754,4266)" ed:width="174" ed:height="19.5"><path stroke="#696969" d="M0,19.5L174,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">3.8.工作中的Python脚本分享</tspan></text></g><g ed:parentid="106" id="328" transform="matrix(1,0,0,1,754,2952)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Python是一种动态解释型的编程语言。Python功能强大，支持面向对象编程、函数式编程，同</tspan><tspan y="28.6" style="white-space:pre" x="8">时还可以在Windows、Linux和Unix等多个操作系统上使用，因此Python也称为“胶水语言”</tspan></text></g><g ed:parentid="312" id="330" transform="matrix(1,0,0,1,943,2992)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">自动化构建（即持续集成CI）是因应用而易的，如果是Python应用，因为有setup-tools、</tspan><tspan y="28.6" style="white-space:pre" x="8">pip、virtualenv及tox等工具的存在，自动化构建非常简单。</tspan></text></g><g ed:parentid="312" id="332" transform="matrix(1,0,0,1,943,3032)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">动化运维（自动化配置管理）工具，新生代Ansible、SaltStack，以及轻量级的自动化运维工</tspan><tspan y="28.6" style="white-space:pre" x="8">具Fabric，均为Python所开发</tspan></text></g><g ed:parentid="312" id="334" transform="matrix(1,0,0,1,943,3072)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Python由于能够很好地支持协程（Coroutine）操作，基于此发展了很多并发库，如Gevent、</tspan><tspan y="28.6" style="white-space:pre" x="8">Eventlet，还有Celery之类的分布式任务框架。</tspan></text></g><g ed:parentid="312" id="336" transform="matrix(1,0,0,1,943,3112)" ed:width="486" ed:height="19.5"><path stroke="#696969" d="M0,19.5L486,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Python本身就是一门工程性语言，数据科学家用Python实现的算法，可以直接用在产品中</tspan></text></g><g ed:parentid="312" id="338" transform="matrix(1,0,0,1,943,3138)" ed:width="420" ed:height="19.5"><path stroke="#696969" d="M0,19.5L420,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Python还广泛应用于Web开发、游戏开发、手机开发、数据库开发等众多领域</tspan></text></g><g ed:parentid="314" id="340" transform="matrix(1,0,0,1,919,3164)" ed:width="354" ed:height="19.5"><path stroke="#696969" d="M0,19.5L354,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">对于研发工程师而言，Python的优雅和简洁无疑是最大的吸引力</tspan></text></g><g ed:parentid="314" id="342" transform="matrix(1,0,0,1,919,3190)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">对于运维工程师而言，Python的最大优势在于，几乎所有的Linux发行版都内置了Python解释</tspan><tspan y="28.6" style="white-space:pre" x="8">器</tspan></text></g><g ed:parentid="316" id="344" transform="matrix(1,0,0,1,919,3230)" ed:width="438" ed:height="19.5"><path stroke="#696969" d="M0,19.5L438,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Python 2.x版本和Python 3版本的差异是很大的，语法也有很多是完全不一样的</tspan></text></g><g ed:parentid="318" id="350" transform="matrix(1,0,0,1,931,3256)" ed:width="492" ed:height="19.5"><path stroke="#696969" d="M0,19.5L492,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Python(x,y)是一个免费的科学和工程开发包，提供了数学计算、数据分析和可视化展示。</tspan></text></g><g ed:parentid="318" id="352" transform="matrix(1,0,0,1,931,3282)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">附带了科学计算方面的很多常用库，另外还有大量常用库比如用于桌面软件界面制作的PyQt，</tspan><tspan y="28.6" style="white-space:pre" x="8">还有文档处理、EXE文件生成等常用库。</tspan></text></g><g ed:parentid="318" id="354" transform="matrix(1,0,0,1,931,3322)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">IPython提供了改进的交互式Python Shell，我们可以利用IPython来执行Python语句，并且能</tspan><tspan y="28.6" style="white-space:pre" x="8">够立刻看到结果</tspan></text></g><g ed:parentid="318" id="356" transform="matrix(1,0,0,1,931,3362)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">ST3是一款具有代码高亮显示、语法提示、自动完成且反应快速的编辑器软件，其不仅具有华</tspan><tspan y="28.6" style="white-space:pre" x="8">丽的界面，还支持插件扩展机制，用ST3来写代码，绝对是一种享受</tspan></text></g><g ed:parentid="320" id="358" transform="matrix(1,0,0,1,931,3402)" ed:width="258" ed:height="19.5"><path stroke="#696969" d="M0,19.5L258,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">正则表达式主要用于搜索、替换和解析字符串</tspan></text></g><g ed:parentid="320" id="360" transform="matrix(1,0,0,1,931,3428)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">原子是正则表达式中最基本的组成单位，每个正则表达式中至少要包含一个原子，常见的原子</tspan><tspan y="28.6" style="white-space:pre" x="8">是由普通字符或通用字符和原子表构成的</tspan></text></g><g ed:parentid="320" id="362" transform="matrix(1,0,0,1,931,3468)" ed:width="354" ed:height="19.5"><path stroke="#696969" d="M0,19.5L354,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">贪婪模式就是尽可能多地匹配，而懒惰模式就是尽可能少地匹配</tspan></text></g><g ed:parentid="320" id="364" transform="matrix(1,0,0,1,931,3494)" ed:width="390" ed:height="19.5"><path stroke="#696969" d="M0,19.5L390,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">re模块提供了一些函数可根据正则表达式进行查找、替换和分隔字符串</tspan></text></g><g ed:parentid="320" id="366" transform="matrix(1,0,0,1,931,3520)" ed:width="222" ed:height="19.5"><path stroke="#696969" d="M0,19.5L222,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Python程序是由包、模块和函数组成的</tspan></text></g><g ed:parentid="320" id="368" transform="matrix(1,0,0,1,931,3546)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">在Python的定义中，一个文件就是一个模块，模块是由类、函数及程序组成的，文件名是不能</tspan><tspan y="28.6" style="white-space:pre" x="8">重复的</tspan></text></g><g ed:parentid="320" id="370" transform="matrix(1,0,0,1,931,3586)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">在开发Python程序的过程中，会涉及如下三个方面的编码：Python程序文件的编码；Python程</tspan><tspan y="28.6" style="white-space:pre" x="8">序运行时环境的编码；Python程序读取外部文件、网页的编码；</tspan></text></g><g ed:parentid="320" id="372" transform="matrix(1,0,0,1,931,3626)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Python提供了强大的异常处理机制，通过捕获异常可以提高程序的健壮性。异常处理还具有释</tspan><tspan y="28.6" style="white-space:pre" x="8">放对象、中止循环的运行等作用。</tspan></text></g><g ed:parentid="320" id="374" transform="matrix(1,0,0,1,931,3666)" ed:width="450" ed:height="19.5"><path stroke="#696969" d="M0,19.5L450,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Python的参数包括以下几种类型：必备参数；关键字参数；默认参数；不定长参数</tspan></text></g><g ed:parentid="320" id="376" transform="matrix(1,0,0,1,931,3692)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Python是支持面向对象、面向过程、函数式编程等多种编程范式的，它不强制我们使用任何一</tspan><tspan y="28.6" style="white-space:pre" x="8">种编程范式</tspan></text></g><g ed:parentid="320" id="378" transform="matrix(1,0,0,1,931,3732)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Python的多线程实际上并不能真正利用多核，因为Python的多线程实际上还是在一个核上做并</tspan><tspan y="28.6" style="white-space:pre" x="8">发处理。</tspan></text></g><g ed:parentid="320" id="380" transform="matrix(1,0,0,1,931,3772)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">如果使用多进程就可以真正利用多核，因为各进程之间是相互独立的，不共享硬件资源，可以</tspan><tspan y="28.6" style="white-space:pre" x="8">在不同的核上执行不同的进程，以达到并行的效果</tspan></text></g><g ed:parentid="320" id="382" transform="matrix(1,0,0,1,931,3812)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动，进程是系统进行资源分</tspan><tspan y="28.6" style="white-space:pre" x="8">配和调度的一个独立单位</tspan></text></g><g ed:parentid="320" id="384" transform="matrix(1,0,0,1,931,3852)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">线程是进程的一个实体，是CPU调度和分派的基本单位，它是比进程更小的能独立运行的基本</tspan><tspan y="28.6" style="white-space:pre" x="8">单位。线程自己基本上不拥有系统资源，只拥有少量的在运行中必不可少的资源（如程序计数</tspan><tspan y="42.5" style="white-space:pre" x="8">器，一组寄存器和栈）</tspan></text></g><g ed:parentid="320" id="386" transform="matrix(1,0,0,1,931,3906)" ed:width="514" ed:height="61.5"><path stroke="#696969" d="M0,61.5L514,61.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">进程和线程的主要差别在于它们是不同的操作系统资源管理方式。进程有独立的地址空间，一</tspan><tspan y="28.6" style="white-space:pre" x="8">个进程崩溃之后，在保护模式下不会对其他进程产生影响。而线程只是一个进程中的不同执行</tspan><tspan y="42.5" style="white-space:pre" x="8">路径，线程有自己的堆栈和局部变量，但线程之间没有单独的地址空间，一个线程死掉就等于</tspan><tspan y="56.5" style="white-space:pre" x="8">整个进程死掉，所以多进程的程序要比多线程的程序更健壮</tspan></text></g><g ed:parentid="320" id="388" transform="matrix(1,0,0,1,931,3974)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">线程执行开销小，但不利于资源的管理和保护；而进程则正好相反。同时，线程适合于在SMP</tspan><tspan y="28.6" style="white-space:pre" x="8">机器上运行，而进程则可以跨机器迁移</tspan></text></g><g ed:parentid="320" id="390" transform="matrix(1,0,0,1,931,4014)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Python在设计之初就考虑在主循环中，同时只能有一个线程在执行，就像在单CPU的系统中运</tspan><tspan y="28.6" style="white-space:pre" x="8">行多个进程那样，内存中可以存放多个程序，但在任意时刻，只有一个程序在CPU中运行。</tspan></text></g><g ed:parentid="320" id="392" transform="matrix(1,0,0,1,931,4054)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">对于多线程来说，其最大的特点就是线程之间可以共享数据，但是若要共享数据就会出现多线</tspan><tspan y="28.6" style="white-space:pre" x="8">程同时更改一个变量，使用同样的资源，从而出现死锁、数据错乱等问题</tspan></text></g><g ed:parentid="320" id="396" transform="matrix(1,0,0,1,931,4094)" ed:width="372" ed:height="19.5"><path stroke="#696969" d="M0,19.5L372,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Queue模块实现了多生产者多消费者队列，尤其适合于多线程编程。</tspan></text></g><g ed:parentid="322" id="398" transform="matrix(1,0,0,1,979,4120)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">工作中经常用到的第三方类库：django、tornado、flask、cherryPy、requests、yagmail、</tspan><tspan y="28.6" style="white-space:pre" x="8">psutil、sh、Boto3、Srapy、BeautifulSoup、Selenium、Jinja2、rq、Celery、Supervisor</tspan></text></g><g ed:parentid="324" id="400" transform="matrix(1,0,0,1,991,4160)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Flask是轻量级、易于采用、文档化和流行的开发RESTful API的非常好的选择，也是笔者在工</tspan><tspan y="28.6" style="white-space:pre" x="8">作中最常用的Flask Web框架之一</tspan></text></g><g ed:parentid="324" id="402" transform="matrix(1,0,0,1,991,4200)" ed:width="294" ed:height="19.5"><path stroke="#696969" d="M0,19.5L294,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">一个标准的API有4个接口：GET、PUT、POST、DELETE</tspan></text></g><g ed:parentid="324" id="404" transform="matrix(1,0,0,1,991,4226)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">总结一下Flask RESTful API的主要特点：客户端中服务器；无状态；可缓存；分层系统；统</tspan><tspan y="28.6" style="white-space:pre" x="8">一的接口；按需编码；</tspan></text></g><g ed:parentid="108" id="406" transform="matrix(1,0,0,1,702,4405)" ed:width="132" ed:height="19.5"><path stroke="#696969" d="M0,19.5L132,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">4.1.Vagrant简单介绍</tspan></text></g><g ed:parentid="108" id="408" transform="matrix(1,0,0,1,702,4451)" ed:width="108" ed:height="19.5"><path stroke="#696969" d="M0,19.5L108,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">4.2.Vagrant安装</tspan></text></g><g ed:parentid="108" id="410" transform="matrix(1,0,0,1,702,4484)" ed:width="204" ed:height="19.5"><path stroke="#696969" d="M0,19.5L204,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">4.3.使用Vagrant配置本地开发环境</tspan></text></g><g ed:parentid="108" id="412" transform="matrix(1,0,0,1,702,4517)" ed:width="216" ed:height="19.5"><path stroke="#696969" d="M0,19.5L216,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">4.4.使用Vagrant搭建DevOps开发环境</tspan></text></g><g ed:parentid="108" id="414" transform="matrix(1,0,0,1,702,4543)" ed:width="192" ed:height="19.5"><path stroke="#696969" d="M0,19.5L192,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">4.5.使用Vagrant搭建分布式环境</tspan></text></g><g ed:parentid="108" id="416" transform="matrix(1,0,0,1,702,4319)" ed:width="330" ed:height="19.5"><path stroke="#696969" d="M0,19.5L330,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">最常用的虚拟化工具有VMware Workstation和VirtualBox等</tspan></text></g><g ed:parentid="108" id="418" transform="matrix(1,0,0,1,702,4345)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">使用虚拟机的时候，用户往往会遇到下面这些问题：虚拟机工具学习成本；环境无法共享；虚</tspan><tspan y="28.6" style="white-space:pre" x="8">拟机平台不统一；</tspan></text></g><g ed:parentid="406" id="420" transform="matrix(1,0,0,1,861,4385)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Vagrant就是为了方便地实现虚拟化环境而设计的，使用Ruby开发，基于VirtualBox等虚拟机</tspan><tspan y="28.6" style="white-space:pre" x="8">管理软件的接口，提供一个可配置的、轻量级的便携式虚拟开发环境</tspan></text></g><g ed:parentid="406" id="422" transform="matrix(1,0,0,1,861,4425)" ed:width="444" ed:height="19.5"><path stroke="#696969" d="M0,19.5L444,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Vagrant还会创建一些共享文件夹，以便我们在主机和虚拟机之间共享代码之用。</tspan></text></g><g ed:parentid="410" id="426" transform="matrix(1,0,0,1,933,4477)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Vagrant中一共提供了三种网络配置：端口映射（Forwarded port）、私有网络（Private </tspan><tspan y="28.6" style="white-space:pre" x="8">network）、公有网络（Public network）</tspan></text></g><g ed:parentid="108" id="430" transform="matrix(1,0,0,1,702,4569)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Vagrant在工作中除了能够方便地团队之间共享开发环境之外，另外一个优点就是能在节约系</tspan><tspan y="28.6" style="white-space:pre" x="8">统资源的前提下，方便快捷地搭建分布式环境</tspan></text></g><g ed:parentid="114" id="432" transform="matrix(1,0,0,1,735,6302)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Docker是现阶段最流行的容器技术，主要用于隔离，因为Docker镜像、容器运行简单便捷，适</tspan><tspan y="28.6" style="white-space:pre" x="8">合于将应用快速部署上线、快速弹性扩充，所以Docker是非常适合DevOps</tspan></text></g><g ed:parentid="114" id="434" transform="matrix(1,0,0,1,735,6342)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Jenkins是一个开源的、提供友好操作界面的持续集成（CI）工具，起源于Hudson（Hudson是</tspan><tspan y="28.6" style="white-space:pre" x="8">商用的），主要用于持续、自动地构建或测试软件项目、监控外部任务的运行（这个比较抽</tspan><tspan y="42.5" style="white-space:pre" x="8">象，暂且写上，不做解释）</tspan></text></g><g ed:parentid="114" id="436" transform="matrix(1,0,0,1,735,6396)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">虚拟机是在硬件层面实现虚拟化，需要有额外的虚拟机管理应用和虚拟机操作系统层，而</tspan><tspan y="28.6" style="white-space:pre" x="8">Docker容器是在操作系统层面上实现虚拟化，直接复用本地主机的操作系统，所以性能上更接</tspan><tspan y="42.5" style="white-space:pre" x="8">近于原生，基本上是没有任何损耗的</tspan></text></g><g ed:parentid="114" id="438" transform="matrix(1,0,0,1,735,6450)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Docker容器除了运行其中的应用之外，基本上不消耗额外的系统资源，在保证应用性能的同</tspan><tspan y="28.6" style="white-space:pre" x="8">时，尽量减小系统开销。</tspan></text></g><g ed:parentid="114" id="440" transform="matrix(1,0,0,1,735,6490)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">DevOps的核心理念在于研发、运维及测试团队之间高效沟通与协作，以解决以下常见问题：更</tspan><tspan y="28.6" style="white-space:pre" x="8">频繁的需求变更和持续部署；生产环境不受开发人员控制；开发与运维不能紧密切合；现在虚</tspan><tspan y="42.5" style="white-space:pre" x="8">拟机不能满足开发与运营人员的协作；研发部署流程需要更多的成本和时间；</tspan></text></g><g ed:parentid="114" id="442" transform="matrix(1,0,0,1,735,6544)" ed:width="138" ed:height="19.5"><path stroke="#696969" d="M0,19.5L138,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">7.1.Docker的基础安装</tspan></text></g><g ed:parentid="114" id="444" transform="matrix(1,0,0,1,735,6624)" ed:width="162" ed:height="19.5"><path stroke="#696969" d="M0,19.5L162,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">7.2.Docker的三大核心概念</tspan></text></g><g ed:parentid="114" id="446" transform="matrix(1,0,0,1,735,6750)" ed:width="138" ed:height="19.5"><path stroke="#696969" d="M0,19.5L138,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">7.3.Docker的基础架构</tspan></text></g><g ed:parentid="114" id="448" transform="matrix(1,0,0,1,735,6829)" ed:width="150" ed:height="19.5"><path stroke="#696969" d="M0,19.5L150,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">7.4.Docker网络实现原理</tspan></text></g><g ed:parentid="114" id="450" transform="matrix(1,0,0,1,735,6902)" ed:width="258" ed:height="19.5"><path stroke="#696969" d="M0,19.5L258,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">7.5.利用Dockerfile文件技巧打包Docker镜像</tspan></text></g><g ed:parentid="114" id="452" transform="matrix(1,0,0,1,735,6968)" ed:width="246" ed:height="19.5"><path stroke="#696969" d="M0,19.5L246,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">7.6.利用Docker-Compose编排和管理多容器</tspan></text></g><g ed:parentid="114" id="454" transform="matrix(1,0,0,1,735,6994)" ed:width="306" ed:height="19.5"><path stroke="#696969" d="M0,19.5L306,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">7.7.利用Docker搭建Jenkins Master/Slave分布式环境</tspan></text></g><g ed:parentid="114" id="456" transform="matrix(1,0,0,1,735,7073)" ed:width="264" ed:height="19.5"><path stroke="#696969" d="M0,19.5L264,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">7.8.实际运行Jenkins时遇到的问题及使用心得</tspan></text></g><g ed:parentid="444" id="458" transform="matrix(1,0,0,1,924,6570)" ed:width="510" ed:height="19.5"><path stroke="#696969" d="M0,19.5L510,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Docker的三大核心概念列举如下：镜像（Image）；容器（Container）；仓库（Repository）</tspan></text></g><g ed:parentid="444" id="462" transform="matrix(1,0,0,1,924,6596)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Docker镜像类似于虚拟机镜像，可以将其理解为一个面向Docker引擎的只读模板，包含了文件</tspan><tspan y="28.6" style="white-space:pre" x="8">系统</tspan></text></g><g ed:parentid="444" id="464" transform="matrix(1,0,0,1,924,6636)" ed:width="514" ed:height="61.5"><path stroke="#696969" d="M0,61.5L514,61.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">容器类似于一个轻量级的沙箱，Docker利用容器来运行和隔离应用。容器是从镜像创建的应用</tspan><tspan y="28.6" style="white-space:pre" x="8">运行实例，可以对其进行启动、开始、停止、删除操作，而这些容器都是相互隔离、互不可见</tspan><tspan y="42.5" style="white-space:pre" x="8">的。可以把容器看作一个简易版的Linux系统环境（这包括root用户权限、进程空间、用户空</tspan><tspan y="56.5" style="white-space:pre" x="8">间和网络空间等），以及运行在其中的应用程序打包而成的应用盒子</tspan></text></g><g ed:parentid="446" id="466" transform="matrix(1,0,0,1,900,6704)" ed:width="270" ed:height="19.5"><path stroke="#696969" d="M0,19.5L270,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Docker仓库是Docker集中存放镜像文件的场所。</tspan></text></g><g ed:parentid="446" id="468" transform="matrix(1,0,0,1,900,6730)" ed:width="462" ed:height="19.5"><path stroke="#696969" d="M0,19.5L462,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Docker镜像是完全不可写的，Docker容器是可写的，两者之间有着千丝万缕的关系。</tspan></text></g><g ed:parentid="446" id="470" transform="matrix(1,0,0,1,900,6756)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Docker是一个C/S模式的架构，后端是一个松耦合架构，各模块各司其职。用户使用Docker </tspan><tspan y="28.6" style="white-space:pre" x="8">Client与Docker Daemon建立通信，并发送请求给后者</tspan></text></g><g ed:parentid="446" id="472" transform="matrix(1,0,0,1,900,6796)" ed:width="510" ed:height="19.5"><path stroke="#696969" d="M0,19.5L510,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Docker Client可以通过以下三种方式和Docker Daemon建立通信，即Port、Socket和Socketfd</tspan></text></g><g ed:parentid="448" id="474" transform="matrix(1,0,0,1,912,6822)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Docker的网络实现基本上就是利用了Linux的网络命令空间和虚拟网络设备（即veth设备</tspan><tspan y="28.6" style="white-space:pre" x="8">对），熟悉这两部分的基本概念，有助于理解Docker网络的实现过程</tspan></text></g><g ed:parentid="450" id="478" transform="matrix(1,0,0,1,1020,6862)" ed:width="480" ed:height="19.5"><path stroke="#696969" d="M0,19.5L480,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">其他很多的应用一样，例如Jumper、Jenkins及GitLab等都是以Docker容器的形式运行的</tspan></text></g><g ed:parentid="450" id="480" transform="matrix(1,0,0,1,1020,6888)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">COPY指令与ADD指令的唯一区别在于是否支持从远程URL获取资源。COPY指令只能从执行docker </tspan><tspan y="28.6" style="white-space:pre" x="8">build所在的主机上读取资源并复制到镜像中。而ADD指令还支持通过URL从远程服务器读取资</tspan><tspan y="42.5" style="white-space:pre" x="8">源并复制到镜像中</tspan></text></g><g ed:parentid="450" id="482" transform="matrix(1,0,0,1,1020,6942)" ed:width="408" ed:height="19.5"><path stroke="#696969" d="M0,19.5L408,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">ENTRYPOINT是配置容器启动后执行的命令，并且不可被RUN提供的参数覆盖</tspan></text></g><g ed:parentid="452" id="484" transform="matrix(1,0,0,1,1008,6968)" ed:width="330" ed:height="19.5"><path stroke="#696969" d="M0,19.5L330,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">depends_on，这个标签解决了容器的依赖、启动先后的问题</tspan></text></g><g ed:parentid="454" id="488" transform="matrix(1,0,0,1,1068,6994)" ed:width="444" ed:height="19.5"><path stroke="#696969" d="M0,19.5L444,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">用Docker来部署Jenkins的好处还有以下几点：避免冲突；部署和滚动更新方便；</tspan></text></g><g ed:parentid="456" id="492" transform="matrix(1,0,0,1,1026,7020)" ed:width="180" ed:height="19.5"><path stroke="#696969" d="M0,19.5L180,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Jenkins的机器磁盘很容易爆满</tspan></text></g><g ed:parentid="456" id="494" transform="matrix(1,0,0,1,1026,7046)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">建议采用Jenkins的Role-based Authorization Strategy插件中的“Manage and Assign </tspan><tspan y="28.6" style="white-space:pre" x="8">Roles”功能来进行控制，每种环境的Jenkins job只能由相关项目组的人员使用</tspan></text></g><g ed:parentid="456" id="496" transform="matrix(1,0,0,1,1026,7086)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Jenkins的Shell控制台中使用英文字符不会出现乱码的情况，但是如果使用中文，则会出现乱</tspan><tspan y="28.6" style="white-space:pre" x="8">码</tspan></text></g><g ed:parentid="456" id="498" transform="matrix(1,0,0,1,1026,7126)" ed:width="318" ed:height="19.5"><path stroke="#696969" d="M0,19.5L318,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">用于了解Jenkins中job是否构建成功的插件：钉钉通知器</tspan></text></g><g ed:parentid="116" id="500" transform="matrix(1,0,0,1,635,7246)" ed:width="222" ed:height="19.5"><path stroke="#696969" d="M0,19.5L222,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">8.1.自动化运维系统中应该实现的系统</tspan></text></g><g ed:parentid="116" id="502" transform="matrix(1,0,0,1,635,7299)" ed:width="162" ed:height="19.5"><path stroke="#696969" d="M0,19.5L162,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">8.2.自动化运维经历的阶段</tspan></text></g><g ed:parentid="116" id="504" transform="matrix(1,0,0,1,635,7345)" ed:width="228" ed:height="19.5"><path stroke="#696969" d="M0,19.5L228,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">8.3.自动化运维的必备技能：定制RPM包</tspan></text></g><g ed:parentid="116" id="506" transform="matrix(1,0,0,1,635,7445)" ed:width="210" ed:height="19.5"><path stroke="#696969" d="M0,19.5L210,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">8.4.因地制宜地选择自动化运维方案</tspan></text></g><g ed:parentid="116" id="508" transform="matrix(1,0,0,1,635,7179)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">自动化运维是指将IT运维中日常的、大量的重复性工作自动化，把过去的手动执行转为自动化</tspan><tspan y="28.6" style="white-space:pre" x="8">操作。</tspan></text></g><g ed:parentid="500" id="510" transform="matrix(1,0,0,1,884,7219)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">三个系统在自动化运维体系中是不可缺少的：CMDB管理系统；持续集成系统；运维调度管理系</tspan><tspan y="28.6" style="white-space:pre" x="8">统。</tspan></text></g><g ed:parentid="500" id="512" transform="matrix(1,0,0,1,884,7259)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">每个公司的CMDB记录机器资产的情况是不一样的，但大致有机器主机名、IP名、业务角色、隶</tspan><tspan y="28.6" style="white-space:pre" x="8">属平台、机器类型、归属线路。</tspan></text></g><g ed:parentid="502" id="514" transform="matrix(1,0,0,1,824,7299)" ed:width="408" ed:height="19.5"><path stroke="#696969" d="M0,19.5L408,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">自动化运维一般都会经历以下几个阶段：标准化、Web化、服务化、智能化</tspan></text></g><g ed:parentid="504" id="520" transform="matrix(1,0,0,1,890,7325)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">现在我们都是先将业务软件以RPM包的形式打包，建立自己的yum源，通过Ansible、SaltStack</tspan><tspan y="28.6" style="white-space:pre" x="8">或Puppet来管理这些RPM包</tspan></text></g><g ed:parentid="504" id="522" transform="matrix(1,0,0,1,890,7365)" ed:width="444" ed:height="19.5"><path stroke="#696969" d="M0,19.5L444,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">制作RPM软件包并不是一项复杂的工作，其中的关键在于编写SPEC软件包描述文件</tspan></text></g><g ed:parentid="506" id="524" transform="matrix(1,0,0,1,872,7391)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">需要选择一款支持sudo的自动化配置管理工具，还要方便进行二次开发，如果是这种场景的</tspan><tspan y="28.6" style="white-space:pre" x="8">话，那么这里推荐用Ansible来作为其自动化配置管理工具。如果数据中心比较分散，而且又</tspan><tspan y="42.5" style="white-space:pre" x="8">要考虑网络方面的问题和二次开发的问题，那么这里会推荐大家采用SaltStack</tspan></text></g><g ed:parentid="506" id="526" transform="matrix(1,0,0,1,872,7445)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">k8s在很多方面占据了巨大的优势，例如容器编排、水平自动扩展、滚动升级、负载均衡还有</tspan><tspan y="28.6" style="white-space:pre" x="8">资源监控</tspan></text></g><g ed:parentid="506" id="528" transform="matrix(1,0,0,1,872,7485)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">打造自动化运维平台，最难的不是如何开发，而是积累场景，长期积累各种业务场景才能打造</tspan><tspan y="28.6" style="white-space:pre" x="8">出最合适的自动化运维平台。</tspan></text></g><g ed:parentid="101" id="530" transform="matrix(1,0,0,1,381,7697)" ed:width="69" ed:height="33"><path d="M4,0L65,0C67.7,0,69,1.3,69,4L69,29C69,31.7,67.7,33,65,33L4,33C1.3,33,0,31.7,0,29L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="22.9" style="white-space:pre" x="18">附录</tspan></text></g><g ed:parentid="530" id="532" transform="matrix(1,0,0,1,477,7578)" ed:width="198" ed:height="19.5"><path stroke="#696969" d="M0,19.5L198,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">GitLab在DevOps工作中的实际应用</tspan></text></g><g ed:parentid="530" id="534" transform="matrix(1,0,0,1,477,7658)" ed:width="240" ed:height="19.5"><path stroke="#696969" d="M0,19.5L240,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">用Gunicorn部署高性能Python WSGI服务器</tspan></text></g><g ed:parentid="530" id="536" transform="matrix(1,0,0,1,477,7731)" ed:width="198" ed:height="19.5"><path stroke="#696969" d="M0,19.5L198,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Supervisor在DevOps工作中的应用</tspan></text></g><g ed:parentid="530" id="538" transform="matrix(1,0,0,1,477,7817)" ed:width="162" ed:height="19.5"><path stroke="#696969" d="M0,19.5L162,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">分布式队列管理Cerely简介</tspan></text></g><g ed:parentid="532" id="540" transform="matrix(1,0,0,1,702,7551)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Git可以使用四种主要的协议来传输数据，分别为本地传输（Local）、SSH协议、Git协议和</tspan><tspan y="28.6" style="white-space:pre" x="8">HTTP（包含HTTPS）。</tspan></text></g><g ed:parentid="532" id="542" transform="matrix(1,0,0,1,702,7591)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Git Flow就是为项目开发一个新功能需要的操作流程：创建新的分支；实现功能；发起merge </tspan><tspan y="28.6" style="white-space:pre" x="8">request；code review；合并master；</tspan></text></g><g ed:parentid="534" id="546" transform="matrix(1,0,0,1,744,7631)" ed:width="510" ed:height="19.5"><path stroke="#696969" d="M0,19.5L510,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">正确的做法是底层代码由专门的服务器软件来实现，我们专注于用Python代码生成HTML文档。</tspan></text></g><g ed:parentid="534" id="548" transform="matrix(1,0,0,1,744,7657)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Gunicorn也称为“绿色独角兽”，是一个使用广泛的、高性能的Python WSGI UNIX HTTP服务</tspan><tspan y="28.6" style="white-space:pre" x="8">器，移植自Ruby的独角兽（Unicorn）项目，使用pre-fork worker模式，具有使用非常简单，</tspan><tspan y="42.5" style="white-space:pre" x="8">轻量级的资源消耗，以及高性能等特点</tspan></text></g><g ed:parentid="536" id="550" transform="matrix(1,0,0,1,702,7711)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">工作中，经常需要在一个机器上开启多个服务。最简单的方法就是把多个启动命令放到一个启</tspan><tspan y="28.6" style="white-space:pre" x="8">动脚本里面，启动时直接启动这个脚本即可。</tspan></text></g><g ed:parentid="536" id="552" transform="matrix(1,0,0,1,702,7751)" ed:width="354" ed:height="19.5"><path stroke="#696969" d="M0,19.5L354,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Supervisor，简单来说就是Python编写的一个多进程管理工具。</tspan></text></g><g ed:parentid="538" id="554" transform="matrix(1,0,0,1,666,7777)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Celery是一个基于Python开发的分布式异步消息任务队列，其可以有助于轻松地实现任务的异</tspan><tspan y="28.6" style="white-space:pre" x="8">步处理。</tspan></text></g><g ed:parentid="538" id="556" transform="matrix(1,0,0,1,666,7817)" ed:width="258" ed:height="19.5"><path stroke="#696969" d="M0,19.5L258,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Celery的优点：简单；高可用；快速；灵活；</tspan></text></g><g ed:parentid="538" id="558" transform="matrix(1,0,0,1,666,7843)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Celery的默认设置就能满足基本的要求。Worker以Pool模式启动，默认大小为CPU核心数量，</tspan><tspan y="28.6" style="white-space:pre" x="8">序列化机制默认是pickle，但也可以指定为JSON。</tspan></text></g><g ed:parentid="110" id="560" transform="matrix(1,0,0,1,684,4841)" ed:width="90" ed:height="19.5"><path stroke="#696969" d="M0,19.5L90,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">5.1.YAML介绍</tspan></text></g><g ed:parentid="112" id="562" transform="matrix(1,0,0,1,700,5864)" ed:width="162" ed:height="19.5"><path stroke="#696969" d="M0,19.5L162,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">6.1.Salt的相关知识点介绍</tspan></text></g><g ed:parentid="110" id="564" transform="matrix(1,0,0,1,684,4887)" ed:width="156" ed:height="19.5"><path stroke="#696969" d="M0,19.5L156,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">5.2.Ansible的安装和配置</tspan></text></g><g ed:parentid="110" id="566" transform="matrix(1,0,0,1,684,4913)" ed:width="216" ed:height="19.5"><path stroke="#696969" d="M0,19.5L216,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">5.3.定义主机与组规则（Inventory）</tspan></text></g><g ed:parentid="110" id="568" transform="matrix(1,0,0,1,684,5150)" ed:width="156" ed:height="19.5"><path stroke="#696969" d="M0,19.5L156,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">5.4.Ansible常用模块介绍</tspan></text></g><g ed:parentid="110" id="570" transform="matrix(1,0,0,1,684,5407)" ed:width="114" ed:height="19.5"><path stroke="#696969" d="M0,19.5L114,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">5.5.playbook介绍</tspan></text></g><g ed:parentid="110" id="572" transform="matrix(1,0,0,1,684,5453)" ed:width="198" ed:height="19.5"><path stroke="#696969" d="M0,19.5L198,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">5.6.Ansible在AWS云平台中的应用</tspan></text></g><g ed:parentid="110" id="574" transform="matrix(1,0,0,1,684,5486)" ed:width="66" ed:height="19.5"><path stroke="#696969" d="M0,19.5L66,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">5.7.角色</tspan></text></g><g ed:parentid="110" id="576" transform="matrix(1,0,0,1,684,5519)" ed:width="114" ed:height="19.5"><path stroke="#696969" d="M0,19.5L114,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">5.8.Jinja2过滤器</tspan></text></g><g ed:parentid="110" id="578" transform="matrix(1,0,0,1,684,5578)" ed:width="132" ed:height="19.5"><path stroke="#696969" d="M0,19.5L132,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">5.9.Ansible速度优化</tspan></text></g><g ed:parentid="110" id="580" transform="matrix(1,0,0,1,684,5651)" ed:width="246" ed:height="19.5"><path stroke="#696969" d="M0,19.5L246,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">5.10.利用Ansible API提供自动化运维后端</tspan></text></g><g ed:parentid="110" id="582" transform="matrix(1,0,0,1,684,5691)" ed:width="162" ed:height="19.5"><path stroke="#696969" d="M0,19.5L162,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">5.11.Ansible2.2.新增功能</tspan></text></g><g ed:parentid="112" id="584" transform="matrix(1,0,0,1,700,6010)" ed:width="126" ed:height="19.5"><path stroke="#696969" d="M0,19.5L126,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">6.2.Salt的常见组件</tspan></text></g><g ed:parentid="112" id="586" transform="matrix(1,0,0,1,700,6123)" ed:width="138" ed:height="19.5"><path stroke="#696969" d="M0,19.5L138,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">6.3.Salt真是案例分享</tspan></text></g><g ed:parentid="112" id="588" transform="matrix(1,0,0,1,700,6176)" ed:width="138" ed:height="19.5"><path stroke="#696969" d="M0,19.5L138,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">6.4.Salt多Master搭建</tspan></text></g><g ed:parentid="112" id="590" transform="matrix(1,0,0,1,700,6236)" ed:width="114" ed:height="19.5"><path stroke="#696969" d="M0,19.5L114,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">6.5.Salt API介绍</tspan></text></g><g ed:parentid="110" id="592" transform="matrix(1,0,0,1,684,4635)" ed:width="438" ed:height="19.5"><path stroke="#696969" d="M0,19.5L438,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">相比较于Puppet和Saltstack而言，Ansible是一款轻量级的服务器集中管理软件</tspan></text></g><g ed:parentid="110" id="594" transform="matrix(1,0,0,1,684,4661)" ed:width="192" ed:height="19.5"><path stroke="#696969" d="M0,19.5L192,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Ansible是基于Paramiko开发的。</tspan></text></g><g ed:parentid="110" id="596" transform="matrix(1,0,0,1,684,4687)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Paramiko是用Python语言编写的一个模块，遵循SSH2协议，支持以加密和认证的方式，进行远</tspan><tspan y="28.6" style="white-space:pre" x="8">程服务器的连接</tspan></text></g><g ed:parentid="110" id="598" transform="matrix(1,0,0,1,684,4727)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Ansible与轻量级的自动化运维工具Fabric还有一个共同点，那就是不需要在远程主机上安装</tspan><tspan y="28.6" style="white-space:pre" x="8">客户端，因为它们都是基于SSH来与远程主机进行通信的</tspan></text></g><g ed:parentid="110" id="600" transform="matrix(1,0,0,1,684,4767)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">，Ansible符合Red Hat希望通过开放式开发提供无障碍设计和模块化架构的目标，主要体现在</tspan><tspan y="28.6" style="white-space:pre" x="8">以下几个方面：Ansible易于使用；Ansible是一个非常受欢迎的开源项目；Ansible支持多层</tspan><tspan y="42.5" style="white-space:pre" x="8">部署；Ansible为架构的多个层次带来一致性；Ansible支持异构IT环境；</tspan></text></g><g ed:parentid="560" id="602" transform="matrix(1,0,0,1,801,4821)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">YAML是一个可读性高的用于表达资料序列的格式。它的主要特点是可读性好、语法简单明了、</tspan><tspan y="28.6" style="white-space:pre" x="8">表达能力强、扩展性和通用性强等</tspan></text></g><g ed:parentid="560" id="604" transform="matrix(1,0,0,1,801,4861)" ed:width="510" ed:height="19.5"><path stroke="#696969" d="M0,19.5L510,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">YAML中提供了多种常量结构，具体包括整数、浮点数、字符串、NULL、日期、布尔、时间等。</tspan></text></g><g ed:parentid="568" id="606" transform="matrix(1,0,0,1,867,4939)" ed:width="456" ed:height="19.5"><path stroke="#696969" d="M0,19.5L456,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Ansible常用模块有很多，包括云计算、命令行、包管理、系统服务、用户管理等，</tspan></text></g><g ed:parentid="568" id="608" transform="matrix(1,0,0,1,867,4965)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Ansible的模块所实现的行为是冥等性（idempotence）的，只需要运行一次playbook就可以将</tspan><tspan y="28.6" style="white-space:pre" x="8">需要配置的机器都置为期望状态</tspan></text></g><g ed:parentid="568" id="610" transform="matrix(1,0,0,1,867,5005)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">运维工作中经常用到的几个模块：setup模块、copy模块、synchronize模块、file模块、ping</tspan><tspan y="28.6" style="white-space:pre" x="8">模块、group模块、user模块、shell模块、script模块、get_url模块、yum模块、yum模块、</tspan><tspan y="42.5" style="white-space:pre" x="8">cron模块、service模块</tspan></text></g><g ed:parentid="568" id="612" transform="matrix(1,0,0,1,867,5059)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">facts组件是Ansible用来采集客户端机器设备信息的一个重要功能，setup模块可用于获取</tspan><tspan y="28.6" style="white-space:pre" x="8">Ansible客户端机器的所有facts信息，并且可以使用filter来查看指定的信息</tspan></text></g><g ed:parentid="568" id="614" transform="matrix(1,0,0,1,867,5099)" ed:width="474" ed:height="19.5"><path stroke="#696969" d="M0,19.5L474,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">该模块可实现Ansible主机向客户端传送文件的功能，文件的变化是通过md5值来判断的</tspan></text></g><g ed:parentid="568" id="616" transform="matrix(1,0,0,1,867,5125)" ed:width="474" ed:height="19.5"><path stroke="#696969" d="M0,19.5L474,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">synchronize模块用于将Ansible机器的指定目录推送（push）到客户机器的指定目录下</tspan></text></g><g ed:parentid="568" id="618" transform="matrix(1,0,0,1,867,5151)" ed:width="234" ed:height="19.5"><path stroke="#696969" d="M0,19.5L234,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">file模块主要用来设置文件或目录的属性</tspan></text></g><g ed:parentid="568" id="620" transform="matrix(1,0,0,1,867,5177)" ed:width="138" ed:height="19.5"><path stroke="#696969" d="M0,19.5L138,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">user模块用于创建用户</tspan></text></g><g ed:parentid="568" id="622" transform="matrix(1,0,0,1,867,5203)" ed:width="480" ed:height="19.5"><path stroke="#696969" d="M0,19.5L480,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">command模块作为Ansible的默认模块，可以运行被控端机器权限范围内的所有shell命令</tspan></text></g><g ed:parentid="568" id="624" transform="matrix(1,0,0,1,867,5229)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">script模块用于在远程被控端主机执行本地Ansible机器中的Shell脚本文件，相当于“scp</tspan><tspan y="28.6" style="white-space:pre" x="8">+shell”的组合命令</tspan></text></g><g ed:parentid="568" id="626" transform="matrix(1,0,0,1,867,5269)" ed:width="510" ed:height="19.5"><path stroke="#696969" d="M0,19.5L510,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">get_url模块可以实现在远程主机上下载url到本地，这个模块在平时的工作中应该用得比较多</tspan></text></g><g ed:parentid="568" id="628" transform="matrix(1,0,0,1,867,5295)" ed:width="258" ed:height="19.5"><path stroke="#696969" d="M0,19.5L258,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">yum模块是用来管理Linux平台的软件包操作的</tspan></text></g><g ed:parentid="568" id="630" transform="matrix(1,0,0,1,867,5321)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">cron模块，顾名思义就是创建计划任务，可以定义webserver组被控端机器每天凌晨一点过一</tspan><tspan y="28.6" style="white-space:pre" x="8">分ntpdate自动对时</tspan></text></g><g ed:parentid="568" id="632" transform="matrix(1,0,0,1,867,5361)" ed:width="336" ed:height="19.5"><path stroke="#696969" d="M0,19.5L336,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">service模块被控端服务管理，例如开启、关闭、重启服务等</tspan></text></g><g ed:parentid="570" id="634" transform="matrix(1,0,0,1,825,5387)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">playbook（也称为剧本）是一个不同于Ansible Ad-hoc命令行执行方式的模式，其功能更为强</tspan><tspan y="28.6" style="white-space:pre" x="8">大灵活。简而言之，它是一个非常简单的配置管理和多主机部署系统。</tspan></text></g><g ed:parentid="570" id="636" transform="matrix(1,0,0,1,825,5427)" ed:width="306" ed:height="19.5"><path stroke="#696969" d="M0,19.5L306,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">playbook的模板是使用Python的jinja2模块来处理的。</tspan></text></g><g ed:parentid="574" id="640" transform="matrix(1,0,0,1,777,5479)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Ansible的角色（roles）是1.2版本引入的新特性，用于层次性、结构化地组织playbook。角</tspan><tspan y="28.6" style="white-space:pre" x="8">色能够根据层次型结构自动装载vars变量文件、tasks及handlers等。</tspan></text></g><g ed:parentid="578" id="644" transform="matrix(1,0,0,1,843,5545)" ed:width="456" ed:height="19.5"><path stroke="#696969" d="M0,19.5L456,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Ansible默认是同步阻塞模式，它会等待所有的机器都执行完毕之后才会在前台返回</tspan></text></g><g ed:parentid="578" id="646" transform="matrix(1,0,0,1,843,5571)" ed:width="480" ed:height="19.5"><path stroke="#696969" d="M0,19.5L480,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Ansible默认只会创建5个进程并发执行任务，所以一次任务只能同时控制5台机器执行。</tspan></text></g><g ed:parentid="578" id="648" transform="matrix(1,0,0,1,843,5597)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Ansible控制端采用的是系统默认的OpenSSH程序与被控制端之间进行连通，因此Ansible对SSH</tspan><tspan y="28.6" style="white-space:pre" x="8">的依赖性较强</tspan></text></g><g ed:parentid="580" id="652" transform="matrix(1,0,0,1,957,5637)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">如果此API是在公网机器上提供访问的，那么建议一定要配置Access Token（最低限度也要开</tspan><tspan y="28.6" style="white-space:pre" x="8">放iptables，只允许特定IP访问5000端口），不然很容易被恶意地大规模批量调用，从而使系</tspan><tspan y="42.5" style="white-space:pre" x="8">统产生大量垃圾数据，系统资源被大量消耗，甚至无法正常使用。</tspan></text></g><g ed:parentid="110" id="656" transform="matrix(1,0,0,1,684,5717)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Ansible与其他自动化运维工具（例如Puppet）的关注方向不一样，其关注的是软件使用的便</tspan><tspan y="28.6" style="white-space:pre" x="8">利性、简便性及扩展性</tspan></text></g><g ed:parentid="112" id="658" transform="matrix(1,0,0,1,700,5784)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">SaltStack（以下简称为Salt）是基于Python开发的一套C/S架构配置管理工具，其底层使用的</tspan><tspan y="28.6" style="white-space:pre" x="8">是ZeroMQ消息队列PUB/SUB方式通信，并且使用SSL证书签发的方式来进行认证管理</tspan></text></g><g ed:parentid="562" id="660" transform="matrix(1,0,0,1,889,5824)" ed:width="450" ed:height="19.5"><path stroke="#696969" d="M0,19.5L450,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">曾做过Salt与Ansible的对比，在连通性方面，Salt的速度要比Ansible快50倍左右</tspan></text></g><g ed:parentid="562" id="662" transform="matrix(1,0,0,1,889,5850)" ed:width="318" ed:height="19.5"><path stroke="#696969" d="M0,19.5L318,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Salt目前的通信模式总共分为两种模式：ZeroMQ和REAT。</tspan></text></g><g ed:parentid="562" id="664" transform="matrix(1,0,0,1,889,5876)" ed:width="514" ed:height="47.5"><path stroke="#696969" d="M0,47.5L514,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">所有的Salt被管理客户端节点（Minion），都是通过密钥进行加密通信的，使用端口为4506。</tspan><tspan y="28.6" style="white-space:pre" x="8">客户端与服务器端的内容传输是通过消息队列完成的，使用端口为4505。Master可以发送任何</tspan><tspan y="42.5" style="white-space:pre" x="8">指令让Minion执行</tspan></text></g><g ed:parentid="584" id="666" transform="matrix(1,0,0,1,853,5930)" ed:width="450" ed:height="19.5"><path stroke="#696969" d="M0,19.5L450,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Salt的常用组件，其中包括Salt的基础语法、常用模块、Grains组件及pillar组件</tspan></text></g><g ed:parentid="584" id="668" transform="matrix(1,0,0,1,853,5956)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Grains是Salt组件中非常重要的组件之一，它相当于Puppet的Facter。主要作用是负责采集</tspan><tspan y="28.6" style="white-space:pre" x="8">Minion端的常用属性信息，比如CPU、内存、磁盘及网络信息等</tspan></text></g><g ed:parentid="584" id="670" transform="matrix(1,0,0,1,853,5996)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">pillar也是Salt最重要的组件之一，其作用是定义Master端与Minion端相关的所有数据，相当</tspan><tspan y="28.6" style="white-space:pre" x="8">于是数据管理中心。</tspan></text></g><g ed:parentid="584" id="672" transform="matrix(1,0,0,1,853,6036)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">在Salt中执行任何一个操作都会在Master端产生一个jid号，而Minion端会在/var/cache/</tspan><tspan y="28.6" style="white-space:pre" x="8">salt/minion/proc中创建一个以jid为名称的文件，</tspan></text></g><g ed:parentid="584" id="674" transform="matrix(1,0,0,1,853,6076)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">State是Salt最核心的功能，我们首先通过预先定制好的sls（salt state file）文件来针对</tspan><tspan y="28.6" style="white-space:pre" x="8">特定的Minion端进行状态管理，支持包括程序包（pkg）、文件（file）和系统服务等功能</tspan></text></g><g ed:parentid="586" id="676" transform="matrix(1,0,0,1,865,6116)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">例中Salt采用了两个环境，即base和prod，base环境主要用于存放系统初始化的功能文件，而</tspan><tspan y="28.6" style="white-space:pre" x="8">prod主要用于存放生产线环境下的配置管理功能文件</tspan></text></g><g ed:parentid="588" id="678" transform="matrix(1,0,0,1,865,6156)" ed:width="514" ed:height="33.5"><path stroke="#696969" d="M0,33.5L514,33.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">线上环境采用的是双Master Salt，主要是防止单Master出现硬件故障的时候，会无法管理线</tspan><tspan y="28.6" style="white-space:pre" x="8">上的Minion客户端。</tspan></text></g><g ed:parentid="588" id="680" transform="matrix(1,0,0,1,865,6196)" ed:width="342" ed:height="19.5"><path stroke="#696969" d="M0,19.5L342,19.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Salt本身是没有相应的同步机制来同步多Master的各种数据的</tspan></text></g><g ed:parentid="590" id="682" transform="matrix(1,0,0,1,841,6222)" ed:width="348" ed:height="47.5"><path stroke="#696969" d="M0,47.5L348,47.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="14.6" style="white-space:pre" x="8">Salt本身就提供了两类API（也称为接口）与之交互。</tspan><tspan y="28.6" style="white-space:pre" x="8">1）只有在Master端或Minion端机器上才能调用的Python API。</tspan><tspan y="42.5" style="white-space:pre" x="8">2）可以在远程通过HTTP调用的Restful API</tspan></text></g><symbol id="plus"><path d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6z" fill="url(#lg1)"/><path stroke="#46a000" d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6zM3,6L9,6M6,3L6,9" stroke-width="0.7" fill="none"/></symbol><symbol id="minus"><path d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6z" fill="url(#lg1)"/><path stroke="#46a000" d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6zM3,6L9,6" stroke-width="0.7" fill="none"/></symbol><g ed:togtopicid="101" transform="translate(319,3943)"><use xlink:href="#minus"/></g><g ed:togtopicid="102" transform="translate(650,895)"><use xlink:href="#minus"/></g><g ed:togtopicid="104" transform="translate(660,2360)"><use xlink:href="#minus"/></g><g ed:togtopicid="106" transform="translate(728,3613)"><use xlink:href="#minus"/></g><g ed:togtopicid="108" transform="translate(676,4454)"><use xlink:href="#minus"/></g><g ed:togtopicid="110" transform="translate(658,5187)"><use xlink:href="#minus"/></g><g ed:togtopicid="112" transform="translate(674,6020)"><use xlink:href="#minus"/></g><g ed:togtopicid="114" transform="translate(709,6718)"><use xlink:href="#minus"/></g><g ed:togtopicid="116" transform="translate(609,7342)"><use xlink:href="#minus"/></g><g ed:togtopicid="120" transform="translate(863,212)"><use xlink:href="#minus"/></g><g ed:togtopicid="122" transform="translate(863,412)"><use xlink:href="#minus"/></g><g ed:togtopicid="124" transform="translate(845,766)"><use xlink:href="#minus"/></g><g ed:togtopicid="126" transform="translate(887,1126)"><use xlink:href="#minus"/></g><g ed:togtopicid="128" transform="translate(887,1315)"><use xlink:href="#minus"/></g><g ed:togtopicid="130" transform="translate(911,1525)"><use xlink:href="#minus"/></g><g ed:togtopicid="132" transform="translate(911,1631)"><use xlink:href="#minus"/></g><g ed:togtopicid="225" transform="translate(845,1724)"><use xlink:href="#minus"/></g><g ed:togtopicid="233" transform="translate(807,2021)"><use xlink:href="#minus"/></g><g ed:togtopicid="235" transform="translate(843,2298)"><use xlink:href="#minus"/></g><g ed:togtopicid="237" transform="translate(867,2391)"><use xlink:href="#minus"/></g><g ed:togtopicid="239" transform="translate(867,2524)"><use xlink:href="#minus"/></g><g ed:togtopicid="241" transform="translate(975,2757)"><use xlink:href="#minus"/></g><g ed:togtopicid="243" transform="translate(855,2903)"><use xlink:href="#minus"/></g><g ed:togtopicid="312" transform="translate(917,3069)"><use xlink:href="#minus"/></g><g ed:togtopicid="314" transform="translate(893,3188)"><use xlink:href="#minus"/></g><g ed:togtopicid="316" transform="translate(893,3234)"><use xlink:href="#minus"/></g><g ed:togtopicid="318" transform="translate(905,3320)"><use xlink:href="#minus"/></g><g ed:togtopicid="320" transform="translate(905,3752)"><use xlink:href="#minus"/></g><g ed:togtopicid="322" transform="translate(953,4131)"><use xlink:href="#minus"/></g><g ed:togtopicid="324" transform="translate(965,4204)"><use xlink:href="#minus"/></g><g ed:togtopicid="406" transform="translate(835,4408)"><use xlink:href="#minus"/></g><g ed:togtopicid="410" transform="translate(907,4487)"><use xlink:href="#minus"/></g><g ed:togtopicid="444" transform="translate(898,6628)"><use xlink:href="#minus"/></g><g ed:togtopicid="446" transform="translate(874,6754)"><use xlink:href="#minus"/></g><g ed:togtopicid="448" transform="translate(886,6833)"><use xlink:href="#minus"/></g><g ed:togtopicid="450" transform="translate(994,6906)"><use xlink:href="#minus"/></g><g ed:togtopicid="452" transform="translate(982,6972)"><use xlink:href="#minus"/></g><g ed:togtopicid="454" transform="translate(1042,6998)"><use xlink:href="#minus"/></g><g ed:togtopicid="456" transform="translate(1000,7077)"><use xlink:href="#minus"/></g><g ed:togtopicid="500" transform="translate(858,7249)"><use xlink:href="#minus"/></g><g ed:togtopicid="502" transform="translate(798,7302)"><use xlink:href="#minus"/></g><g ed:togtopicid="504" transform="translate(864,7348)"><use xlink:href="#minus"/></g><g ed:togtopicid="506" transform="translate(846,7448)"><use xlink:href="#minus"/></g><g ed:togtopicid="530" transform="translate(451,7708)"><use xlink:href="#minus"/></g><g ed:togtopicid="532" transform="translate(676,7582)"><use xlink:href="#minus"/></g><g ed:togtopicid="534" transform="translate(718,7662)"><use xlink:href="#minus"/></g><g ed:togtopicid="536" transform="translate(676,7735)"><use xlink:href="#minus"/></g><g ed:togtopicid="538" transform="translate(640,7821)"><use xlink:href="#minus"/></g><g ed:togtopicid="560" transform="translate(775,4845)"><use xlink:href="#minus"/></g><g ed:togtopicid="562" transform="translate(863,5867)"><use xlink:href="#minus"/></g><g ed:togtopicid="568" transform="translate(841,5154)"><use xlink:href="#minus"/></g><g ed:togtopicid="570" transform="translate(799,5411)"><use xlink:href="#minus"/></g><g ed:togtopicid="574" transform="translate(751,5490)"><use xlink:href="#minus"/></g><g ed:togtopicid="578" transform="translate(817,5582)"><use xlink:href="#minus"/></g><g ed:togtopicid="580" transform="translate(931,5655)"><use xlink:href="#minus"/></g><g ed:togtopicid="584" transform="translate(827,6013)"><use xlink:href="#minus"/></g><g ed:togtopicid="586" transform="translate(839,6126)"><use xlink:href="#minus"/></g><g ed:togtopicid="588" transform="translate(839,6179)"><use xlink:href="#minus"/></g><g ed:togtopicid="590" transform="translate(815,6239)"><use xlink:href="#minus"/></g></svg>