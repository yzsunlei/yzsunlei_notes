<svg ed:name="Page-1" ed:vSpacing="30" ed:hSpacing="30" xmlns="http://www.w3.org/2000/svg" xmlns:ed="https://www.edrawsoft.cn/xml/2017/SVGExtensions/" id="page100" width="1618" xmlns:xlink="http://www.w3.org/1999/xlink" height="9451" xmlns:ev="http://www.w3.org/2001/xml-events" viewBox="0 0 1618 9451"><style type="text/css"><![CDATA[
g[ed\:togtopicid],g[ed\:hyperlink],g[ed\:comment],g[ed\:note] {cursor:pointer;}
g[id] {-moz-user-select: none;-ms-user-select: none;user-select: none;}
svg text::selection,svg tspan::selection{background-color: #4285f4;color: #ffffff;fill: #ffffff;}
.st2 {fill:#303030;font-family:微软雅黑;font-size:12pt}
.st3 {fill:#454545;font-family:微软雅黑;font-size:10pt}
.st1 {fill:#ffffff;font-family:微软雅黑;font-size:14pt}
]]></style><defs><linearGradient id="lg1" x1="0%" y1="0%" x2="0%" y2="100%"><stop offset="0" stop-color="#ffffff"/><stop offset="0.25" stop-color="#f0f5f0"/><stop offset="0.75" stop-color="#e1ebe1"/><stop offset="1" stop-color="#c8d7c8"/></linearGradient></defs><rect fill="#ffffff" y="0" width="1618" height="9451" x="0"/><path stroke="#696969" d="M-102.6,2155.1C34.4,1779.5,-113.4,-2183.6,125.3,-2183.6" stroke-linecap="round" fill="none" ed:parentid="101" id="103" transform="matrix(1,0,0,1,336,2542)" ed:tosuperid="102" stroke-linejoin="round"/><path stroke="#696969" d="M-100.3,1743.6C32.8,1408.4,-112,-1772.1,125.3,-1772.1" stroke-linecap="round" fill="none" ed:parentid="101" id="105" transform="matrix(1,0,0,1,336,2953)" ed:tosuperid="104" stroke-linejoin="round"/><path stroke="#696969" d="M-96.5,1258.9C30,977.8,-109.7,-1287.4,125.3,-1287.4" stroke-linecap="round" fill="none" ed:parentid="101" id="107" transform="matrix(1,0,0,1,336,3438)" ed:tosuperid="106" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,121.9C5.4,121.9,-13.5,-121.9,13.5,-121.9" stroke-linecap="round" fill="none" ed:parentid="102" id="109" transform="matrix(1,0,0,1,653,236)" ed:tosuperid="108" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-1.4C-2.4,-1.4,4.6,1.4,13.5,1.4" stroke-linecap="round" fill="none" ed:parentid="102" id="111" transform="matrix(1,0,0,1,653,360)" ed:tosuperid="110" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-129.4C5.4,-129.4,-13.5,129.4,13.5,129.4" stroke-linecap="round" fill="none" ed:parentid="102" id="113" transform="matrix(1,0,0,1,653,488)" ed:tosuperid="112" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,150.4C5.4,150.4,-13.5,-150.4,13.5,-150.4" stroke-linecap="round" fill="none" ed:parentid="104" id="117" transform="matrix(1,0,0,1,711,1031)" ed:tosuperid="116" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-15.1C0.7,-15.1,-2.6,15.1,13.5,15.1" stroke-linecap="round" fill="none" ed:parentid="104" id="119" transform="matrix(1,0,0,1,711,1196)" ed:tosuperid="118" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-137.1C5.4,-137.1,-13.5,137.1,13.5,137.1" stroke-linecap="round" fill="none" ed:parentid="104" id="121" transform="matrix(1,0,0,1,711,1318)" ed:tosuperid="120" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-191.9C5.4,-191.9,-13.5,191.9,13.5,191.9" stroke-linecap="round" fill="none" ed:parentid="104" id="123" transform="matrix(1,0,0,1,711,1373)" ed:tosuperid="122" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,217.1C5.4,217.1,-13.5,-217.1,13.5,-217.1" stroke-linecap="round" fill="none" ed:parentid="106" id="125" transform="matrix(1,0,0,1,685,1934)" ed:tosuperid="124" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,151.6C5.4,151.6,-13.5,-151.6,13.5,-151.6" stroke-linecap="round" fill="none" ed:parentid="106" id="127" transform="matrix(1,0,0,1,685,1999)" ed:tosuperid="126" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,93.9C5.4,93.9,-13.5,-93.9,13.5,-93.9" stroke-linecap="round" fill="none" ed:parentid="106" id="129" transform="matrix(1,0,0,1,685,2057)" ed:tosuperid="128" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,18.9C1.5,18.9,-4.5,-18.9,13.5,-18.9" stroke-linecap="round" fill="none" ed:parentid="106" id="131" transform="matrix(1,0,0,1,685,2132)" ed:tosuperid="130" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-98.4C5.4,-98.4,-13.5,98.4,13.5,98.4" stroke-linecap="round" fill="none" ed:parentid="106" id="133" transform="matrix(1,0,0,1,685,2249)" ed:tosuperid="132" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-176.4C5.4,-176.4,-13.5,176.4,13.5,176.4" stroke-linecap="round" fill="none" ed:parentid="106" id="135" transform="matrix(1,0,0,1,685,2327)" ed:tosuperid="134" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-224.6C5.4,-224.6,-13.5,224.6,13.5,224.6" stroke-linecap="round" fill="none" ed:parentid="106" id="137" transform="matrix(1,0,0,1,685,2375)" ed:tosuperid="136" stroke-linejoin="round"/><path stroke="#696969" d="M-88.9,727.6C24.3,519.7,-104.8,-756.1,125.3,-756.1" stroke-linecap="round" fill="none" ed:parentid="101" id="139" transform="matrix(1,0,0,1,336,3969)" ed:tosuperid="138" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,207.6C5.4,207.6,-13.5,-207.6,13.5,-207.6" stroke-linecap="round" fill="none" ed:parentid="138" id="141" transform="matrix(1,0,0,1,685,3006)" ed:tosuperid="140" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,139.1C5.4,139.1,-13.5,-139.1,13.5,-139.1" stroke-linecap="round" fill="none" ed:parentid="138" id="143" transform="matrix(1,0,0,1,685,3074)" ed:tosuperid="142" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,73.6C5.4,73.6,-13.5,-73.6,13.5,-73.6" stroke-linecap="round" fill="none" ed:parentid="138" id="145" transform="matrix(1,0,0,1,685,3140)" ed:tosuperid="144" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,20.6C1.9,20.6,-5.3,-20.6,13.5,-20.6" stroke-linecap="round" fill="none" ed:parentid="138" id="147" transform="matrix(1,0,0,1,685,3193)" ed:tosuperid="146" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-44.9C5.1,-44.9,-12.8,44.9,13.5,44.9" stroke-linecap="round" fill="none" ed:parentid="138" id="149" transform="matrix(1,0,0,1,685,3258)" ed:tosuperid="148" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-127.6C5.4,-127.6,-13.5,127.6,13.5,127.6" stroke-linecap="round" fill="none" ed:parentid="138" id="151" transform="matrix(1,0,0,1,685,3341)" ed:tosuperid="150" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-222.9C5.4,-222.9,-13.5,222.9,13.5,222.9" stroke-linecap="round" fill="none" ed:parentid="138" id="153" transform="matrix(1,0,0,1,685,3436)" ed:tosuperid="152" stroke-linejoin="round"/><path stroke="#696969" d="M-77,321.4C11.5,190.1,-77.8,-349.9,125.3,-349.9" stroke-linecap="round" fill="none" ed:parentid="101" id="155" transform="matrix(1,0,0,1,336,4376)" ed:tosuperid="154" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,26.6C3,26.6,-7.8,-26.6,13.5,-26.6" stroke-linecap="round" fill="none" ed:parentid="154" id="157" transform="matrix(1,0,0,1,685,3999)" ed:tosuperid="156" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-51.4C5.4,-51.4,-13.4,51.4,13.5,51.4" stroke-linecap="round" fill="none" ed:parentid="154" id="159" transform="matrix(1,0,0,1,685,4077)" ed:tosuperid="158" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-96.6C5.4,-96.6,-13.5,96.6,13.5,96.6" stroke-linecap="round" fill="none" ed:parentid="154" id="161" transform="matrix(1,0,0,1,685,4122)" ed:tosuperid="160" stroke-linejoin="round"/><path stroke="#696969" d="M-51.6,60.4C6.3,10.1,33.2,-88.9,125.3,-88.9" stroke-linecap="round" fill="none" ed:parentid="101" id="165" transform="matrix(1,0,0,1,336,4637)" ed:tosuperid="164" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,36.1C4.3,36.1,-11,-36.1,13.5,-36.1" stroke-linecap="round" fill="none" ed:parentid="164" id="167" transform="matrix(1,0,0,1,685,4512)" ed:tosuperid="166" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-40.1C4.7,-40.1,-12,40.1,13.5,40.1" stroke-linecap="round" fill="none" ed:parentid="164" id="169" transform="matrix(1,0,0,1,685,4588)" ed:tosuperid="168" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-68.1C5.4,-68.1,-13.5,68.1,13.5,68.1" stroke-linecap="round" fill="none" ed:parentid="164" id="171" transform="matrix(1,0,0,1,685,4616)" ed:tosuperid="170" stroke-linejoin="round"/><path stroke="#696969" d="M-64.9,-122.1C1.4,-47,-0.2,150.6,125.3,150.6" stroke-linecap="round" fill="none" ed:parentid="101" id="173" transform="matrix(1,0,0,1,336,4876)" ed:tosuperid="172" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,65.9C5.4,65.9,-13.5,-65.9,13.5,-65.9" stroke-linecap="round" fill="none" ed:parentid="172" id="175" transform="matrix(1,0,0,1,711,4961)" ed:tosuperid="174" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-1.4C-2.4,-1.4,4.6,1.4,13.5,1.4" stroke-linecap="round" fill="none" ed:parentid="172" id="177" transform="matrix(1,0,0,1,711,5028)" ed:tosuperid="176" stroke-linejoin="round"/><path stroke="#696969" d="M-82.9,-494.9C19.7,-327.2,-100.6,523.4,125.3,523.4" stroke-linecap="round" fill="none" ed:parentid="101" id="181" transform="matrix(1,0,0,1,336,5249)" ed:tosuperid="180" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,211.1C5.4,211.1,-13.5,-211.1,13.5,-211.1" stroke-linecap="round" fill="none" ed:parentid="180" id="183" transform="matrix(1,0,0,1,740,5561)" ed:tosuperid="182" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,75.4C5.4,75.4,-13.5,-75.4,13.5,-75.4" stroke-linecap="round" fill="none" ed:parentid="180" id="185" transform="matrix(1,0,0,1,740,5697)" ed:tosuperid="184" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-119.9C5.4,-119.9,-13.5,119.9,13.5,119.9" stroke-linecap="round" fill="none" ed:parentid="180" id="187" transform="matrix(1,0,0,1,740,5892)" ed:tosuperid="186" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-234.1C5.4,-234.1,-13.5,234.1,13.5,234.1" stroke-linecap="round" fill="none" ed:parentid="180" id="189" transform="matrix(1,0,0,1,740,6006)" ed:tosuperid="188" stroke-linejoin="round"/><path stroke="#696969" d="M-91.8,-883.1C26.5,-651.7,-106.7,911.6,125.3,911.6" stroke-linecap="round" fill="none" ed:parentid="101" id="191" transform="matrix(1,0,0,1,336,5637)" ed:tosuperid="190" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,48.6C5.3,48.6,-13.3,-48.6,13.5,-48.6" stroke-linecap="round" fill="none" ed:parentid="190" id="193" transform="matrix(1,0,0,1,631,6500)" ed:tosuperid="192" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,18.9C1.5,18.9,-4.5,-18.9,13.5,-18.9" stroke-linecap="round" fill="none" ed:parentid="190" id="195" transform="matrix(1,0,0,1,631,6530)" ed:tosuperid="194" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-6.1C-1.3,-6.1,2.1,6.1,13.5,6.1" stroke-linecap="round" fill="none" ed:parentid="190" id="197" transform="matrix(1,0,0,1,631,6555)" ed:tosuperid="196" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-43.6C5,-43.6,-12.6,43.6,13.5,43.6" stroke-linecap="round" fill="none" ed:parentid="190" id="199" transform="matrix(1,0,0,1,631,6592)" ed:tosuperid="198" stroke-linejoin="round"/><path stroke="#696969" d="M-94.2,-1057.1C28.3,-801.6,-108.3,1085.6,125.3,1085.6" stroke-linecap="round" fill="none" ed:parentid="101" id="201" transform="matrix(1,0,0,1,336,5811)" ed:tosuperid="200" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,34.4C4.1,34.4,-10.5,-34.4,13.5,-34.4" stroke-linecap="round" fill="none" ed:parentid="200" id="203" transform="matrix(1,0,0,1,709,6862)" ed:tosuperid="202" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,18.9C1.5,18.9,-4.5,-18.9,13.5,-18.9" stroke-linecap="round" fill="none" ed:parentid="200" id="205" transform="matrix(1,0,0,1,709,6878)" ed:tosuperid="204" stroke-linejoin="round"/><path stroke="#696969" d="M-97.3,-1345.4C30.6,-1054,-110.2,1373.9,125.3,1373.9" stroke-linecap="round" fill="none" ed:parentid="101" id="209" transform="matrix(1,0,0,1,336,6099)" ed:tosuperid="208" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,203.4C5.4,203.4,-13.5,-203.4,13.5,-203.4" stroke-linecap="round" fill="none" ed:parentid="208" id="211" transform="matrix(1,0,0,1,698,7270)" ed:tosuperid="210" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,161.1C5.4,161.1,-13.5,-161.1,13.5,-161.1" stroke-linecap="round" fill="none" ed:parentid="208" id="213" transform="matrix(1,0,0,1,698,7312)" ed:tosuperid="212" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,114.1C5.4,114.1,-13.5,-114.1,13.5,-114.1" stroke-linecap="round" fill="none" ed:parentid="208" id="215" transform="matrix(1,0,0,1,698,7359)" ed:tosuperid="214" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,62.4C5.4,62.4,-13.5,-62.4,13.5,-62.4" stroke-linecap="round" fill="none" ed:parentid="208" id="217" transform="matrix(1,0,0,1,698,7411)" ed:tosuperid="216" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,2.9C-2,2.9,3.8,-2.9,13.5,-2.9" stroke-linecap="round" fill="none" ed:parentid="208" id="219" transform="matrix(1,0,0,1,698,7470)" ed:tosuperid="218" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-92.4C5.4,-92.4,-13.5,92.4,13.5,92.4" stroke-linecap="round" fill="none" ed:parentid="208" id="221" transform="matrix(1,0,0,1,698,7566)" ed:tosuperid="220" stroke-linejoin="round"/><path stroke="#696969" d="M-100.3,-1734.1C32.8,-1399.8,-112,1762.6,125.3,1762.6" stroke-linecap="round" fill="none" ed:parentid="101" id="223" transform="matrix(1,0,0,1,336,6488)" ed:tosuperid="222" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,130.1C5.4,130.1,-13.5,-130.1,13.5,-130.1" stroke-linecap="round" fill="none" ed:parentid="222" id="225" transform="matrix(1,0,0,1,663,8121)" ed:tosuperid="224" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,105.1C5.4,105.1,-13.5,-105.1,13.5,-105.1" stroke-linecap="round" fill="none" ed:parentid="222" id="227" transform="matrix(1,0,0,1,663,8146)" ed:tosuperid="226" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,50.4C5.4,50.4,-13.4,-50.4,13.5,-50.4" stroke-linecap="round" fill="none" ed:parentid="222" id="229" transform="matrix(1,0,0,1,663,8200)" ed:tosuperid="228" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-31.1C3.7,-31.1,-9.5,31.1,13.5,31.1" stroke-linecap="round" fill="none" ed:parentid="222" id="231" transform="matrix(1,0,0,1,663,8282)" ed:tosuperid="230" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-100.1C5.4,-100.1,-13.5,100.1,13.5,100.1" stroke-linecap="round" fill="none" ed:parentid="222" id="233" transform="matrix(1,0,0,1,663,8351)" ed:tosuperid="232" stroke-linejoin="round"/><path stroke="#696969" d="M-101.8,-1990.1C33.8,-1630.2,-112.9,2018.6,125.3,2018.6" stroke-linecap="round" fill="none" ed:parentid="101" id="237" transform="matrix(1,0,0,1,336,6744)" ed:tosuperid="236" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,45.6C5.2,45.6,-12.9,-45.6,13.5,-45.6" stroke-linecap="round" fill="none" ed:parentid="236" id="239" transform="matrix(1,0,0,1,759,8717)" ed:tosuperid="238" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,11.1C-0.1,11.1,-0.6,-11.1,13.5,-11.1" stroke-linecap="round" fill="none" ed:parentid="236" id="241" transform="matrix(1,0,0,1,759,8752)" ed:tosuperid="240" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-18.6C1.5,-18.6,-4.3,18.6,13.5,18.6" stroke-linecap="round" fill="none" ed:parentid="236" id="243" transform="matrix(1,0,0,1,759,8781)" ed:tosuperid="242" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-53.1C5.4,-53.1,-13.5,53.1,13.5,53.1" stroke-linecap="round" fill="none" ed:parentid="236" id="245" transform="matrix(1,0,0,1,759,8816)" ed:tosuperid="244" stroke-linejoin="round"/><path stroke="#696969" d="M-102.5,-2136.1C34.4,-1762.2,-113.3,2164.6,125.3,2164.6" stroke-linecap="round" fill="none" ed:parentid="101" id="247" transform="matrix(1,0,0,1,336,6890)" ed:tosuperid="246" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,24.9C2.7,24.9,-7.1,-24.9,13.5,-24.9" stroke-linecap="round" fill="none" ed:parentid="246" id="249" transform="matrix(1,0,0,1,647,9030)" ed:tosuperid="248" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,9.4C-0.5,9.4,0.3,-9.4,13.5,-9.4" stroke-linecap="round" fill="none" ed:parentid="246" id="251" transform="matrix(1,0,0,1,647,9045)" ed:tosuperid="250" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-6.1C-1.3,-6.1,2.1,6.1,13.5,6.1" stroke-linecap="round" fill="none" ed:parentid="246" id="253" transform="matrix(1,0,0,1,647,9061)" ed:tosuperid="252" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-21.6C2.1,-21.6,-5.7,21.6,13.5,21.6" stroke-linecap="round" fill="none" ed:parentid="246" id="255" transform="matrix(1,0,0,1,647,9076)" ed:tosuperid="254" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-37.1C4.4,-37.1,-11.3,37.1,13.5,37.1" stroke-linecap="round" fill="none" ed:parentid="246" id="259" transform="matrix(1,0,0,1,647,9092)" ed:tosuperid="258" stroke-linejoin="round"/><path stroke="#696969" d="M-102.9,-2219.1C34.6,-1837.5,-113.6,2247.6,125.3,2247.6" stroke-linecap="round" fill="none" ed:parentid="101" id="261" transform="matrix(1,0,0,1,336,6973)" ed:tosuperid="260" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,17.1C1.2,17.1,-3.6,-17.1,13.5,-17.1" stroke-linecap="round" fill="none" ed:parentid="260" id="263" transform="matrix(1,0,0,1,679,9204)" ed:tosuperid="262" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,1.6C-2.3,1.6,4.5,-1.6,13.5,-1.6" stroke-linecap="round" fill="none" ed:parentid="260" id="265" transform="matrix(1,0,0,1,679,9219)" ed:tosuperid="264" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-13.9C0.5,-13.9,-2,13.9,13.5,13.9" stroke-linecap="round" fill="none" ed:parentid="260" id="267" transform="matrix(1,0,0,1,679,9235)" ed:tosuperid="266" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-29.4C3.4,-29.4,-8.9,29.4,13.5,29.4" stroke-linecap="round" fill="none" ed:parentid="260" id="269" transform="matrix(1,0,0,1,679,9250)" ed:tosuperid="268" stroke-linejoin="round"/><path stroke="#696969" d="M-103.2,-2294.4C34.9,-1905.9,-113.7,2322.9,125.3,2322.9" stroke-linecap="round" fill="none" ed:parentid="101" id="271" transform="matrix(1,0,0,1,336,7048)" ed:tosuperid="270" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,17.1C1.2,17.1,-3.6,-17.1,13.5,-17.1" stroke-linecap="round" fill="none" ed:parentid="270" id="273" transform="matrix(1,0,0,1,679,9354)" ed:tosuperid="272" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,1.6C-2.3,1.6,4.5,-1.6,13.5,-1.6" stroke-linecap="round" fill="none" ed:parentid="270" id="275" transform="matrix(1,0,0,1,679,9370)" ed:tosuperid="274" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-13.9C0.5,-13.9,-2,13.9,13.5,13.9" stroke-linecap="round" fill="none" ed:parentid="270" id="277" transform="matrix(1,0,0,1,679,9385)" ed:tosuperid="276" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-29.4C3.4,-29.4,-8.9,29.4,13.5,29.4" stroke-linecap="round" fill="none" ed:parentid="270" id="279" transform="matrix(1,0,0,1,679,9401)" ed:tosuperid="278" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" stroke-linecap="round" fill="none" ed:parentid="108" id="352" transform="matrix(1,0,0,1,803,90)" ed:tosuperid="351" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="108" id="354" transform="matrix(1,0,0,1,803,115)" ed:tosuperid="353" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-34.5C4.1,-34.5,-10.5,34.5,13.5,34.5" stroke-linecap="round" fill="none" ed:parentid="108" id="356" transform="matrix(1,0,0,1,803,149)" ed:tosuperid="355" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,50C5.3,50,-13.4,-50,13.5,-50" stroke-linecap="round" fill="none" ed:parentid="110" id="358" transform="matrix(1,0,0,1,842,311)" ed:tosuperid="357" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" stroke-linecap="round" fill="none" ed:parentid="357" id="360" transform="matrix(1,0,0,1,1104,238)" ed:tosuperid="359" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" stroke-linecap="round" fill="none" ed:parentid="357" id="362" transform="matrix(1,0,0,1,1104,253)" ed:tosuperid="361" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" stroke-linecap="round" fill="none" ed:parentid="357" id="364" transform="matrix(1,0,0,1,1104,269)" ed:tosuperid="363" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-23.3C2.4,-23.3,-6.4,23.3,13.5,23.3" stroke-linecap="round" fill="none" ed:parentid="357" id="366" transform="matrix(1,0,0,1,1104,284)" ed:tosuperid="365" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-31C3.7,-31,-9.4,31,13.5,31" stroke-linecap="round" fill="none" ed:parentid="110" id="374" transform="matrix(1,0,0,1,842,392)" ed:tosuperid="373" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,32.8C3.9,32.8,-10,-32.8,13.5,-32.8" stroke-linecap="round" fill="none" ed:parentid="373" id="376" transform="matrix(1,0,0,1,1039,390)" ed:tosuperid="375" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" stroke-linecap="round" fill="none" ed:parentid="373" id="378" transform="matrix(1,0,0,1,1039,415)" ed:tosuperid="377" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" stroke-linecap="round" fill="none" ed:parentid="373" id="380" transform="matrix(1,0,0,1,1039,440)" ed:tosuperid="379" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-42.3C4.9,-42.3,-12.4,42.3,13.5,42.3" stroke-linecap="round" fill="none" ed:parentid="373" id="382" transform="matrix(1,0,0,1,1039,465)" ed:tosuperid="381" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,10.8C-0.2,10.8,-0.4,-10.8,13.5,-10.8" stroke-linecap="round" fill="none" ed:parentid="112" id="384" transform="matrix(1,0,0,1,816,606)" ed:tosuperid="383" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" stroke-linecap="round" fill="none" ed:parentid="112" id="386" transform="matrix(1,0,0,1,816,622)" ed:tosuperid="385" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-39.3C4.7,-39.3,-11.8,39.3,13.5,39.3" stroke-linecap="round" fill="none" ed:parentid="112" id="388" transform="matrix(1,0,0,1,816,656)" ed:tosuperid="387" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,214.1C5.4,214.1,-13.5,-214.1,13.5,-214.1" stroke-linecap="round" fill="none" ed:parentid="104" id="390" transform="matrix(1,0,0,1,711,967)" ed:tosuperid="389" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,48.3C5.3,48.3,-13.2,-48.3,13.5,-48.3" stroke-linecap="round" fill="none" ed:parentid="116" id="392" transform="matrix(1,0,0,1,830,832)" ed:tosuperid="391" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,32.8C3.9,32.8,-10,-32.8,13.5,-32.8" stroke-linecap="round" fill="none" ed:parentid="116" id="394" transform="matrix(1,0,0,1,830,848)" ed:tosuperid="393" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,17.3C1.2,17.3,-3.7,-17.3,13.5,-17.3" stroke-linecap="round" fill="none" ed:parentid="116" id="396" transform="matrix(1,0,0,1,830,863)" ed:tosuperid="395" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" stroke-linecap="round" fill="none" ed:parentid="116" id="398" transform="matrix(1,0,0,1,830,888)" ed:tosuperid="397" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-23.3C2.4,-23.3,-6.4,23.3,13.5,23.3" stroke-linecap="round" fill="none" ed:parentid="116" id="400" transform="matrix(1,0,0,1,830,904)" ed:tosuperid="399" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-48.3C5.3,-48.3,-13.2,48.3,13.5,48.3" stroke-linecap="round" fill="none" ed:parentid="116" id="402" transform="matrix(1,0,0,1,830,929)" ed:tosuperid="401" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,82.8C5.4,82.8,-13.5,-82.8,13.5,-82.8" stroke-linecap="round" fill="none" ed:parentid="118" id="404" transform="matrix(1,0,0,1,874,1129)" ed:tosuperid="403" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,67.3C5.4,67.3,-13.5,-67.3,13.5,-67.3" stroke-linecap="round" fill="none" ed:parentid="118" id="408" transform="matrix(1,0,0,1,874,1144)" ed:tosuperid="407" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,32.8C3.9,32.8,-10,-32.8,13.5,-32.8" stroke-linecap="round" fill="none" ed:parentid="118" id="410" transform="matrix(1,0,0,1,874,1179)" ed:tosuperid="409" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-1.8C-2.3,-1.8,4.4,1.8,13.5,1.8" stroke-linecap="round" fill="none" ed:parentid="118" id="412" transform="matrix(1,0,0,1,874,1213)" ed:tosuperid="411" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" stroke-linecap="round" fill="none" ed:parentid="118" id="414" transform="matrix(1,0,0,1,874,1229)" ed:tosuperid="413" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-42.3C4.9,-42.3,-12.4,42.3,13.5,42.3" stroke-linecap="round" fill="none" ed:parentid="118" id="416" transform="matrix(1,0,0,1,874,1254)" ed:tosuperid="415" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-76.8C5.4,-76.8,-13.5,76.8,13.5,76.8" stroke-linecap="round" fill="none" ed:parentid="118" id="418" transform="matrix(1,0,0,1,874,1288)" ed:tosuperid="417" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-101.8C5.4,-101.8,-13.5,101.8,13.5,101.8" stroke-linecap="round" fill="none" ed:parentid="118" id="420" transform="matrix(1,0,0,1,874,1313)" ed:tosuperid="419" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" stroke-linecap="round" fill="none" ed:parentid="120" id="422" transform="matrix(1,0,0,1,874,1460)" ed:tosuperid="421" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" stroke-linecap="round" fill="none" ed:parentid="122" id="424" transform="matrix(1,0,0,1,856,1540)" ed:tosuperid="423" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="122" id="426" transform="matrix(1,0,0,1,856,1565)" ed:tosuperid="425" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-34.5C4.1,-34.5,-10.5,34.5,13.5,34.5" stroke-linecap="round" fill="none" ed:parentid="122" id="428" transform="matrix(1,0,0,1,856,1600)" ed:tosuperid="427" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" stroke-linecap="round" fill="none" ed:parentid="124" id="436" transform="matrix(1,0,0,1,804,1704)" ed:tosuperid="435" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" stroke-linecap="round" fill="none" ed:parentid="124" id="440" transform="matrix(1,0,0,1,804,1729)" ed:tosuperid="439" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" stroke-linecap="round" fill="none" ed:parentid="126" id="442" transform="matrix(1,0,0,1,830,1820)" ed:tosuperid="441" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" stroke-linecap="round" fill="none" ed:parentid="126" id="444" transform="matrix(1,0,0,1,830,1835)" ed:tosuperid="443" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" stroke-linecap="round" fill="none" ed:parentid="126" id="446" transform="matrix(1,0,0,1,830,1860)" ed:tosuperid="445" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-37.5C4.5,-37.5,-11.4,37.5,13.5,37.5" stroke-linecap="round" fill="none" ed:parentid="126" id="448" transform="matrix(1,0,0,1,830,1885)" ed:tosuperid="447" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" stroke-linecap="round" fill="none" ed:parentid="128" id="450" transform="matrix(1,0,0,1,804,1968)" ed:tosuperid="449" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,45.3C5.1,45.3,-12.9,-45.3,13.5,-45.3" stroke-linecap="round" fill="none" ed:parentid="130" id="452" transform="matrix(1,0,0,1,843,2068)" ed:tosuperid="451" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" stroke-linecap="round" fill="none" ed:parentid="130" id="454" transform="matrix(1,0,0,1,843,2093)" ed:tosuperid="453" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" stroke-linecap="round" fill="none" ed:parentid="130" id="456" transform="matrix(1,0,0,1,843,2118)" ed:tosuperid="455" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" stroke-linecap="round" fill="none" ed:parentid="130" id="458" transform="matrix(1,0,0,1,843,2143)" ed:tosuperid="457" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-54.8C5.4,-54.8,-13.5,54.8,13.5,54.8" stroke-linecap="round" fill="none" ed:parentid="130" id="460" transform="matrix(1,0,0,1,843,2168)" ed:tosuperid="459" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,37.5C4.5,37.5,-11.4,-37.5,13.5,-37.5" stroke-linecap="round" fill="none" ed:parentid="132" id="462" transform="matrix(1,0,0,1,804,2310)" ed:tosuperid="461" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" stroke-linecap="round" fill="none" ed:parentid="132" id="464" transform="matrix(1,0,0,1,804,2335)" ed:tosuperid="463" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-22C2.1,-22,-5.9,22,13.5,22" stroke-linecap="round" fill="none" ed:parentid="132" id="466" transform="matrix(1,0,0,1,804,2370)" ed:tosuperid="465" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-47C5.2,-47,-13.1,47,13.5,47" stroke-linecap="round" fill="none" ed:parentid="132" id="468" transform="matrix(1,0,0,1,804,2395)" ed:tosuperid="467" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" stroke-linecap="round" fill="none" ed:parentid="134" id="470" transform="matrix(1,0,0,1,843,2488)" ed:tosuperid="469" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="134" id="472" transform="matrix(1,0,0,1,843,2504)" ed:tosuperid="471" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" stroke-linecap="round" fill="none" ed:parentid="134" id="474" transform="matrix(1,0,0,1,843,2519)" ed:tosuperid="473" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" stroke-linecap="round" fill="none" ed:parentid="136" id="476" transform="matrix(1,0,0,1,804,2592)" ed:tosuperid="475" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" stroke-linecap="round" fill="none" ed:parentid="136" id="478" transform="matrix(1,0,0,1,804,2617)" ed:tosuperid="477" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,251.1C5.4,251.1,-13.5,-251.1,13.5,-251.1" stroke-linecap="round" fill="none" ed:parentid="138" id="480" transform="matrix(1,0,0,1,685,2962)" ed:tosuperid="479" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" stroke-linecap="round" fill="none" ed:parentid="140" id="482" transform="matrix(1,0,0,1,804,2770)" ed:tosuperid="481" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" stroke-linecap="round" fill="none" ed:parentid="140" id="484" transform="matrix(1,0,0,1,804,2786)" ed:tosuperid="483" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" stroke-linecap="round" fill="none" ed:parentid="140" id="486" transform="matrix(1,0,0,1,804,2811)" ed:tosuperid="485" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-28C3.2,-28,-8.3,28,13.5,28" stroke-linecap="round" fill="none" ed:parentid="140" id="488" transform="matrix(1,0,0,1,804,2826)" ed:tosuperid="487" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" stroke-linecap="round" fill="none" ed:parentid="142" id="490" transform="matrix(1,0,0,1,804,2920)" ed:tosuperid="489" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="142" id="492" transform="matrix(1,0,0,1,804,2935)" ed:tosuperid="491" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" stroke-linecap="round" fill="none" ed:parentid="142" id="494" transform="matrix(1,0,0,1,804,2960)" ed:tosuperid="493" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" stroke-linecap="round" fill="none" ed:parentid="144" id="496" transform="matrix(1,0,0,1,804,3051)" ed:tosuperid="495" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="144" id="498" transform="matrix(1,0,0,1,804,3066)" ed:tosuperid="497" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" stroke-linecap="round" fill="none" ed:parentid="144" id="500" transform="matrix(1,0,0,1,804,3091)" ed:tosuperid="499" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" stroke-linecap="round" fill="none" ed:parentid="146" id="502" transform="matrix(1,0,0,1,804,3160)" ed:tosuperid="501" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" stroke-linecap="round" fill="none" ed:parentid="146" id="504" transform="matrix(1,0,0,1,804,3185)" ed:tosuperid="503" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" stroke-linecap="round" fill="none" ed:parentid="148" id="506" transform="matrix(1,0,0,1,843,3275)" ed:tosuperid="505" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" stroke-linecap="round" fill="none" ed:parentid="148" id="508" transform="matrix(1,0,0,1,843,3291)" ed:tosuperid="507" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" stroke-linecap="round" fill="none" ed:parentid="148" id="510" transform="matrix(1,0,0,1,843,3316)" ed:tosuperid="509" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-37.5C4.5,-37.5,-11.4,37.5,13.5,37.5" stroke-linecap="round" fill="none" ed:parentid="148" id="512" transform="matrix(1,0,0,1,843,3341)" ed:tosuperid="511" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" stroke-linecap="round" fill="none" ed:parentid="150" id="514" transform="matrix(1,0,0,1,804,3448)" ed:tosuperid="513" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" stroke-linecap="round" fill="none" ed:parentid="150" id="516" transform="matrix(1,0,0,1,804,3473)" ed:tosuperid="515" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" stroke-linecap="round" fill="none" ed:parentid="150" id="518" transform="matrix(1,0,0,1,804,3498)" ed:tosuperid="517" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,40.5C4.8,40.5,-12.1,-40.5,13.5,-40.5" stroke-linecap="round" fill="none" ed:parentid="152" id="520" transform="matrix(1,0,0,1,830,3619)" ed:tosuperid="519" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" stroke-linecap="round" fill="none" ed:parentid="152" id="522" transform="matrix(1,0,0,1,830,3644)" ed:tosuperid="521" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" stroke-linecap="round" fill="none" ed:parentid="152" id="524" transform="matrix(1,0,0,1,830,3669)" ed:tosuperid="523" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-34.5C4.1,-34.5,-10.5,34.5,13.5,34.5" stroke-linecap="round" fill="none" ed:parentid="152" id="526" transform="matrix(1,0,0,1,830,3694)" ed:tosuperid="525" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-50C5.3,-50,-13.4,50,13.5,50" stroke-linecap="round" fill="none" ed:parentid="152" id="530" transform="matrix(1,0,0,1,830,3709)" ed:tosuperid="529" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,104.6C5.4,104.6,-13.5,-104.6,13.5,-104.6" stroke-linecap="round" fill="none" ed:parentid="154" id="532" transform="matrix(1,0,0,1,685,3921)" ed:tosuperid="531" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,79.6C5.4,79.6,-13.5,-79.6,13.5,-79.6" stroke-linecap="round" fill="none" ed:parentid="154" id="534" transform="matrix(1,0,0,1,685,3946)" ed:tosuperid="533" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" stroke-linecap="round" fill="none" ed:parentid="156" id="536" transform="matrix(1,0,0,1,904,3945)" ed:tosuperid="535" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" stroke-linecap="round" fill="none" ed:parentid="156" id="538" transform="matrix(1,0,0,1,904,3970)" ed:tosuperid="537" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-22C2.1,-22,-5.9,22,13.5,22" stroke-linecap="round" fill="none" ed:parentid="156" id="540" transform="matrix(1,0,0,1,904,3995)" ed:tosuperid="539" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-37.5C4.5,-37.5,-11.4,37.5,13.5,37.5" stroke-linecap="round" fill="none" ed:parentid="156" id="542" transform="matrix(1,0,0,1,904,4010)" ed:tosuperid="541" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" stroke-linecap="round" fill="none" ed:parentid="158" id="544" transform="matrix(1,0,0,1,843,4113)" ed:tosuperid="543" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="158" id="550" transform="matrix(1,0,0,1,843,4129)" ed:tosuperid="549" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" stroke-linecap="round" fill="none" ed:parentid="158" id="552" transform="matrix(1,0,0,1,843,4154)" ed:tosuperid="551" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" stroke-linecap="round" fill="none" ed:parentid="160" id="554" transform="matrix(1,0,0,1,856,4224)" ed:tosuperid="553" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-116.9C5.4,-116.9,-13.5,116.9,13.5,116.9" stroke-linecap="round" fill="none" ed:parentid="154" id="558" transform="matrix(1,0,0,1,685,4143)" ed:tosuperid="557" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,107.6C5.4,107.6,-13.5,-107.6,13.5,-107.6" stroke-linecap="round" fill="none" ed:parentid="164" id="560" transform="matrix(1,0,0,1,685,4440)" ed:tosuperid="559" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" stroke-linecap="round" fill="none" ed:parentid="559" id="562" transform="matrix(1,0,0,1,942,4325)" ed:tosuperid="561" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" stroke-linecap="round" fill="none" ed:parentid="559" id="564" transform="matrix(1,0,0,1,942,4340)" ed:tosuperid="563" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,38.8C4.6,38.8,-11.7,-38.8,13.5,-38.8" stroke-linecap="round" fill="none" ed:parentid="166" id="566" transform="matrix(1,0,0,1,791,4437)" ed:tosuperid="565" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="166" id="568" transform="matrix(1,0,0,1,791,4476)" ed:tosuperid="567" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" stroke-linecap="round" fill="none" ed:parentid="567" id="570" transform="matrix(1,0,0,1,1057,4452)" ed:tosuperid="569" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" stroke-linecap="round" fill="none" ed:parentid="567" id="572" transform="matrix(1,0,0,1,1057,4468)" ed:tosuperid="571" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" stroke-linecap="round" fill="none" ed:parentid="567" id="576" transform="matrix(1,0,0,1,1057,4483)" ed:tosuperid="575" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-23.3C2.4,-23.3,-6.4,23.3,13.5,23.3" stroke-linecap="round" fill="none" ed:parentid="567" id="578" transform="matrix(1,0,0,1,1057,4499)" ed:tosuperid="577" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-48.3C5.3,-48.3,-13.2,48.3,13.5,48.3" stroke-linecap="round" fill="none" ed:parentid="166" id="580" transform="matrix(1,0,0,1,791,4524)" ed:tosuperid="579" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" stroke-linecap="round" fill="none" ed:parentid="168" id="582" transform="matrix(1,0,0,1,817,4625)" ed:tosuperid="581" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" stroke-linecap="round" fill="none" ed:parentid="168" id="586" transform="matrix(1,0,0,1,817,4641)" ed:tosuperid="585" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="170" id="588" transform="matrix(1,0,0,1,908,4684)" ed:tosuperid="587" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-102.6C5.4,-102.6,-13.5,102.6,13.5,102.6" stroke-linecap="round" fill="none" ed:parentid="164" id="592" transform="matrix(1,0,0,1,685,4650)" ed:tosuperid="591" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-127.6C5.4,-127.6,-13.5,127.6,13.5,127.6" stroke-linecap="round" fill="none" ed:parentid="164" id="594" transform="matrix(1,0,0,1,685,4675)" ed:tosuperid="593" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" stroke-linecap="round" fill="none" ed:parentid="176" id="596" transform="matrix(1,0,0,1,908,5014)" ed:tosuperid="595" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-19C1.6,-19,-4.5,19,13.5,19" stroke-linecap="round" fill="none" ed:parentid="176" id="598" transform="matrix(1,0,0,1,908,5049)" ed:tosuperid="597" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-34.5C4.1,-34.5,-10.5,34.5,13.5,34.5" stroke-linecap="round" fill="none" ed:parentid="176" id="600" transform="matrix(1,0,0,1,908,5064)" ed:tosuperid="599" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-60.9C5.4,-60.9,-13.5,60.9,13.5,60.9" stroke-linecap="round" fill="none" ed:parentid="172" id="602" transform="matrix(1,0,0,1,711,5088)" ed:tosuperid="601" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-95.4C5.4,-95.4,-13.5,95.4,13.5,95.4" stroke-linecap="round" fill="none" ed:parentid="172" id="604" transform="matrix(1,0,0,1,711,5122)" ed:tosuperid="603" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" stroke-linecap="round" fill="none" ed:parentid="174" id="606" transform="matrix(1,0,0,1,908,4887)" ed:tosuperid="605" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" stroke-linecap="round" fill="none" ed:parentid="174" id="608" transform="matrix(1,0,0,1,908,4912)" ed:tosuperid="607" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,239.1C5.4,239.1,-13.5,-239.1,13.5,-239.1" stroke-linecap="round" fill="none" ed:parentid="180" id="610" transform="matrix(1,0,0,1,740,5533)" ed:tosuperid="609" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" stroke-linecap="round" fill="none" ed:parentid="182" id="612" transform="matrix(1,0,0,1,859,5338)" ed:tosuperid="611" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" stroke-linecap="round" fill="none" ed:parentid="182" id="614" transform="matrix(1,0,0,1,859,5363)" ed:tosuperid="613" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,98.3C5.4,98.3,-13.5,-98.3,13.5,-98.3" stroke-linecap="round" fill="none" ed:parentid="184" id="616" transform="matrix(1,0,0,1,859,5523)" ed:tosuperid="615" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,73.3C5.4,73.3,-13.5,-73.3,13.5,-73.3" stroke-linecap="round" fill="none" ed:parentid="184" id="618" transform="matrix(1,0,0,1,859,5548)" ed:tosuperid="617" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,48.3C5.3,48.3,-13.2,-48.3,13.5,-48.3" stroke-linecap="round" fill="none" ed:parentid="184" id="620" transform="matrix(1,0,0,1,859,5573)" ed:tosuperid="619" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" stroke-linecap="round" fill="none" ed:parentid="184" id="622" transform="matrix(1,0,0,1,859,5598)" ed:tosuperid="621" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" stroke-linecap="round" fill="none" ed:parentid="184" id="624" transform="matrix(1,0,0,1,859,5614)" ed:tosuperid="623" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" stroke-linecap="round" fill="none" ed:parentid="184" id="626" transform="matrix(1,0,0,1,859,5639)" ed:tosuperid="625" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-42.3C4.9,-42.3,-12.4,42.3,13.5,42.3" stroke-linecap="round" fill="none" ed:parentid="184" id="628" transform="matrix(1,0,0,1,859,5664)" ed:tosuperid="627" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-67.3C5.4,-67.3,-13.5,67.3,13.5,67.3" stroke-linecap="round" fill="none" ed:parentid="184" id="630" transform="matrix(1,0,0,1,859,5689)" ed:tosuperid="629" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-82.8C5.4,-82.8,-13.5,82.8,13.5,82.8" stroke-linecap="round" fill="none" ed:parentid="184" id="632" transform="matrix(1,0,0,1,859,5704)" ed:tosuperid="631" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-107.8C5.4,-107.8,-13.5,107.8,13.5,107.8" stroke-linecap="round" fill="none" ed:parentid="184" id="634" transform="matrix(1,0,0,1,859,5729)" ed:tosuperid="633" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,72C5.4,72,-13.5,-72,13.5,-72" stroke-linecap="round" fill="none" ed:parentid="186" id="636" transform="matrix(1,0,0,1,859,5940)" ed:tosuperid="635" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" stroke-linecap="round" fill="none" ed:parentid="186" id="638" transform="matrix(1,0,0,1,859,5984)" ed:tosuperid="637" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" stroke-linecap="round" fill="none" ed:parentid="186" id="640" transform="matrix(1,0,0,1,859,6009)" ed:tosuperid="639" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-22C2.1,-22,-5.9,22,13.5,22" stroke-linecap="round" fill="none" ed:parentid="186" id="642" transform="matrix(1,0,0,1,859,6034)" ed:tosuperid="641" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-47C5.2,-47,-13.1,47,13.5,47" stroke-linecap="round" fill="none" ed:parentid="186" id="644" transform="matrix(1,0,0,1,859,6059)" ed:tosuperid="643" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-72C5.4,-72,-13.5,72,13.5,72" stroke-linecap="round" fill="none" ed:parentid="186" id="646" transform="matrix(1,0,0,1,859,6084)" ed:tosuperid="645" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,26.8C3,26.8,-7.9,-26.8,13.5,-26.8" stroke-linecap="round" fill="none" ed:parentid="188" id="648" transform="matrix(1,0,0,1,859,6214)" ed:tosuperid="647" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-26.8C3,-26.8,-7.9,26.8,13.5,26.8" stroke-linecap="round" fill="none" ed:parentid="188" id="650" transform="matrix(1,0,0,1,859,6267)" ed:tosuperid="649" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,98.6C5.4,98.6,-13.5,-98.6,13.5,-98.6" stroke-linecap="round" fill="none" ed:parentid="190" id="652" transform="matrix(1,0,0,1,631,6450)" ed:tosuperid="651" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,73.6C5.4,73.6,-13.5,-73.6,13.5,-73.6" stroke-linecap="round" fill="none" ed:parentid="190" id="654" transform="matrix(1,0,0,1,631,6475)" ed:tosuperid="653" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" stroke-linecap="round" fill="none" ed:parentid="192" id="656" transform="matrix(1,0,0,1,750,6461)" ed:tosuperid="655" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" stroke-linecap="round" fill="none" ed:parentid="194" id="658" transform="matrix(1,0,0,1,736,6516)" ed:tosuperid="657" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" stroke-linecap="round" fill="none" ed:parentid="196" id="660" transform="matrix(1,0,0,1,793,6566)" ed:tosuperid="659" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" stroke-linecap="round" fill="none" ed:parentid="198" id="662" transform="matrix(1,0,0,1,794,6628)" ed:tosuperid="661" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" stroke-linecap="round" fill="none" ed:parentid="198" id="664" transform="matrix(1,0,0,1,794,6653)" ed:tosuperid="663" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-85.9C5.4,-85.9,-13.5,85.9,13.5,85.9" stroke-linecap="round" fill="none" ed:parentid="190" id="666" transform="matrix(1,0,0,1,631,6635)" ed:tosuperid="665" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-110.9C5.4,-110.9,-13.5,110.9,13.5,110.9" stroke-linecap="round" fill="none" ed:parentid="190" id="668" transform="matrix(1,0,0,1,631,6660)" ed:tosuperid="667" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3.4C-1.9,3.4,3.5,-3.4,13.5,-3.4" stroke-linecap="round" fill="none" ed:parentid="200" id="670" transform="matrix(1,0,0,1,709,6893)" ed:tosuperid="669" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-21.6C2.1,-21.6,-5.7,21.6,13.5,21.6" stroke-linecap="round" fill="none" ed:parentid="200" id="672" transform="matrix(1,0,0,1,709,6918)" ed:tosuperid="671" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-46.6C5.2,-46.6,-13.1,46.6,13.5,46.6" stroke-linecap="round" fill="none" ed:parentid="200" id="674" transform="matrix(1,0,0,1,709,6943)" ed:tosuperid="673" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" stroke-linecap="round" fill="none" ed:parentid="210" id="676" transform="matrix(1,0,0,1,819,7076)" ed:tosuperid="675" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-1.8C-2.3,-1.8,4.4,1.8,13.5,1.8" stroke-linecap="round" fill="none" ed:parentid="212" id="678" transform="matrix(1,0,0,1,810,7153)" ed:tosuperid="677" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" stroke-linecap="round" fill="none" ed:parentid="212" id="680" transform="matrix(1,0,0,1,810,7168)" ed:tosuperid="679" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-14.3C0.6,-14.3,-2.2,14.3,13.5,14.3" stroke-linecap="round" fill="none" ed:parentid="214" id="682" transform="matrix(1,0,0,1,819,7259)" ed:tosuperid="681" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" stroke-linecap="round" fill="none" ed:parentid="216" id="684" transform="matrix(1,0,0,1,802,7346)" ed:tosuperid="683" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-22C2.1,-22,-5.9,22,13.5,22" stroke-linecap="round" fill="none" ed:parentid="216" id="686" transform="matrix(1,0,0,1,802,7371)" ed:tosuperid="685" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" stroke-linecap="round" fill="none" ed:parentid="218" id="688" transform="matrix(1,0,0,1,810,7465)" ed:tosuperid="687" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-22C2.1,-22,-5.9,22,13.5,22" stroke-linecap="round" fill="none" ed:parentid="218" id="690" transform="matrix(1,0,0,1,810,7490)" ed:tosuperid="689" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,57.8C5.4,57.8,-13.5,-57.8,13.5,-57.8" stroke-linecap="round" fill="none" ed:parentid="220" id="692" transform="matrix(1,0,0,1,864,7600)" ed:tosuperid="691" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,32.8C3.9,32.8,-10,-32.8,13.5,-32.8" stroke-linecap="round" fill="none" ed:parentid="220" id="694" transform="matrix(1,0,0,1,864,7625)" ed:tosuperid="693" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,17.3C1.2,17.3,-3.7,-17.3,13.5,-17.3" stroke-linecap="round" fill="none" ed:parentid="220" id="696" transform="matrix(1,0,0,1,864,7641)" ed:tosuperid="695" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" stroke-linecap="round" fill="none" ed:parentid="220" id="698" transform="matrix(1,0,0,1,864,7666)" ed:tosuperid="697" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" stroke-linecap="round" fill="none" ed:parentid="220" id="700" transform="matrix(1,0,0,1,864,7691)" ed:tosuperid="699" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-57.8C5.4,-57.8,-13.5,57.8,13.5,57.8" stroke-linecap="round" fill="none" ed:parentid="220" id="702" transform="matrix(1,0,0,1,864,7716)" ed:tosuperid="701" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-195.4C5.4,-195.4,-13.5,195.4,13.5,195.4" stroke-linecap="round" fill="none" ed:parentid="208" id="704" transform="matrix(1,0,0,1,698,7669)" ed:tosuperid="703" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" stroke-linecap="round" fill="none" ed:parentid="703" id="706" transform="matrix(1,0,0,1,1082,7844)" ed:tosuperid="705" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" stroke-linecap="round" fill="none" ed:parentid="703" id="708" transform="matrix(1,0,0,1,1082,7869)" ed:tosuperid="707" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" stroke-linecap="round" fill="none" ed:parentid="703" id="710" transform="matrix(1,0,0,1,1082,7894)" ed:tosuperid="709" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" stroke-linecap="round" fill="none" ed:parentid="224" id="712" transform="matrix(1,0,0,1,784,7995)" ed:tosuperid="711" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" stroke-linecap="round" fill="none" ed:parentid="226" id="714" transform="matrix(1,0,0,1,858,8045)" ed:tosuperid="713" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" stroke-linecap="round" fill="none" ed:parentid="228" id="716" transform="matrix(1,0,0,1,801,8125)" ed:tosuperid="715" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" stroke-linecap="round" fill="none" ed:parentid="228" id="718" transform="matrix(1,0,0,1,801,8150)" ed:tosuperid="717" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-34.5C4.1,-34.5,-10.5,34.5,13.5,34.5" stroke-linecap="round" fill="none" ed:parentid="228" id="720" transform="matrix(1,0,0,1,801,8185)" ed:tosuperid="719" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,22C2.1,22,-5.9,-22,13.5,-22" stroke-linecap="round" fill="none" ed:parentid="230" id="722" transform="matrix(1,0,0,1,770,8291)" ed:tosuperid="721" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-31.5C3.7,-31.5,-9.6,31.5,13.5,31.5" stroke-linecap="round" fill="none" ed:parentid="230" id="724" transform="matrix(1,0,0,1,770,8345)" ed:tosuperid="723" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" stroke-linecap="round" fill="none" ed:parentid="232" id="726" transform="matrix(1,0,0,1,801,8448)" ed:tosuperid="725" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-22C2.1,-22,-5.9,22,13.5,22" stroke-linecap="round" fill="none" ed:parentid="232" id="729" transform="matrix(1,0,0,1,801,8473)" ed:tosuperid="728" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-147.1C5.4,-147.1,-13.5,147.1,13.5,147.1" stroke-linecap="round" fill="none" ed:parentid="222" id="731" transform="matrix(1,0,0,1,663,8398)" ed:tosuperid="730" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,70.6C5.4,70.6,-13.5,-70.6,13.5,-70.6" stroke-linecap="round" fill="none" ed:parentid="236" id="733" transform="matrix(1,0,0,1,759,8692)" ed:tosuperid="732" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" stroke-linecap="round" fill="none" ed:parentid="238" id="735" transform="matrix(1,0,0,1,883,8681)" ed:tosuperid="734" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" stroke-linecap="round" fill="none" ed:parentid="240" id="737" transform="matrix(1,0,0,1,869,8750)" ed:tosuperid="736" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" stroke-linecap="round" fill="none" ed:parentid="242" id="739" transform="matrix(1,0,0,1,872,8805)" ed:tosuperid="738" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-14.3C0.6,-14.3,-2.2,14.3,13.5,14.3" stroke-linecap="round" fill="none" ed:parentid="244" id="741" transform="matrix(1,0,0,1,912,8883)" ed:tosuperid="740" stroke-linejoin="round"/><path stroke="#696969" d="M-13.5,-92.4C5.4,-92.4,-13.5,92.4,13.5,92.4" stroke-linecap="round" fill="none" ed:parentid="236" id="743" transform="matrix(1,0,0,1,759,8855)" ed:tosuperid="742" stroke-linejoin="round"/><g ed:layout="rightmap" id="101" transform="matrix(1,0,0,1,23,4697)" ed:width="375" ed:height="57" ed:topictype="mainidea"><path d="M4,0L371,0C373.7,0,375,1.3,375,4L375,53C375,55.7,373.7,57,371,57L4,57C1.3,57,0,55.7,0,53L0,4C0,1.3,1.3,0,4,0z" stroke="#435fbc" stroke-width="3" fill="#435fbc" stroke-linejoin="round"/><text class="st1"><tspan y="34.5" style="white-space:pre" x="21">《Docker技术入门与实战（第三版）》</tspan></text></g><g ed:parentid="101" id="102" transform="matrix(1,0,0,1,461,340)" ed:width="178" ed:height="37"><path d="M4,0L174,0C176.7,0,178,1.3,178,4L178,33C178,35.7,176.7,37,174,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第一章 初识Docker</tspan></text></g><g ed:parentid="101" id="104" transform="matrix(1,0,0,1,461,1163)" ed:width="236" ed:height="37"><path d="M4,0L232,0C234.7,0,236,1.3,236,4L236,33C236,35.7,234.7,37,232,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第二章 核心概念与安装配置</tspan></text></g><g ed:parentid="101" id="106" transform="matrix(1,0,0,1,461,2132)" ed:width="210" ed:height="37"><path d="M4,0L206,0C208.7,0,210,1.3,210,4L210,33C210,35.7,208.7,37,206,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第三章 使用Docker镜像</tspan></text></g><g ed:parentid="102" id="108" transform="matrix(1,0,0,1,666,90)" ed:width="123" ed:height="24.5"><path stroke="#696969" d="M0,24.5L123,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">1.1.什么是Docker</tspan></text></g><g ed:parentid="102" id="110" transform="matrix(1,0,0,1,666,337)" ed:width="162" ed:height="24.5"><path stroke="#696969" d="M0,24.5L162,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">1.2.为什么要使用Docker</tspan></text></g><g ed:parentid="102" id="112" transform="matrix(1,0,0,1,666,593)" ed:width="136" ed:height="24.5"><path stroke="#696969" d="M0,24.5L136,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">1.3.Docker与虚拟化</tspan></text></g><g ed:parentid="104" id="116" transform="matrix(1,0,0,1,724,856)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">2.1.核心概念</tspan></text></g><g ed:parentid="104" id="118" transform="matrix(1,0,0,1,724,1187)" ed:width="136" ed:height="24.5"><path stroke="#696969" d="M0,24.5L136,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">2.2.安装Docker引擎</tspan></text></g><g ed:parentid="104" id="120" transform="matrix(1,0,0,1,724,1431)" ed:width="136" ed:height="24.5"><path stroke="#696969" d="M0,24.5L136,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">2.3.配置Docker服务</tspan></text></g><g ed:parentid="104" id="122" transform="matrix(1,0,0,1,724,1541)" ed:width="118" ed:height="24.5"><path stroke="#696969" d="M0,24.5L118,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">2.4.推荐实践环境</tspan></text></g><g ed:parentid="106" id="124" transform="matrix(1,0,0,1,698,1692)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">3.1.获取镜像</tspan></text></g><g ed:parentid="106" id="126" transform="matrix(1,0,0,1,698,1823)" ed:width="118" ed:height="24.5"><path stroke="#696969" d="M0,24.5L118,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">3.2.查看镜像信息</tspan></text></g><g ed:parentid="106" id="128" transform="matrix(1,0,0,1,698,1939)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">3.3.搜寻镜像</tspan></text></g><g ed:parentid="106" id="130" transform="matrix(1,0,0,1,698,2089)" ed:width="131" ed:height="24.5"><path stroke="#696969" d="M0,24.5L131,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">3.4.删除和清理镜像</tspan></text></g><g ed:parentid="106" id="132" transform="matrix(1,0,0,1,698,2323)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">3.5.创建镜像</tspan></text></g><g ed:parentid="106" id="134" transform="matrix(1,0,0,1,698,2479)" ed:width="131" ed:height="24.5"><path stroke="#696969" d="M0,24.5L131,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">3.6.存出和载入镜像</tspan></text></g><g ed:parentid="106" id="136" transform="matrix(1,0,0,1,698,2576)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">3.7.上传镜像</tspan></text></g><g ed:parentid="101" id="138" transform="matrix(1,0,0,1,461,3195)" ed:width="210" ed:height="37"><path d="M4,0L206,0C208.7,0,210,1.3,210,4L210,33C210,35.7,208.7,37,206,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第四章 操作Docker容器</tspan></text></g><g ed:parentid="138" id="140" transform="matrix(1,0,0,1,698,2774)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">4.1.创建容器</tspan></text></g><g ed:parentid="138" id="142" transform="matrix(1,0,0,1,698,2911)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">4.2.停止容器</tspan></text></g><g ed:parentid="138" id="144" transform="matrix(1,0,0,1,698,3042)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">4.3.进入容器</tspan></text></g><g ed:parentid="138" id="146" transform="matrix(1,0,0,1,698,3148)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">4.4.删除容器</tspan></text></g><g ed:parentid="138" id="148" transform="matrix(1,0,0,1,698,3279)" ed:width="131" ed:height="24.5"><path stroke="#696969" d="M0,24.5L131,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">4.5.导入和导出容器</tspan></text></g><g ed:parentid="138" id="150" transform="matrix(1,0,0,1,698,3444)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">4.6.查看容器</tspan></text></g><g ed:parentid="138" id="152" transform="matrix(1,0,0,1,698,3635)" ed:width="118" ed:height="24.5"><path stroke="#696969" d="M0,24.5L118,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">4.7.其他容器命令</tspan></text></g><g ed:parentid="101" id="154" transform="matrix(1,0,0,1,461,4007)" ed:width="210" ed:height="37"><path d="M4,0L206,0C208.7,0,210,1.3,210,4L210,33C210,35.7,208.7,37,206,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第五章 访问Docker仓库</tspan></text></g><g ed:parentid="154" id="156" transform="matrix(1,0,0,1,698,3948)" ed:width="192" ed:height="24.5"><path stroke="#696969" d="M0,24.5L192,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">5.1.Docker Hub公共镜像市场</tspan></text></g><g ed:parentid="154" id="158" transform="matrix(1,0,0,1,698,4104)" ed:width="131" ed:height="24.5"><path stroke="#696969" d="M0,24.5L131,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">5.2.第三方镜像市场</tspan></text></g><g ed:parentid="154" id="160" transform="matrix(1,0,0,1,698,4195)" ed:width="144" ed:height="24.5"><path stroke="#696969" d="M0,24.5L144,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">5.3.搭建本地私有仓库</tspan></text></g><g ed:parentid="101" id="164" transform="matrix(1,0,0,1,461,4529)" ed:width="210" ed:height="37"><path d="M4,0L206,0C208.7,0,210,1.3,210,4L210,33C210,35.7,208.7,37,206,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第六章 Docker数据管理</tspan></text></g><g ed:parentid="164" id="166" transform="matrix(1,0,0,1,698,4451)" ed:width="79" ed:height="24.5"><path stroke="#696969" d="M0,24.5L79,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">6.1.数据卷</tspan></text></g><g ed:parentid="164" id="168" transform="matrix(1,0,0,1,698,4604)" ed:width="105" ed:height="24.5"><path stroke="#696969" d="M0,24.5L105,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">6.2.数据卷容器</tspan></text></g><g ed:parentid="164" id="170" transform="matrix(1,0,0,1,698,4660)" ed:width="196" ed:height="24.5"><path stroke="#696969" d="M0,24.5L196,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">6.3.利用数据卷容器来迁移数据</tspan></text></g><g ed:parentid="101" id="172" transform="matrix(1,0,0,1,461,5008)" ed:width="236" ed:height="37"><path d="M4,0L232,0C234.7,0,236,1.3,236,4L236,33C236,35.7,234.7,37,232,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第七章 端口映射与容器互联</tspan></text></g><g ed:parentid="172" id="174" transform="matrix(1,0,0,1,724,4871)" ed:width="170" ed:height="24.5"><path stroke="#696969" d="M0,24.5L170,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">7.1.端口映射实现容器访问</tspan></text></g><g ed:parentid="172" id="176" transform="matrix(1,0,0,1,724,5005)" ed:width="170" ed:height="24.5"><path stroke="#696969" d="M0,24.5L170,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">7.2.互联机制实现便捷互动</tspan></text></g><g ed:parentid="101" id="180" transform="matrix(1,0,0,1,461,5754)" ed:width="265" ed:height="37"><path d="M4,0L261,0C263.7,0,265,1.3,265,4L265,33C265,35.7,263.7,37,261,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第八章 使用Dockerfile创建镜像</tspan></text></g><g ed:parentid="180" id="182" transform="matrix(1,0,0,1,753,5326)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">8.1.基本结构</tspan></text></g><g ed:parentid="180" id="184" transform="matrix(1,0,0,1,753,5597)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">8.2.指令说明</tspan></text></g><g ed:parentid="180" id="186" transform="matrix(1,0,0,1,753,5988)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">8.3.创建镜像</tspan></text></g><g ed:parentid="180" id="188" transform="matrix(1,0,0,1,753,6216)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">8.4.最佳实践</tspan></text></g><g ed:parentid="101" id="190" transform="matrix(1,0,0,1,461,6530)" ed:width="156" ed:height="37"><path d="M4,0L152,0C154.7,0,156,1.3,156,4L156,33C156,35.7,154.7,37,152,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第九章 操作系统</tspan></text></g><g ed:parentid="190" id="192" transform="matrix(1,0,0,1,644,6427)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">9.1.BusyBox</tspan></text></g><g ed:parentid="190" id="194" transform="matrix(1,0,0,1,644,6487)" ed:width="78" ed:height="24.5"><path stroke="#696969" d="M0,24.5L78,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">9.2.Alpine</tspan></text></g><g ed:parentid="190" id="196" transform="matrix(1,0,0,1,644,6537)" ed:width="135" ed:height="24.5"><path stroke="#696969" d="M0,24.5L135,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">9.3.Debian/Ubantu</tspan></text></g><g ed:parentid="190" id="198" transform="matrix(1,0,0,1,644,6612)" ed:width="136" ed:height="24.5"><path stroke="#696969" d="M0,24.5L136,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">9.4.CentOS/Fedora</tspan></text></g><g ed:parentid="101" id="200" transform="matrix(1,0,0,1,461,6878)" ed:width="234" ed:height="37"><path d="M4,0L230,0C232.7,0,234,1.3,234,4L234,33C234,35.7,232.7,37,230,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第十章 为镜像添加SSH服务</tspan></text></g><g ed:parentid="200" id="202" transform="matrix(1,0,0,1,722,6804)" ed:width="173" ed:height="24.5"><path stroke="#696969" d="M0,24.5L173,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">10.1.基于commit命令创建</tspan></text></g><g ed:parentid="200" id="204" transform="matrix(1,0,0,1,722,6835)" ed:width="162" ed:height="24.5"><path stroke="#696969" d="M0,24.5L162,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">10.2.使用Dockerfile创建</tspan></text></g><g ed:parentid="101" id="208" transform="matrix(1,0,0,1,461,7455)" ed:width="223" ed:height="37"><path d="M4,0L219,0C221.7,0,223,1.3,223,4L223,33C223,35.7,221.7,37,219,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第十一章 Web服务与应用</tspan></text></g><g ed:parentid="208" id="210" transform="matrix(1,0,0,1,711,7042)" ed:width="94" ed:height="24.5"><path stroke="#696969" d="M0,24.5L94,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">11.1.Apache</tspan></text></g><g ed:parentid="208" id="212" transform="matrix(1,0,0,1,711,7127)" ed:width="85" ed:height="24.5"><path stroke="#696969" d="M0,24.5L85,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">11.2.Nginx</tspan></text></g><g ed:parentid="208" id="214" transform="matrix(1,0,0,1,711,7221)" ed:width="94" ed:height="24.5"><path stroke="#696969" d="M0,24.5L94,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">11.3.Tomcat</tspan></text></g><g ed:parentid="208" id="216" transform="matrix(1,0,0,1,711,7324)" ed:width="77" ed:height="24.5"><path stroke="#696969" d="M0,24.5L77,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">11.4.Jetty</tspan></text></g><g ed:parentid="208" id="218" transform="matrix(1,0,0,1,711,7443)" ed:width="85" ed:height="24.5"><path stroke="#696969" d="M0,24.5L85,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">11.5.LAMP</tspan></text></g><g ed:parentid="208" id="220" transform="matrix(1,0,0,1,711,7634)" ed:width="139" ed:height="24.5"><path stroke="#696969" d="M0,24.5L139,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">11.6.持续开发与管理</tspan></text></g><g ed:parentid="101" id="222" transform="matrix(1,0,0,1,461,8232)" ed:width="188" ed:height="37"><path d="M4,0L184,0C186.7,0,188,1.3,188,4L188,33C188,35.7,186.7,37,184,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第十二章 数据库应用</tspan></text></g><g ed:parentid="222" id="224" transform="matrix(1,0,0,1,676,7966)" ed:width="94" ed:height="24.5"><path stroke="#696969" d="M0,24.5L94,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">12.1.MySQL</tspan></text></g><g ed:parentid="222" id="226" transform="matrix(1,0,0,1,676,8016)" ed:width="168" ed:height="24.5"><path stroke="#696969" d="M0,24.5L168,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">12.2.Oracle Database XE</tspan></text></g><g ed:parentid="222" id="228" transform="matrix(1,0,0,1,676,8126)" ed:width="111" ed:height="24.5"><path stroke="#696969" d="M0,24.5L111,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">12.3.MongoDB</tspan></text></g><g ed:parentid="222" id="230" transform="matrix(1,0,0,1,676,8289)" ed:width="80" ed:height="24.5"><path stroke="#696969" d="M0,24.5L80,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">12.4.Redis</tspan></text></g><g ed:parentid="222" id="232" transform="matrix(1,0,0,1,676,8427)" ed:width="111" ed:height="24.5"><path stroke="#696969" d="M0,24.5L111,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">12.5.Cassandra</tspan></text></g><g ed:parentid="101" id="236" transform="matrix(1,0,0,1,461,8744)" ed:width="284" ed:height="37"><path d="M4,0L280,0C282.7,0,284,1.3,284,4L284,33C284,35.7,282.7,37,280,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第十三章 分布式处理与大数据平台</tspan></text></g><g ed:parentid="236" id="238" transform="matrix(1,0,0,1,772,8647)" ed:width="97" ed:height="24.5"><path stroke="#696969" d="M0,24.5L97,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">13.1.Hadoop</tspan></text></g><g ed:parentid="236" id="240" transform="matrix(1,0,0,1,772,8716)" ed:width="83" ed:height="24.5"><path stroke="#696969" d="M0,24.5L83,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">13.2.Spark</tspan></text></g><g ed:parentid="236" id="242" transform="matrix(1,0,0,1,772,8776)" ed:width="86" ed:height="24.5"><path stroke="#696969" d="M0,24.5L86,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">13.3.Storm</tspan></text></g><g ed:parentid="236" id="244" transform="matrix(1,0,0,1,772,8845)" ed:width="126" ed:height="24.5"><path stroke="#696969" d="M0,24.5L126,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">13.4.Elasticsearch</tspan></text></g><g ed:parentid="101" id="246" transform="matrix(1,0,0,1,461,9036)" ed:width="172" ed:height="37"><path d="M4,0L168,0C170.7,0,172,1.3,172,4L172,33C172,35.7,170.7,37,168,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第十四章 编程开发</tspan></text></g><g ed:parentid="246" id="248" transform="matrix(1,0,0,1,660,8981)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">14.1.C/C++</tspan></text></g><g ed:parentid="246" id="250" transform="matrix(1,0,0,1,660,9012)" ed:width="74" ed:height="24.5"><path stroke="#696969" d="M0,24.5L74,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">14.2.Java</tspan></text></g><g ed:parentid="246" id="252" transform="matrix(1,0,0,1,660,9043)" ed:width="92" ed:height="24.5"><path stroke="#696969" d="M0,24.5L92,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">14.3.Python</tspan></text></g><g ed:parentid="246" id="254" transform="matrix(1,0,0,1,660,9074)" ed:width="110" ed:height="24.5"><path stroke="#696969" d="M0,24.5L110,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">14.4.JavaScript</tspan></text></g><g ed:parentid="246" id="258" transform="matrix(1,0,0,1,660,9105)" ed:width="66" ed:height="24.5"><path stroke="#696969" d="M0,24.5L66,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">14.5.Go</tspan></text></g><g ed:parentid="101" id="260" transform="matrix(1,0,0,1,461,9202)" ed:width="204" ed:height="37"><path d="M4,0L200,0C202.7,0,204,1.3,204,4L204,33C204,35.7,202.7,37,200,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第十五章 容器与云服务</tspan></text></g><g ed:parentid="260" id="262" transform="matrix(1,0,0,1,692,9162)" ed:width="139" ed:height="24.5"><path stroke="#696969" d="M0,24.5L139,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">15.1.公有云容器服务</tspan></text></g><g ed:parentid="260" id="264" transform="matrix(1,0,0,1,692,9193)" ed:width="113" ed:height="24.5"><path stroke="#696969" d="M0,24.5L113,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">15.2.容器云服务</tspan></text></g><g ed:parentid="260" id="266" transform="matrix(1,0,0,1,692,9224)" ed:width="139" ed:height="24.5"><path stroke="#696969" d="M0,24.5L139,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">15.3.阿里云容器服务</tspan></text></g><g ed:parentid="260" id="268" transform="matrix(1,0,0,1,692,9255)" ed:width="113" ed:height="24.5"><path stroke="#696969" d="M0,24.5L113,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">15.4.时速云介绍</tspan></text></g><g ed:parentid="101" id="270" transform="matrix(1,0,0,1,461,9353)" ed:width="204" ed:height="37"><path d="M4,0L200,0C202.7,0,204,1.3,204,4L204,33C204,35.7,202.7,37,200,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke="#ebecf3" fill="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan y="23.4" style="white-space:pre" x="18">第十六章 容器实战思考</tspan></text></g><g ed:parentid="270" id="272" transform="matrix(1,0,0,1,692,9313)" ed:width="170" ed:height="24.5"><path stroke="#696969" d="M0,24.5L170,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">16.1.Docker为什么会成功</tspan></text></g><g ed:parentid="270" id="274" transform="matrix(1,0,0,1,692,9344)" ed:width="191" ed:height="24.5"><path stroke="#696969" d="M0,24.5L191,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">16.2.研发人员该如何看待容器</tspan></text></g><g ed:parentid="270" id="276" transform="matrix(1,0,0,1,692,9375)" ed:width="139" ed:height="24.5"><path stroke="#696969" d="M0,24.5L139,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">16.3.容器化开发模式</tspan></text></g><g ed:parentid="270" id="278" transform="matrix(1,0,0,1,692,9406)" ed:width="139" ed:height="24.5"><path stroke="#696969" d="M0,24.5L139,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">16.4.容器与生产环境</tspan></text></g><g ed:parentid="108" id="351" transform="matrix(1,0,0,1,816,21)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 是基于 Go 语言实现的开源容器项目 。 它诞生于 2013 年年初，最初发起者</tspan><tspan y="35.1" style="white-space:pre" x="8">是dotCloud 公司 。 </tspan></text></g><g ed:parentid="108" id="353" transform="matrix(1,0,0,1,816,71)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">现在主流的操作系统包括 Linux 各大发行版、 macOS , Windows 等都已经支持 </tspan><tspan y="35.1" style="white-space:pre" x="8">Docker。</tspan></text></g><g ed:parentid="108" id="355" transform="matrix(1,0,0,1,816,121)" ed:width="514" ed:height="62.5"><path stroke="#696969" d="M0,62.5L514,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 的构想是要实现“ Build , Ship and Run Any App, Anywhere ”，即通过对</tspan><tspan y="35.1" style="white-space:pre" x="8">应用的封装（ Packaging）、分发（ Distribution ）、部署（ Deployment）、运行</tspan><tspan y="54.1" style="white-space:pre" x="8">（ Runtime ）生命周期进行管理，达到应用组件级别的“一次封装 ，到处运行” </tspan></text></g><g ed:parentid="110" id="357" transform="matrix(1,0,0,1,855,237)" ed:width="235" ed:height="24.5"><path stroke="#696969" d="M0,24.5L235,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 在开发和运维中的优势如下：</tspan></text></g><g ed:parentid="357" id="359" transform="matrix(1,0,0,1,1117,190)" ed:width="139" ed:height="24.5"><path stroke="#696969" d="M0,24.5L139,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">更快速的交付和部署 </tspan></text></g><g ed:parentid="357" id="361" transform="matrix(1,0,0,1,1117,221)" ed:width="122" ed:height="24.5"><path stroke="#696969" d="M0,24.5L122,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">更高效的资源利用</tspan></text></g><g ed:parentid="357" id="363" transform="matrix(1,0,0,1,1117,252)" ed:width="135" ed:height="24.5"><path stroke="#696969" d="M0,24.5L135,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">更轻松的迁移和扩展</tspan></text></g><g ed:parentid="357" id="365" transform="matrix(1,0,0,1,1117,283)" ed:width="122" ed:height="24.5"><path stroke="#696969" d="M0,24.5L122,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">更简单的更新管理</tspan></text></g><g ed:parentid="110" id="373" transform="matrix(1,0,0,1,855,399)" ed:width="170" ed:height="24.5"><path stroke="#696969" d="M0,24.5L170,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 与虚拟机比较如下</tspan></text></g><g ed:parentid="373" id="375" transform="matrix(1,0,0,1,1052,314)" ed:width="508" ed:height="43.5"><path stroke="#696969" d="M0,43.5L508,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 容器很快，启动和停止可以在秒级实现，这相比传统的虚拟机方式（数分钟）</tspan><tspan y="35.1" style="white-space:pre" x="8">要快得多；</tspan></text></g><g ed:parentid="373" id="377" transform="matrix(1,0,0,1,1052,364)" ed:width="508" ed:height="43.5"><path stroke="#696969" d="M0,43.5L508,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 容器对系统资源需求很少，一台主机上可以同时运行数千个 Docker 容器（在</tspan><tspan y="35.1" style="white-space:pre" x="8">IBM 服务器上已经实现了同时运行！ OK 量级的容器实例）；</tspan></text></g><g ed:parentid="373" id="379" transform="matrix(1,0,0,1,1052,414)" ed:width="508" ed:height="43.5"><path stroke="#696969" d="M0,43.5L508,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 通过类似 Git 设计理念的操作来方便用户获取、分发和更新应用镜像，存储复</tspan><tspan y="35.1" style="white-space:pre" x="8">用，增量更新；</tspan></text></g><g ed:parentid="373" id="381" transform="matrix(1,0,0,1,1052,464)" ed:width="513" ed:height="43.5"><path stroke="#696969" d="M0,43.5L513,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 通过 Dockerfile 支持灵活的自动化创建和部署机制，以提高工作效率，并标准</tspan><tspan y="35.1" style="white-space:pre" x="8">化流程</tspan></text></g><g ed:parentid="112" id="383" transform="matrix(1,0,0,1,829,514)" ed:width="514" ed:height="81.5"><path stroke="#696969" d="M0,81.5L514,81.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">维基百科上的定义如下：在计算机技 术中，虚拟化是 一种资 源管理技术，是将 计 算</tspan><tspan y="35.1" style="white-space:pre" x="8">机 的各种实体资源，如服务器 、网络 、内存及存储等，予以抽 象、转换后呈现出</tspan><tspan y="54.1" style="white-space:pre" x="8">来，打破实体结构间的不可切割的障碍，使用户可以用比原本的纽态更好的方式来应用</tspan><tspan y="73.1" style="white-space:pre" x="8">这些资源 。”</tspan></text></g><g ed:parentid="112" id="385" transform="matrix(1,0,0,1,829,602)" ed:width="421" ed:height="24.5"><path stroke="#696969" d="M0,24.5L421,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">从大类上分，虚拟化技术可分为基于硬件的虚拟化和基于软件的虚拟化</tspan></text></g><g ed:parentid="112" id="387" transform="matrix(1,0,0,1,829,633)" ed:width="514" ed:height="62.5"><path stroke="#696969" d="M0,62.5L514,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">传统方式是在硬件层面实现虚拟化，需要有额外的虚拟机管理应用和虚拟机操作系统</tspan><tspan y="35.1" style="white-space:pre" x="8">层 。 Docker 容器是在操作系统层面上实现虚拟化，直接复用本地主机的操作系统，</tspan><tspan y="54.1" style="white-space:pre" x="8">因此更加轻量级 </tspan></text></g><g ed:parentid="104" id="389" transform="matrix(1,0,0,1,724,729)" ed:width="504" ed:height="24.5"><path stroke="#696969" d="M0,24.5L504,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 的三大核心概念：镜像 (Image)、容器（ Container )、仓库（ Repository）</tspan></text></g><g ed:parentid="116" id="391" transform="matrix(1,0,0,1,843,760)" ed:width="395" ed:height="24.5"><path stroke="#696969" d="M0,24.5L395,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 镜像类似于虚拟机镜像，可以将它理解为一个只读的模板 </tspan></text></g><g ed:parentid="116" id="393" transform="matrix(1,0,0,1,843,791)" ed:width="204" ed:height="24.5"><path stroke="#696969" d="M0,24.5L204,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">镜像是创建 Docker 容器的基础 </tspan></text></g><g ed:parentid="116" id="395" transform="matrix(1,0,0,1,843,822)" ed:width="456" ed:height="24.5"><path stroke="#696969" d="M0,24.5L456,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 容器类似于一个轻量级的沙箱， Docker 利用容器来运行和隔离应用</tspan></text></g><g ed:parentid="116" id="397" transform="matrix(1,0,0,1,843,853)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">容器是从镜像创建的应用运行实例 。 它可以启动、开始、停止 、删除，而这些容器都</tspan><tspan y="35.1" style="white-space:pre" x="8">是彼此相互隔离、互不可见的</tspan></text></g><g ed:parentid="116" id="399" transform="matrix(1,0,0,1,843,903)" ed:width="404" ed:height="24.5"><path stroke="#696969" d="M0,24.5L404,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 仓库类似于代码仓库，是 Docker 集中存放镜像文件的场所</tspan></text></g><g ed:parentid="116" id="401" transform="matrix(1,0,0,1,843,934)" ed:width="330" ed:height="43.5"><path stroke="#696969" d="M0,43.5L330,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">实际上，仓库注册服务器是存放仓库的地方，其上往往</tspan><tspan y="35.1" style="white-space:pre" x="8">存放着多个仓库</tspan></text></g><g ed:parentid="118" id="403" transform="matrix(1,0,0,1,887,984)" ed:width="514" ed:height="62.5"><path stroke="#696969" d="M0,62.5L514,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 引擎是使用 Docker 容器的核心组件，可以在主流的操作系统和云平台上使</tspan><tspan y="35.1" style="white-space:pre" x="8">用，包括 Linux 操作系统（如 Ubuntu 、 Debian , CentOS 、 Red.hat 等）， </tspan><tspan y="54.1" style="white-space:pre" x="8">macOS 和 Windows 操作系统，以及 IBM 、亚马逊、微软等知名云平台 。</tspan></text></g><g ed:parentid="118" id="407" transform="matrix(1,0,0,1,887,1053)" ed:width="486" ed:height="24.5"><path stroke="#696969" d="M0,24.5L486,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">目前 Docker 支持 Docker 引 擎、 Docker Hub 、 Docker Cloud 等多种服务 。</tspan></text></g><g ed:parentid="118" id="409" transform="matrix(1,0,0,1,887,1084)" ed:width="514" ed:height="62.5"><path stroke="#696969" d="M0,62.5L514,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 引 擎 目前分为两个版本：社区版本（ Community Edition, CE ）和企业版本</tspan><tspan y="35.1" style="white-space:pre" x="8">(Enterprise Edition, EE ） 。 社区版本包括大部分的核心功能，企业版本则通过付费形</tspan><tspan y="54.1" style="white-space:pre" x="8">式提供认证支持、镜像管理 、 容器托管 、 安全扫描等高级服务 。</tspan></text></g><g ed:parentid="118" id="411" transform="matrix(1,0,0,1,887,1153)" ed:width="514" ed:height="62.5"><path stroke="#696969" d="M0,62.5L514,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">目前的实验特性主要有 ipvlan 网络驱动、显卡插件、分布式应用包（ Distributed</tspan><tspan y="35.1" style="white-space:pre" x="8">Application Bundles ）、监测点（ Checkpoint）、回滚（ Restore ），以及使用 </tspan><tspan y="54.1" style="white-space:pre" x="8">squash 参数构建镜像</tspan></text></g><g ed:parentid="118" id="413" transform="matrix(1,0,0,1,887,1222)" ed:width="269" ed:height="24.5"><path stroke="#696969" d="M0,24.5L269,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">官方建议在生产环境中关闭这些实验特性 。</tspan></text></g><g ed:parentid="118" id="415" transform="matrix(1,0,0,1,887,1253)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">稳定版（ stable channel）经过完整测试和精心维护，可用于关注稳定性的生产环境 </tspan><tspan y="35.1" style="white-space:pre" x="8">。 稳定版每个季度（ 3 个月）发布一次 。 </tspan></text></g><g ed:parentid="118" id="417" transform="matrix(1,0,0,1,887,1303)" ed:width="514" ed:height="62.5"><path stroke="#696969" d="M0,62.5L514,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">测试版（ edge channel ）包含最新的工具和特性，甚至会包含一些开发中的特性 。 </tspan><tspan y="35.1" style="white-space:pre" x="8">测试版适用于希望尝鲜井有能力处理异常或 Bug 的用户，并且默认收集所有用户使用</tspan><tspan y="54.1" style="white-space:pre" x="8">数据 。 测试版每月发布一次。</tspan></text></g><g ed:parentid="118" id="419" transform="matrix(1,0,0,1,887,1372)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">目前 Docker 可以通过虚拟机方式来支持 Windows 7.1 和 Windows 8 ，只要平台 </tspan><tspan y="35.1" style="white-space:pre" x="8">CPU 支持硬件虚拟化特性即可</tspan></text></g><g ed:parentid="120" id="421" transform="matrix(1,0,0,1,887,1422)" ed:width="512" ed:height="43.5"><path stroke="#696969" d="M0,43.5L512,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">为了避免每次使用 Docker 命令时都需要切换到特权身份，可以将当前用户加入安装中</tspan><tspan y="35.1" style="white-space:pre" x="8">自动创建的 docker 用户组</tspan></text></g><g ed:parentid="122" id="423" transform="matrix(1,0,0,1,869,1472)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">从稳定性上考虑，本书推荐实践环境的操作系统是 Ubuntu 18.04 LTS 系统或 Debian </tspan><tspan y="35.1" style="white-space:pre" x="8">稳定版本系统，使用 Linux 4.0 以上内核</tspan></text></g><g ed:parentid="122" id="425" transform="matrix(1,0,0,1,869,1522)" ed:width="455" ed:height="43.5"><path stroke="#696969" d="M0,43.5L455,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">执行命令代码中以$开头的，表明为普通用户；以＃开头的，表明为特权用户</tspan><tspan y="35.1" style="white-space:pre" x="8">(root）</tspan></text></g><g ed:parentid="122" id="427" transform="matrix(1,0,0,1,869,1572)" ed:width="514" ed:height="62.5"><path stroke="#696969" d="M0,62.5L514,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">实际上， Docker 和 Docker Hub 的工</tspan><tspan y="35.1" style="white-space:pre" x="8">作流也并非凭空创造的，很大程度上参考了 Git 和 G i thub 的设计理念，从而为应用</tspan><tspan y="54.1" style="white-space:pre" x="8">分发和团队合作都带来了众多优势 。</tspan></text></g><g ed:parentid="124" id="435" transform="matrix(1,0,0,1,817,1667)" ed:width="446" ed:height="24.5"><path stroke="#696969" d="M0,24.5L446,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">可以使用 docker [image] pull 命令直接从 Docker Hub 镜像源来下载镜像</tspan></text></g><g ed:parentid="124" id="439" transform="matrix(1,0,0,1,817,1698)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">该命令的格式为 docker [image] pull NAME [ :TAG]。其中， NAME 是镜像仓库名称</tspan><tspan y="35.1" style="white-space:pre" x="8">（用来区分镜像）， TAG 是镜像的标签（往往用来表示版本信息）</tspan></text></g><g ed:parentid="126" id="441" transform="matrix(1,0,0,1,843,1748)" ed:width="467" ed:height="43.5"><path stroke="#696969" d="M0,43.5L467,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">使用docker images或docker image ls 命令可以列出本地主机上已有镜像的基</tspan><tspan y="35.1" style="white-space:pre" x="8">本信息</tspan></text></g><g ed:parentid="126" id="443" transform="matrix(1,0,0,1,843,1798)" ed:width="296" ed:height="24.5"><path stroke="#696969" d="M0,24.5L296,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">其中镜像的ID信息十分重要， 它唯一标识了镜像</tspan></text></g><g ed:parentid="126" id="445" transform="matrix(1,0,0,1,843,1829)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">镜像大小信息只是表示了该镜像的逻辑体积大小， 实际上由于相同的镜像层本地只会</tspan><tspan y="35.1" style="white-space:pre" x="8">存储一份， 物理上占用的存储空间会小于各镜像逻辑体积之和</tspan></text></g><g ed:parentid="126" id="447" transform="matrix(1,0,0,1,843,1879)" ed:width="484" ed:height="43.5"><path stroke="#696969" d="M0,43.5L484,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">使用docker巨mage]inspect命令可以获取该镜像的详细信息，包括制作者 、适应</tspan><tspan y="35.1" style="white-space:pre" x="8">架构、各层的数字摘要等</tspan></text></g><g ed:parentid="128" id="449" transform="matrix(1,0,0,1,817,1929)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">使用 docker search 命令可以搜索Docker Hub 官方仓库中的镜像。 语法为 docker </tspan><tspan y="35.1" style="white-space:pre" x="8">search [op巨on] keyword</tspan></text></g><g ed:parentid="130" id="451" transform="matrix(1,0,0,1,856,1979)" ed:width="475" ed:height="43.5"><path stroke="#696969" d="M0,43.5L475,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">使用 docker rmi 或 docker image rm 命令可以删除镜像， 命令格式为 docker</tspan><tspan y="35.1" style="white-space:pre" x="8">rmi IMGE [IMAGE ... ], 其中 IMAGE 可以为标签或 ID</tspan></text></g><g ed:parentid="130" id="453" transform="matrix(1,0,0,1,856,2029)" ed:width="322" ed:height="43.5"><path stroke="#696969" d="M0,43.5L322,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">docker rmi 命令只是删除了该镜像多个标签中的指定</tspan><tspan y="35.1" style="white-space:pre" x="8">标签而巳， 并不影响镜像文件</tspan></text></g><g ed:parentid="130" id="455" transform="matrix(1,0,0,1,856,2079)" ed:width="508" ed:height="43.5"><path stroke="#696969" d="M0,43.5L508,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">当使用 docker rmi 命令， 并且后面跟上镜像的 ID (也可以是能进行区分的部分 ID 串</tspan><tspan y="35.1" style="white-space:pre" x="8">前缀）时， 会先尝试删除所有指向该镜像的标签， 然后删除该镜像文件本身</tspan></text></g><g ed:parentid="130" id="457" transform="matrix(1,0,0,1,856,2129)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">注意， 通常并不推荐使用-f参数来强制删除一个存在容器依赖的镜像。 正确的做法</tspan><tspan y="35.1" style="white-space:pre" x="8">是，先删除依赖该镜像的所有容器， 再来删除镜像</tspan></text></g><g ed:parentid="130" id="459" transform="matrix(1,0,0,1,856,2179)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">使用Docker 一段时间后， 系统中可能会遗留一些临时的镜像文件， 以及一些没有被</tspan><tspan y="35.1" style="white-space:pre" x="8">使用的镜像， 可以通过docker image prune命令来进行清理</tspan></text></g><g ed:parentid="132" id="461" transform="matrix(1,0,0,1,817,2229)" ed:width="498" ed:height="43.5"><path stroke="#696969" d="M0,43.5L498,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">创建镜像的方法主要有三种： 基于已有镜像的容器创建、 基千本地模板导入、 基于</tspan><tspan y="35.1" style="white-space:pre" x="8">Dockerile 创建</tspan></text></g><g ed:parentid="132" id="463" transform="matrix(1,0,0,1,817,2279)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">基于已有容器创建。主要是使用 docker [con七ainer] commit命令。命令格式为 </tspan><tspan y="35.1" style="white-space:pre" x="8">docker [container] commit  [OPTIONS] CONTAINER [REPOSITORY [:TAG]]</tspan></text></g><g ed:parentid="132" id="465" transform="matrix(1,0,0,1,817,2329)" ed:width="514" ed:height="62.5"><path stroke="#696969" d="M0,62.5L514,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">基于本地模板导入：用户也可以直接从一个操作系统模板文件导人一个镜像，主要使用 </tspan><tspan y="35.1" style="white-space:pre" x="8">docker [container] import 命令。 命令格式为 docker [image] i mport [OPTIONS] </tspan><tspan y="54.1" style="white-space:pre" x="8">filelURLl -[REPOSITORY [:TAG ] ]</tspan></text></g><g ed:parentid="132" id="467" transform="matrix(1,0,0,1,817,2398)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">基于 Dockekfile 创建。基于 Dockerfile 创建是最常见的方式。 Dockerfile 是一个文</tspan><tspan y="35.1" style="white-space:pre" x="8">本文件，利用给定的指令描述基于某个父镜像创建新镜像的过程</tspan></text></g><g ed:parentid="134" id="469" transform="matrix(1,0,0,1,856,2448)" ed:width="510" ed:height="24.5"><path stroke="#696969" d="M0,24.5L510,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">用户可以使用 docker [image] save 和 do cker [image ] load 命令来存出和载人镜像 </tspan></text></g><g ed:parentid="134" id="471" transform="matrix(1,0,0,1,856,2479)" ed:width="395" ed:height="24.5"><path stroke="#696969" d="M0,24.5L395,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">如果要导出镜像到本地文件，可以使用 docker [image] save 命令</tspan></text></g><g ed:parentid="134" id="473" transform="matrix(1,0,0,1,856,2510)" ed:width="419" ed:height="24.5"><path stroke="#696969" d="M0,24.5L419,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">可以使用 docker [image] load 将导出的 tar 文件再导人到本地镜像库</tspan></text></g><g ed:parentid="136" id="475" transform="matrix(1,0,0,1,817,2541)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">可以使用 docker [image] push 命令上传镜像到仓库，默认上传到 Docker Hub 官方</tspan><tspan y="35.1" style="white-space:pre" x="8">仓库（需要登录）</tspan></text></g><g ed:parentid="136" id="477" transform="matrix(1,0,0,1,817,2591)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">在平时的 Docker 使用中， 要注意积累自己定制的镜像文件，并将自己创建的高质量</tspan><tspan y="35.1" style="white-space:pre" x="8">镜像分享到社区中</tspan></text></g><g ed:parentid="138" id="479" transform="matrix(1,0,0,1,698,2668)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">容器是镜像的一个运行实例。所不同的是，镜像是静态的只读文件，而容器带有运行时</tspan><tspan y="35.1" style="white-space:pre" x="8">需要的可写文件层，同时，容器中的应用进程处于运行状态</tspan></text></g><g ed:parentid="140" id="481" transform="matrix(1,0,0,1,817,2718)" ed:width="266" ed:height="24.5"><path stroke="#696969" d="M0,24.5L266,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">可以使用 docker create 命令新建一个容器</tspan></text></g><g ed:parentid="140" id="483" transform="matrix(1,0,0,1,817,2749)" ed:width="378" ed:height="24.5"><path stroke="#696969" d="M0,24.5L378,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">使用 docker [container] start 命令来启动一个已经创建的容器</tspan></text></g><g ed:parentid="140" id="485" transform="matrix(1,0,0,1,817,2780)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">更多的时候，需要让 Docker 容器在后台以守护态（ Daemonized）形式运行。 此</tspan><tspan y="35.1" style="white-space:pre" x="8">时，可以通过添加-d 参数来实现</tspan></text></g><g ed:parentid="140" id="487" transform="matrix(1,0,0,1,817,2830)" ed:width="388" ed:height="24.5"><path stroke="#696969" d="M0,24.5L388,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">要获取容器的输出信息，可以通过 docker [container] logs 命令</tspan></text></g><g ed:parentid="142" id="489" transform="matrix(1,0,0,1,817,2861)" ed:width="474" ed:height="43.5"><path stroke="#696969" d="M0,43.5L474,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">可以使用 docker [container] pause CONTAINER [CONTAINER ... ］命令来暂</tspan><tspan y="35.1" style="white-space:pre" x="8">停一个运行中的容器</tspan></text></g><g ed:parentid="142" id="491" transform="matrix(1,0,0,1,817,2911)" ed:width="364" ed:height="24.5"><path stroke="#696969" d="M0,24.5L364,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">可以使用 docker [container] stop 来终止一个运行中的容器</tspan></text></g><g ed:parentid="142" id="493" transform="matrix(1,0,0,1,817,2942)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">执行 docker container prune 命令，会自动清除掉所有处于停止状态的容器。还可以</tspan><tspan y="35.1" style="white-space:pre" x="8">通过 docker [co口tai口er ] kill 直接发送 SIGKILL 信号来强行终止容器。</tspan></text></g><g ed:parentid="144" id="495" transform="matrix(1,0,0,1,817,2992)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">在使用－ d 参数时，容器启动后会进入后台，用户无法看到容器中的信息，也无法进</tspan><tspan y="35.1" style="white-space:pre" x="8">行操作</tspan></text></g><g ed:parentid="144" id="497" transform="matrix(1,0,0,1,817,3042)" ed:width="452" ed:height="24.5"><path stroke="#696969" d="M0,24.5L452,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">这个时候如果需要进入容器进行操作，推荐使用官方的 attach 或 exec 命令</tspan></text></g><g ed:parentid="144" id="499" transform="matrix(1,0,0,1,817,3073)" ed:width="362" ed:height="43.5"><path stroke="#696969" d="M0,43.5L362,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 提供了一个更加方便的工具 exec 命令，可以在运行</tspan><tspan y="35.1" style="white-space:pre" x="8">中容器内直接执行任意命令 </tspan></text></g><g ed:parentid="146" id="501" transform="matrix(1,0,0,1,817,3123)" ed:width="432" ed:height="24.5"><path stroke="#696969" d="M0,24.5L432,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">可以使用 docker [container) rm 命令来删除处于终止或退出状态的容器</tspan></text></g><g ed:parentid="146" id="503" transform="matrix(1,0,0,1,817,3154)" ed:width="505" ed:height="43.5"><path stroke="#696969" d="M0,43.5L505,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">默认情况下， docker rm 命令只能删除已经处于终止或退出状态的容器，并不能删除</tspan><tspan y="35.1" style="white-space:pre" x="8">还处于运行状态的容器</tspan></text></g><g ed:parentid="148" id="505" transform="matrix(1,0,0,1,856,3204)" ed:width="512" ed:height="43.5"><path stroke="#696969" d="M0,43.5L512,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">导出容器是指，导出一个已经创建的容器到一个文件，不管此时这个容器是否处于运行</tspan><tspan y="35.1" style="white-space:pre" x="8">状态 。 可以使用 docker [container ] export 命令</tspan></text></g><g ed:parentid="148" id="507" transform="matrix(1,0,0,1,856,3254)" ed:width="421" ed:height="24.5"><path stroke="#696969" d="M0,24.5L421,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">导出的文件又可以使用 docker [container ] import 命令导人变成镜像</tspan></text></g><g ed:parentid="148" id="509" transform="matrix(1,0,0,1,856,3285)" ed:width="501" ed:height="43.5"><path stroke="#696969" d="M0,43.5L501,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">实际上，既可以使用 docker load 命令来导入镜像存储文件到本地镜像库，也可以使</tspan><tspan y="35.1" style="white-space:pre" x="8">用 docker [container] import 命令来导入一个容器快照到本地镜像库</tspan></text></g><g ed:parentid="148" id="511" transform="matrix(1,0,0,1,856,3335)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">两者的区别在于 ： 容器快照文件将丢弃所有的历史记录和元数据信息（即仅保存容器</tspan><tspan y="35.1" style="white-space:pre" x="8">当时的快照状态），而镜像存储文件将保存完整记录，体积更大</tspan></text></g><g ed:parentid="150" id="513" transform="matrix(1,0,0,1,817,3385)" ed:width="457" ed:height="43.5"><path stroke="#696969" d="M0,43.5L457,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">查看容器详情可以使用 docker container inspect [OPTIONS] CONTAINER</tspan><tspan y="35.1" style="white-space:pre" x="8">[CONTAINER . .. ］子命令</tspan></text></g><g ed:parentid="150" id="515" transform="matrix(1,0,0,1,817,3435)" ed:width="455" ed:height="43.5"><path stroke="#696969" d="M0,43.5L455,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">查看容器内进程可以使用 docker [container] top [OPTIONS] CONTAINER</tspan><tspan y="35.1" style="white-space:pre" x="8">[CONTAINER . .. ］ 子命令</tspan></text></g><g ed:parentid="150" id="517" transform="matrix(1,0,0,1,817,3485)" ed:width="475" ed:height="43.5"><path stroke="#696969" d="M0,43.5L475,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">查看统计信息可以使用 docker [container] stats [OPTIONS] [CONTAINER ... ]</tspan><tspan y="35.1" style="white-space:pre" x="8">子命令，会显示 CPU 、内存、存储、网络等使用情况的统计信息</tspan></text></g><g ed:parentid="152" id="519" transform="matrix(1,0,0,1,843,3535)" ed:width="505" ed:height="43.5"><path stroke="#696969" d="M0,43.5L505,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">container cp 命令支持在容器和主机之间复制文件。 命令格式为 docker [container]</tspan><tspan y="35.1" style="white-space:pre" x="8">cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH | -</tspan></text></g><g ed:parentid="152" id="521" transform="matrix(1,0,0,1,843,3585)" ed:width="459" ed:height="43.5"><path stroke="#696969" d="M0,43.5L459,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">container diff 查看容器内文件系统的变更。 命令格式为 docker [container]</tspan><tspan y="35.1" style="white-space:pre" x="8">diff CONTAINER</tspan></text></g><g ed:parentid="152" id="523" transform="matrix(1,0,0,1,843,3635)" ed:width="508" ed:height="43.5"><path stroke="#696969" d="M0,43.5L508,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">container port 命令可以查看容器的端口映射’情况。 命令格式为 docker container</tspan><tspan y="35.1" style="white-space:pre" x="8">port CONTAINER [PRIVATE_PORT[/PROTO ］］</tspan></text></g><g ed:parentid="152" id="525" transform="matrix(1,0,0,1,843,3685)" ed:width="511" ed:height="43.5"><path stroke="#696969" d="M0,43.5L511,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">container update 命令可以更新容器的一些运行时配置，主要是一些资源限制份额。</tspan><tspan y="35.1" style="white-space:pre" x="8">命令格式为 docker [container] update [OPTIONS] CONTAINER [CONTAINER .. ］</tspan></text></g><g ed:parentid="152" id="529" transform="matrix(1,0,0,1,843,3735)" ed:width="446" ed:height="24.5"><path stroke="#696969" d="M0,24.5L446,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">可以使用 docker container help 命令查看 Docker 支持的容器操作子命令</tspan></text></g><g ed:parentid="154" id="531" transform="matrix(1,0,0,1,698,3792)" ed:width="416" ed:height="24.5"><path stroke="#696969" d="M0,24.5L416,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">库（ Repository）是集中存放镜像的地方，又分公共仓库和私有仓库 </tspan></text></g><g ed:parentid="154" id="533" transform="matrix(1,0,0,1,698,3823)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">注册服务器是存放仓库的具体服务器， 一个注册服务器上可以有多个仓库，而每个仓</tspan><tspan y="35.1" style="white-space:pre" x="8">库下面可以有多个镜像 。 从这方面来说，仓库可以被认为是一个具体的项目或目录</tspan></text></g><g ed:parentid="156" id="535" transform="matrix(1,0,0,1,917,3873)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker Hub 是 Docker 官方提供的最大的公共镜像仓库，目前包括了超过 100 000 </tspan><tspan y="35.1" style="white-space:pre" x="8">的镜像</tspan></text></g><g ed:parentid="156" id="537" transform="matrix(1,0,0,1,917,3923)" ed:width="500" ed:height="43.5"><path stroke="#696969" d="M0,43.5L500,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">可以通过命令行执行 docker login 命令来输入用户名 、 密码和邮箱来完成注册和登</tspan><tspan y="35.1" style="white-space:pre" x="8">录</tspan></text></g><g ed:parentid="156" id="539" transform="matrix(1,0,0,1,917,3973)" ed:width="509" ed:height="43.5"><path stroke="#696969" d="M0,43.5L509,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">用户无须登录即可通过 docker search 命令来查找官方仓库中的镜像，并利用 docker</tspan><tspan y="35.1" style="white-space:pre" x="8">[image ] pull 命令来将它下载到本地</tspan></text></g><g ed:parentid="156" id="541" transform="matrix(1,0,0,1,917,4023)" ed:width="466" ed:height="24.5"><path stroke="#696969" d="M0,24.5L466,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">用户也可以在登录后通过 docker push 命令来将本地镜像推送到 Docker Hub</tspan></text></g><g ed:parentid="158" id="543" transform="matrix(1,0,0,1,856,4054)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">自动创建（ Automated Builds）是 Docker Hub 提供的自动化服务，这一功能可以自</tspan><tspan y="35.1" style="white-space:pre" x="8">动跟随项目代码的变更而重新构建镜像</tspan></text></g><g ed:parentid="158" id="549" transform="matrix(1,0,0,1,856,4104)" ed:width="468" ed:height="24.5"><path stroke="#696969" d="M0,24.5L468,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">国内不少云服务商都提供了 Docker 镜像市场包括腾讯云 、 网易云、阿里云等</tspan></text></g><g ed:parentid="158" id="551" transform="matrix(1,0,0,1,856,4135)" ed:width="505" ed:height="43.5"><path stroke="#696969" d="M0,43.5L505,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">下载镜像也是使用 docker pu l l 命令，但是要在镜像名称前添加注册服务器的具体地</tspan><tspan y="35.1" style="white-space:pre" x="8">址</tspan></text></g><g ed:parentid="160" id="553" transform="matrix(1,0,0,1,869,4185)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">安装 Docker 后 ， 可以通过官方提供的 regi st ry 镜像来简单搭建一套本地私有仓库</tspan><tspan y="35.1" style="white-space:pre" x="8">环境：</tspan></text></g><g ed:parentid="154" id="557" transform="matrix(1,0,0,1,698,4235)" ed:width="512" ed:height="24.5"><path stroke="#696969" d="M0,24.5L512,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">仓库是集中维护容器镜像的地方，为 Docker 镜像文件的分发和管理提供了便捷的途径</tspan></text></g><g ed:parentid="164" id="559" transform="matrix(1,0,0,1,698,4308)" ed:width="230" ed:height="24.5"><path stroke="#696969" d="M0,24.5L230,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">容器中的管理数据主要有两种方式 ：</tspan></text></g><g ed:parentid="559" id="561" transform="matrix(1,0,0,1,955,4293)" ed:width="423" ed:height="24.5"><path stroke="#696969" d="M0,24.5L423,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">数据卷 （ Data Volumes ） ： 容器内数据直接映射到本地主机环境；</tspan></text></g><g ed:parentid="559" id="563" transform="matrix(1,0,0,1,955,4324)" ed:width="431" ed:height="24.5"><path stroke="#696969" d="M0,24.5L431,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">数据卷容器（ Data Volume Containers ） ： 使用特定容器维护数据卷</tspan></text></g><g ed:parentid="166" id="565" transform="matrix(1,0,0,1,804,4355)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">数据卷 （ Data Volumes ） 是一个可供容器使用的特殊目录，它将主机操作系统目录</tspan><tspan y="35.1" style="white-space:pre" x="8">直接映射进容器，类似于 Linux 中的 mount 行为 </tspan></text></g><g ed:parentid="166" id="567" transform="matrix(1,0,0,1,804,4451)" ed:width="239" ed:height="24.5"><path stroke="#696969" d="M0,24.5L239,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">数据卷可以提供很多有用的特性如下：</tspan></text></g><g ed:parentid="567" id="569" transform="matrix(1,0,0,1,1070,4405)" ed:width="434" ed:height="24.5"><path stroke="#696969" d="M0,24.5L434,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">数据卷可以在容器之间共事和重用，容器间传递数据将变得高效与方便；</tspan></text></g><g ed:parentid="567" id="571" transform="matrix(1,0,0,1,1070,4436)" ed:width="421" ed:height="24.5"><path stroke="#696969" d="M0,24.5L421,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">对数据卷内数据的修改会立马生效，无论是容器内操作还是本地操作；</tspan></text></g><g ed:parentid="567" id="575" transform="matrix(1,0,0,1,1070,4467)" ed:width="321" ed:height="24.5"><path stroke="#696969" d="M0,24.5L321,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">对数据卷的更新不会影响镜像，解摘开应用和数据 ；</tspan></text></g><g ed:parentid="567" id="577" transform="matrix(1,0,0,1,1070,4498)" ed:width="338" ed:height="24.5"><path stroke="#696969" d="M0,24.5L338,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">卷会一直存在 ，直到没有容器使用，可以安全地卸载它 </tspan></text></g><g ed:parentid="166" id="579" transform="matrix(1,0,0,1,804,4529)" ed:width="505" ed:height="43.5"><path stroke="#696969" d="M0,43.5L505,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">除了 create 子命令外， docker volume 还支持 inspect （查看详细信息）、 ls （列</tspan><tspan y="35.1" style="white-space:pre" x="8">出已有数据卷）、 prune （清理无用数据卷）、 rm （删除数据卷）等</tspan></text></g><g ed:parentid="168" id="581" transform="matrix(1,0,0,1,830,4579)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">如果用户需要在多个容器之间共享一些持续更新的数据，最简单的方式是使用数据卷容</tspan><tspan y="35.1" style="white-space:pre" x="8">器 。 数据卷容器也是一个容器，但是它的目的是专门提供数据卷给其他容器挂载。</tspan></text></g><g ed:parentid="168" id="585" transform="matrix(1,0,0,1,830,4629)" ed:width="382" ed:height="24.5"><path stroke="#696969" d="M0,24.5L382,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">使用数据卷容器可以让用户在容器之间自由地升级和移动数据卷</tspan></text></g><g ed:parentid="170" id="587" transform="matrix(1,0,0,1,921,4660)" ed:width="438" ed:height="24.5"><path stroke="#696969" d="M0,24.5L438,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">可以利用数据卷容器对其中的数据卷进行备份、恢复，以实现数据的迁移 </tspan></text></g><g ed:parentid="164" id="591" transform="matrix(1,0,0,1,698,4691)" ed:width="514" ed:height="62.5"><path stroke="#696969" d="M0,62.5L514,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">在生产环境中，笔者推荐在使用数据卷或数据卷容器之外，定期将主机的本地数据进</tspan><tspan y="35.1" style="white-space:pre" x="8">行备份，或者使用支持容错的存储系统，包括 RAID 或分布式文件系统，如 Ceph 、 </tspan><tspan y="54.1" style="white-space:pre" x="8">GPFS 、HDFS 等 </tspan></text></g><g ed:parentid="164" id="593" transform="matrix(1,0,0,1,698,4760)" ed:width="465" ed:height="43.5"><path stroke="#696969" d="M0,43.5L465,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">有些时候不希望将数据保存在宿主机或容器中，还可以使用 tmpfs 类型的数据</tspan><tspan y="35.1" style="white-space:pre" x="8">卷，其中数据只存在于内存中，容器退出后自动删除</tspan></text></g><g ed:parentid="176" id="595" transform="matrix(1,0,0,1,921,4936)" ed:width="514" ed:height="62.5"><path stroke="#696969" d="M0,62.5L514,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">容器的互联(I皿cng)是一种让多个容器中的应用进行快速交互的方式。它会在源和接收</tspan><tspan y="35.1" style="white-space:pre" x="8">容器之间创建连接关系，接收容器可以通过容器名快速访问到源容器，而不用指定具体</tspan><tspan y="54.1" style="white-space:pre" x="8">的I地址</tspan></text></g><g ed:parentid="176" id="597" transform="matrix(1,0,0,1,921,5005)" ed:width="514" ed:height="62.5"><path stroke="#696969" d="M0,62.5L514,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 相当于在两个互联的容器之间创建了一个虚机通道， 而且不用映射它们的端口</tspan><tspan y="35.1" style="white-space:pre" x="8">到宿主主机上。 在启动 db 容器的时候并没有使用 -p 和 -P 标记， 从而避免了暴露数</tspan><tspan y="54.1" style="white-space:pre" x="8">据库服务端口到外部网络上</tspan></text></g><g ed:parentid="176" id="599" transform="matrix(1,0,0,1,921,5074)" ed:width="497" ed:height="24.5"><path stroke="#696969" d="M0,24.5L497,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 通过两种方式为容器公开连接信息：更新环境变量；更新 /etc/hos七s 文件</tspan></text></g><g ed:parentid="172" id="601" transform="matrix(1,0,0,1,724,5105)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker目前可以成熟支持Linux系统自带的网络服务和功能， 这既可以利用现有成熟</tspan><tspan y="35.1" style="white-space:pre" x="8">的技术提供稳定支持， 又可以实现快速的高性能转发。</tspan></text></g><g ed:parentid="172" id="603" transform="matrix(1,0,0,1,724,5155)" ed:width="514" ed:height="62.5"><path stroke="#696969" d="M0,62.5L514,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">在生产环境中， 网络方面的需求更加复杂和多变， 包括跨主机甚至跨数据中心的通</tspan><tspan y="35.1" style="white-space:pre" x="8">信，这时候往往就需要引入额外的机制， 例如 SDN (软件定义网络）或 NFV (网络功</tspan><tspan y="54.1" style="white-space:pre" x="8">能虚拟化）的相关技术</tspan></text></g><g ed:parentid="174" id="605" transform="matrix(1,0,0,1,921,4836)" ed:width="496" ed:height="43.5"><path stroke="#696969" d="M0,43.5L496,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">当容器中运行一些网络应用， 要让外部访问这些应用时， 可以通过-P或-p参数来指</tspan><tspan y="35.1" style="white-space:pre" x="8">定端口映射</tspan></text></g><g ed:parentid="174" id="607" transform="matrix(1,0,0,1,921,4886)" ed:width="445" ed:height="43.5"><path stroke="#696969" d="M0,43.5L445,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">容器有自己的内部网络和IP地址，使用docker [container) inspec七＋容器</tspan><tspan y="35.1" style="white-space:pre" x="8">ID可以获取容器的具体信息</tspan></text></g><g ed:parentid="180" id="609" transform="matrix(1,0,0,1,753,5251)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Dockerfle 是一个文本格式的配置文件， 用户可以使用 Dockerfle 来快速创建自定义</tspan><tspan y="35.1" style="white-space:pre" x="8">的镜像</tspan></text></g><g ed:parentid="182" id="611" transform="matrix(1,0,0,1,872,5301)" ed:width="388" ed:height="24.5"><path stroke="#696969" d="M0,24.5L388,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Dockerfle 由 一行行命令语句组成， 并且支持以＃开头的注释行</tspan></text></g><g ed:parentid="182" id="613" transform="matrix(1,0,0,1,872,5332)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">一般而言， Dockerfle 主体内容分为四部分：基础镜像信息、 维护者信息、 镜像操作</tspan><tspan y="35.1" style="white-space:pre" x="8">指令和容器启动时执行指令</tspan></text></g><g ed:parentid="184" id="615" transform="matrix(1,0,0,1,872,5382)" ed:width="509" ed:height="43.5"><path stroke="#696969" d="M0,43.5L509,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Dockerfe 中指令的一般格式为 INSTRUCTION argumen七s, 包括 “配置指令" (配置</tspan><tspan y="35.1" style="white-space:pre" x="8">镜像信息）和 “操作指令"</tspan></text></g><g ed:parentid="184" id="617" transform="matrix(1,0,0,1,872,5432)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Docker 内置了一些镜像创建变量， 用户可以直接使用而无须声明， 包括（不区分大</tspan><tspan y="35.1" style="white-space:pre" x="8">小写） HTTP PROXY 、 HTTPS PROXY 、 FTP PROXY 、 NO PROXY</tspan></text></g><g ed:parentid="184" id="619" transform="matrix(1,0,0,1,872,5482)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">任何 Dockerfile 中第 一条指令必须为 FROM 指令。 并且， 如果在同 一个 Dockerfle </tspan><tspan y="35.1" style="white-space:pre" x="8">中创建多个镜像时， 可以使用多个 FROM 指令（每个镜像一次）</tspan></text></g><g ed:parentid="184" id="621" transform="matrix(1,0,0,1,872,5532)" ed:width="506" ed:height="43.5"><path stroke="#696969" d="M0,43.5L506,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">LABEL 指令可以为生成的镜像添加元数据标签信息。 这些信息可以用来辅助过滤出特</tspan><tspan y="35.1" style="white-space:pre" x="8">定镜像</tspan></text></g><g ed:parentid="184" id="623" transform="matrix(1,0,0,1,872,5582)" ed:width="223" ed:height="24.5"><path stroke="#696969" d="M0,24.5L223,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">EXPOSE声明镜像内服务监听的端口</tspan></text></g><g ed:parentid="184" id="625" transform="matrix(1,0,0,1,872,5613)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">ENV指定环境变量， 在镜像生成过程中会被后续RU指令使用， 在镜像启动的容器中也</tspan><tspan y="35.1" style="white-space:pre" x="8">会存在</tspan></text></g><g ed:parentid="184" id="627" transform="matrix(1,0,0,1,872,5663)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">ENTRYPOINT指定镜像的默认入口命令， 该入口命令会在启动容器时作为根命令执</tspan><tspan y="35.1" style="white-space:pre" x="8">行， 所有传人值作为该命令的参数</tspan></text></g><g ed:parentid="184" id="629" transform="matrix(1,0,0,1,872,5713)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">每条 RUN 指令将在当前镜像基础上执行指定命令，并提交为新的镜像层 。 当命令较</tspan><tspan y="35.1" style="white-space:pre" x="8">长时可以使用＼来换行</tspan></text></g><g ed:parentid="184" id="631" transform="matrix(1,0,0,1,872,5763)" ed:width="288" ed:height="24.5"><path stroke="#696969" d="M0,24.5L288,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">CMD 指令用来指定启动容器时默认执行的命令</tspan></text></g><g ed:parentid="184" id="633" transform="matrix(1,0,0,1,872,5794)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">每个 Dockerfile 只能有一条 CMD 命令 。 如果指定了多条命令，只有最后一条会被执</tspan><tspan y="35.1" style="white-space:pre" x="8">行</tspan></text></g><g ed:parentid="186" id="635" transform="matrix(1,0,0,1,872,5844)" ed:width="459" ed:height="24.5"><path stroke="#696969" d="M0,24.5L459,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">编写完成 Dockerfile 之后，可以通过 docker [image] build 命令来创建镜像 </tspan></text></g><g ed:parentid="186" id="637" transform="matrix(1,0,0,1,872,5875)" ed:width="514" ed:height="81.5"><path stroke="#696969" d="M0,81.5L514,81.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">该命令将读取指定路径下（包括子目录）的 Dock巳rfile ，并将该路径下所有数据作为</tspan><tspan y="35.1" style="white-space:pre" x="8">上下文（ Context）发送给 Docker 服务端 。 Docker 服务端在校验 Dockerfile 格式</tspan><tspan y="54.1" style="white-space:pre" x="8">通过后，逐条执行其中定义的指令，碰到 ADD 、 COPY 和 RUN 指令会生成一层新的</tspan><tspan y="73.1" style="white-space:pre" x="8">镜像。 最终如果创建镜像成功，会返回最终镜像的 ID 。</tspan></text></g><g ed:parentid="186" id="639" transform="matrix(1,0,0,1,872,5963)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">大部分情况下，生成新的镜像都需要通过 FROM 指令来指定父镜像。 父镜像是生成镜</tspan><tspan y="35.1" style="white-space:pre" x="8">像的基础 ，会直接影响到所生成镜像的大小和功能</tspan></text></g><g ed:parentid="186" id="641" transform="matrix(1,0,0,1,872,6013)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">用户可 以选择两种镜像作为父镜像，一种是所谓的基础镜像（ baseimage），另外一</tspan><tspan y="35.1" style="white-space:pre" x="8">种是普通的镜像（往往由第三方创建，基于基础镜像） </tspan></text></g><g ed:parentid="186" id="643" transform="matrix(1,0,0,1,872,6063)" ed:width="500" ed:height="43.5"><path stroke="#696969" d="M0,43.5L500,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">可以通过 .dockerignore 文件（每一行添加一条匹配模式）来让 Docker 忽略匹配路</tspan><tspan y="35.1" style="white-space:pre" x="8">径或文件，在创建镜像时候不将无关数据发送到服务端</tspan></text></g><g ed:parentid="186" id="645" transform="matrix(1,0,0,1,872,6113)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">自 17.05 版本开始， Docker 支持多步骤镜像创建（ Multi- stage build ）特性，可</tspan><tspan y="35.1" style="white-space:pre" x="8">以精简最终生成的镜像大小 。</tspan></text></g><g ed:parentid="188" id="647" transform="matrix(1,0,0,1,872,6163)" ed:width="429" ed:height="24.5"><path stroke="#696969" d="M0,24.5L429,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">所谓最佳实践，就是从需求出发，来定制适合自己 、高效方便的镜像 。</tspan></text></g><g ed:parentid="188" id="649" transform="matrix(1,0,0,1,872,6194)" ed:width="514" ed:height="100.5"><path stroke="#696969" d="M0,100.5L514,100.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">建议读者在生成镜像过程中，尝试从如下角度进行思考，完善所生成镜像 ：1、精简镜</tspan><tspan y="35.1" style="white-space:pre" x="8">像用途；2、选用合适的基础镜像；3、提供注释和维护者信息；4、正确使用版本号；</tspan><tspan y="54.1" style="white-space:pre" x="8">5、减少镜像层数；6、恰当使用多步骤创建；7、使用 .dockerignore 文件；8、及时</tspan><tspan y="73.1" style="white-space:pre" x="8">删除临时文件和缓存文件；9、提高生成速度；10、调整合理的指令顺序；11、减少外</tspan><tspan y="92.1" style="white-space:pre" x="8">部源的干扰</tspan></text></g><g ed:parentid="190" id="651" transform="matrix(1,0,0,1,644,6327)" ed:width="484" ed:height="24.5"><path stroke="#696969" d="M0,24.5L484,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">目前常用的 Linux 发行版主要包括 Debian/Ubun阳系列和 CentOS/Fedora 系列</tspan></text></g><g ed:parentid="190" id="653" transform="matrix(1,0,0,1,644,6358)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">使用 Docker ，只需要一个命令就能快速获取一个 Linux 发行版镜像 ，这是以往各种</tspan><tspan y="35.1" style="white-space:pre" x="8">虚拟化技术都难以实现的 </tspan></text></g><g ed:parentid="192" id="655" transform="matrix(1,0,0,1,763,6408)" ed:width="483" ed:height="62.5"><path stroke="#696969" d="M0,62.5L483,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">BusyBox 是一个集成了一百多个最常用 Linux 命令（如 cat 、 echo 、 grep 、</tspan><tspan y="35.1" style="white-space:pre" x="8">mount 、 telnet 等） 的精简工具箱，它只有不 到 2 1\但 大小，被誉为“ Linux</tspan><tspan y="54.1" style="white-space:pre" x="8">系统的瑞士军刀”</tspan></text></g><g ed:parentid="194" id="657" transform="matrix(1,0,0,1,749,6477)" ed:width="339" ed:height="43.5"><path stroke="#696969" d="M0,43.5L339,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Alp ine 操作系统是一个面向安全的轻型 Linux 发行版，</tspan><tspan y="35.1" style="white-space:pre" x="8">关注安全，性能和资源效能</tspan></text></g><g ed:parentid="196" id="659" transform="matrix(1,0,0,1,806,6527)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Debian 和 Ubuntu 都是目前较为流行的 Debi an 系的服务器操作系统，十分适合研发</tspan><tspan y="35.1" style="white-space:pre" x="8">场景</tspan></text></g><g ed:parentid="198" id="661" transform="matrix(1,0,0,1,807,6577)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">CentOS 和 Fedora 都是基于 Redhat 的 Linux 发行版。CentOS是目前企业级服务器</tspan><tspan y="35.1" style="white-space:pre" x="8">的常用操作系统； Fedora则主要面向个人桌面用户</tspan></text></g><g ed:parentid="198" id="663" transform="matrix(1,0,0,1,807,6627)" ed:width="471" ed:height="43.5"><path stroke="#696969" d="M0,43.5L471,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Fedora 是由 Fedora Project 社区开发， Red Hat 公司赞助的 Linux 发行版 。</tspan><tspan y="35.1" style="white-space:pre" x="8">它的目标是创建一套新颖 、 多功能并且自由和开源的操作系统</tspan></text></g><g ed:parentid="190" id="665" transform="matrix(1,0,0,1,644,6677)" ed:width="494" ed:height="43.5"><path stroke="#696969" d="M0,43.5L494,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">官方镜像体积都比较小，只带有一些基本的组件，适合用来作为基础镜像 。 精简的</tspan><tspan y="35.1" style="white-space:pre" x="8">系统有利于安全、稳定和高效的运行，也适合进行定制化</tspan></text></g><g ed:parentid="190" id="667" transform="matrix(1,0,0,1,644,6727)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">个别第三方（如 tu阳m ，已被 Docker 收购）维护的应用镜像质量也非常高 。 这些镜</tspan><tspan y="35.1" style="white-space:pre" x="8">像通常针对某个具体应用进行配置，比如：包含 LAMP 组件的 Ubun阳镜像 </tspan></text></g><g ed:parentid="200" id="669" transform="matrix(1,0,0,1,722,6866)" ed:width="455" ed:height="24.5"><path stroke="#696969" d="M0,24.5L455,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">在 Docker 社区中，对于是否需要为 Docker 容器启用 SSH 服务一直有争论</tspan></text></g><g ed:parentid="200" id="671" transform="matrix(1,0,0,1,722,6897)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">一方的观点是： Docker 的理念是一个容器只运行一个服务 。 因此，如果每个容器都</tspan><tspan y="35.1" style="white-space:pre" x="8">运行一个额外的 SSH 服务，就违背了这个理念</tspan></text></g><g ed:parentid="200" id="673" transform="matrix(1,0,0,1,722,6947)" ed:width="503" ed:height="43.5"><path stroke="#696969" d="M0,43.5L503,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">另外一方的观点是：虽然使用 docker exec 命令可以从本地进入容器，但是如果要从</tspan><tspan y="35.1" style="white-space:pre" x="8">其他远程主机进人依然没有更好的解决方案</tspan></text></g><g ed:parentid="210" id="675" transform="matrix(1,0,0,1,832,7023)" ed:width="311" ed:height="62.5"><path stroke="#696969" d="M0,62.5L311,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Apache 是一个高稳定性的、 商业级别的开源</tspan><tspan y="35.1" style="white-space:pre" x="8">Web 服务器， 是目前世界使用排名第一的 Web 服</tspan><tspan y="54.1" style="white-space:pre" x="8">务器软件</tspan></text></g><g ed:parentid="212" id="677" transform="matrix(1,0,0,1,823,7092)" ed:width="514" ed:height="62.5"><path stroke="#696969" d="M0,62.5L514,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Nginx (发音为 "engine-x") 是一款功能强大开源反向代理服 务器 ， 它也可以作为负</tspan><tspan y="35.1" style="white-space:pre" x="8">载均衡器 支持 HTTP 、 HTTPS  、SMTP、POP3、IMAP 等协议。它也可以作为负载</tspan><tspan y="54.1" style="white-space:pre" x="8">均衡器、HTTP缓存或Web服务器</tspan></text></g><g ed:parentid="212" id="679" transform="matrix(1,0,0,1,823,7161)" ed:width="436" ed:height="24.5"><path stroke="#696969" d="M0,24.5L436,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Nginx 特性如下：热部署、高并发连接、低内存消耗、响应快、高可靠性</tspan></text></g><g ed:parentid="214" id="681" transform="matrix(1,0,0,1,832,7192)" ed:width="487" ed:height="81.5"><path stroke="#696969" d="M0,81.5L487,81.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Tomcat 是由 Apache 软件基金会下属的 Jakarta 项目开发的一个 Servlet 容</tspan><tspan y="35.1" style="white-space:pre" x="8">器， 按照 Sun Microsystems 提供的技术规范， 实现了对 Servlet 和 JavaServer</tspan><tspan y="54.1" style="white-space:pre" x="8">Page (JSP) 的支持。 同时， 它提供了作为 Web 服务器的一些特有功能， 如</tspan><tspan y="73.1" style="white-space:pre" x="8">Tomcat 管理和控制平台、 安全域管理和 Tomcat 阀等</tspan></text></g><g ed:parentid="216" id="683" transform="matrix(1,0,0,1,815,7280)" ed:width="348" ed:height="62.5"><path stroke="#696969" d="M0,62.5L348,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Jetty 是一个优秀的开源 serv let 容器， 以其高效、 小</tspan><tspan y="35.1" style="white-space:pre" x="8">巧、可嵌入式等优点深得人心，它为基于 Java 的 Web 内</tspan><tspan y="54.1" style="white-space:pre" x="8">容（如 JSP 和 se叫巳t）提供运行环境</tspan></text></g><g ed:parentid="216" id="685" transform="matrix(1,0,0,1,815,7349)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">与相对老牌的 Tomcat 比， Jetty 架构更合理，性能更优 。 尤其在启动速度上，让 </tspan><tspan y="35.1" style="white-space:pre" x="8">Tomcat望尘莫及</tspan></text></g><g ed:parentid="218" id="687" transform="matrix(1,0,0,1,823,7399)" ed:width="431" ed:height="62.5"><path stroke="#696969" d="M0,62.5L431,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">LAMP (Linux-Apache-MySQL-PHP ）是目前流行的 Web 工具拢，</tspan><tspan y="35.1" style="white-space:pre" x="8">其中包括 ： Linux 操作系统， Apache 网络服务器， MySQL 数据库，</tspan><tspan y="54.1" style="white-space:pre" x="8">Perl 、 PHP 或者 Python 编程语言</tspan></text></g><g ed:parentid="218" id="689" transform="matrix(1,0,0,1,823,7468)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">和 Java/J2EE 架构相比， LAMP 具有 Web 资源丰富、轻量、快速开发等特点；和微</tspan><tspan y="35.1" style="white-space:pre" x="8">软的 .NET 架构相比 ， LAMP 更具有通用、跨平台 、高性能 、低价格的优势</tspan></text></g><g ed:parentid="220" id="691" transform="matrix(1,0,0,1,877,7518)" ed:width="152" ed:height="24.5"><path stroke="#696969" d="M0,24.5L152,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">持续集成的特点包括 ：</tspan></text></g><g ed:parentid="220" id="693" transform="matrix(1,0,0,1,877,7549)" ed:width="511" ed:height="43.5"><path stroke="#696969" d="M0,43.5L511,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">鼓励自动化的周期性的过程，从检出代码、编译构建、运行测试、 结果记录 、 测试统</tspan><tspan y="35.1" style="white-space:pre" x="8">计等都是自动完成的，减少人工干预；</tspan></text></g><g ed:parentid="220" id="695" transform="matrix(1,0,0,1,877,7599)" ed:width="442" ed:height="24.5"><path stroke="#696969" d="M0,24.5L442,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">需要有持续集成系统的支持 ， 包括代码托管机制支持，以及集成服务器等</tspan></text></g><g ed:parentid="220" id="697" transform="matrix(1,0,0,1,877,7630)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">持续交付（ Continuous Delivery, CD ）则是经典的敏捷软件开发方法的自然延伸，它</tspan><tspan y="35.1" style="white-space:pre" x="8">强调产品在修改后到部署上线的流程要敏捷化、自动化</tspan></text></g><g ed:parentid="220" id="699" transform="matrix(1,0,0,1,877,7680)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Jenkins 是一个得到广泛应用的持续集成和持续交付的工具 。 作为开源软件项目，它</tspan><tspan y="35.1" style="white-space:pre" x="8">旨在提供一个开放易用的持续集成平台 </tspan></text></g><g ed:parentid="220" id="701" transform="matrix(1,0,0,1,877,7730)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">GitLab 是一款非常强大的开源源码管理系统 。 它支持基于 G i t 的源码管理、代码评</tspan><tspan y="35.1" style="white-space:pre" x="8">审、 issue 跟踪、活动管理、 wiki 页面 、 持续集成和测试等功能</tspan></text></g><g ed:parentid="208" id="703" transform="matrix(1,0,0,1,711,7840)" ed:width="357" ed:height="24.5"><path stroke="#696969" d="M0,24.5L357,24.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">包括 Web 服务在内的中间件领域十分适合引人容器技术 ：</tspan></text></g><g ed:parentid="703" id="705" transform="matrix(1,0,0,1,1095,7780)" ed:width="499" ed:height="43.5"><path stroke="#696969" d="M0,43.5L499,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">中间件服务器是除数据库服务器外的主要计算节点，很容易成为性能瓶颈，所以通常</tspan><tspan y="35.1" style="white-space:pre" x="8">需要大批量部署，而 Docker 对于批量部署有着许多先天的优势；</tspan></text></g><g ed:parentid="703" id="707" transform="matrix(1,0,0,1,1095,7830)" ed:width="499" ed:height="43.5"><path stroke="#696969" d="M0,43.5L499,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">中间件服务器结构清晰，在剥离了配置文件、日志、代码目录之后，容器几乎可以处</tspan><tspan y="35.1" style="white-space:pre" x="8">于零增长状态，这使得容器的迁移和批量部署更加方便；</tspan></text></g><g ed:parentid="703" id="709" transform="matrix(1,0,0,1,1095,7880)" ed:width="502" ed:height="43.5"><path stroke="#696969" d="M0,43.5L502,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">中间件服务器很容易实现集群，在使用硬件的 FS 、软件的 Nginx 等负载均衡后，中</tspan><tspan y="35.1" style="white-space:pre" x="8">间件服务器集群变得非常容易 </tspan></text></g><g ed:parentid="224" id="711" transform="matrix(1,0,0,1,797,7957)" ed:width="393" ed:height="43.5"><path stroke="#696969" d="M0,43.5L393,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">MySQL 是全球最流行的开源关系型数据库之一，由于其具有高性</tspan><tspan y="35.1" style="white-space:pre" x="8">能、成熟可靠、高适应性 、 易用性而得到广泛应用 。</tspan></text></g><g ed:parentid="226" id="713" transform="matrix(1,0,0,1,871,8007)" ed:width="413" ed:height="43.5"><path stroke="#696969" d="M0,43.5L413,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Oracle Database 11 g 快捷版（ Oracle Database XE ）是一款基于</tspan><tspan y="35.1" style="white-space:pre" x="8">Oracle Database 11 g 第 2 版代码库的小型入门级数据库</tspan></text></g><g ed:parentid="228" id="715" transform="matrix(1,0,0,1,814,8057)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">MongoDB 是一款可扩展、高性能的开源文档数据库（Document-Oriented ），是当</tspan><tspan y="35.1" style="white-space:pre" x="8">今最流行的 NoSQL 数据库之一 </tspan></text></g><g ed:parentid="228" id="717" transform="matrix(1,0,0,1,814,8107)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">采用 C＋＋开发，支持复杂的数据类型和强大的查询语言，提供了关系数据库的绝大部</tspan><tspan y="35.1" style="white-space:pre" x="8">分功能</tspan></text></g><g ed:parentid="228" id="719" transform="matrix(1,0,0,1,814,8157)" ed:width="514" ed:height="62.5"><path stroke="#696969" d="M0,62.5L514,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">MongoDB （源自“ humogous ” ）是一个面向文档的跨平台数据库，避开了传统关</tspan><tspan y="35.1" style="white-space:pre" x="8">系型数据库结构，转而使用动态类似于 JSON 的 BSON 格式，使其能轻松地将多个数</tspan><tspan y="54.1" style="white-space:pre" x="8">据写在同一类型中</tspan></text></g><g ed:parentid="230" id="721" transform="matrix(1,0,0,1,783,8226)" ed:width="417" ed:height="43.5"><path stroke="#696969" d="M0,43.5L417,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Redis 是一个开源 （ BSD 许可）的基于内存的数据结构存储系统，可</tspan><tspan y="35.1" style="white-space:pre" x="8">以用作数据库 、 缓存和消息中间件。</tspan></text></g><g ed:parentid="230" id="723" transform="matrix(1,0,0,1,783,8276)" ed:width="514" ed:height="100.5"><path stroke="#696969" d="M0,100.5L514,100.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Redis 支持多种类型的数据结构，如 string （ 字符串）、 hash （散列）、 list （列</tspan><tspan y="35.1" style="white-space:pre" x="8">表）、 set （集合）、 sorted set （有序集合）与范围查询 、 bitmaps 、 </tspan><tspan y="54.1" style="white-space:pre" x="8">hyperloglogs 和 geospatial 索引半径查询， Redis 同时支持 replication 、 LUA 脚</tspan><tspan y="73.1" style="white-space:pre" x="8">本、 LRU 驱动事件、 事务和不同级别的持久化支持等，通过哨兵机制和集群机制提供</tspan><tspan y="92.1" style="white-space:pre" x="8">高可用性 。</tspan></text></g><g ed:parentid="232" id="725" transform="matrix(1,0,0,1,814,8383)" ed:width="456" ed:height="62.5"><path stroke="#696969" d="M0,62.5L456,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Apache Cassandra 是个开源（ Apache License 2.0 ）的分布式数据库，支</tspan><tspan y="35.1" style="white-space:pre" x="8">持分布式高可用数据存储，可以提供跨数据中心的容错能力且无单点故障，</tspan><tspan y="54.1" style="white-space:pre" x="8">并通过异步无主复制实现所有客户端的低延迟操作</tspan></text></g><g ed:parentid="232" id="728" transform="matrix(1,0,0,1,814,8452)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Cassandra 在设计上引人了 P2P 技术，具备大规模可分区行存储能力，并支持 Sp缸L </tspan><tspan y="35.1" style="white-space:pre" x="8">Storm 、Hadoop 系统集成</tspan></text></g><g ed:parentid="222" id="730" transform="matrix(1,0,0,1,676,8502)" ed:width="512" ed:height="43.5"><path stroke="#696969" d="M0,43.5L512,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">在使用数据库容器时，建议将数据库文件映射到宿主主机，一方面减少容器文件系统带</tspan><tspan y="35.1" style="white-space:pre" x="8">来的性能损耗，另一方面实现数据的持久化</tspan></text></g><g ed:parentid="236" id="732" transform="matrix(1,0,0,1,772,8578)" ed:width="514" ed:height="43.5"><path stroke="#696969" d="M0,43.5L514,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">热门的大数据分布式处理的三大重量级武器： Hadoop 、 Sp缸k 、 Storm ，以及新</tspan><tspan y="35.1" style="white-space:pre" x="8">一代的数据采集和分析引擎 Elasticsearch 。</tspan></text></g><g ed:parentid="238" id="734" transform="matrix(1,0,0,1,896,8628)" ed:width="514" ed:height="62.5"><path stroke="#696969" d="M0,62.5L514,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Hadoop 主要基于 Java 语言实现，由三个核心子系统组成 ： HDFS 、 YARN 、 </tspan><tspan y="35.1" style="white-space:pre" x="8">MapReduce ， 其中， HDFS是一套分布式文件系统； YARN 是资源管理系统， </tspan><tspan y="54.1" style="white-space:pre" x="8">MapReduce 是运行在 YARN 上的应用，负责分布式处理管理。</tspan></text></g><g ed:parentid="240" id="736" transform="matrix(1,0,0,1,882,8697)" ed:width="431" ed:height="62.5"><path stroke="#696969" d="M0,62.5L431,62.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Apache Spark 是一个围绕速度 、 易用性和复杂分析构建的大数据</tspan><tspan y="35.1" style="white-space:pre" x="8">处理框架，基于 Scala 开发 。 最初在 2009 年由加州大学伯克利分校的</tspan><tspan y="54.1" style="white-space:pre" x="8">AMPLab 开发，并于 2010 年成为 Apache 的开源项目之－ </tspan></text></g><g ed:parentid="242" id="738" transform="matrix(1,0,0,1,885,8766)" ed:width="422" ed:height="43.5"><path stroke="#696969" d="M0,43.5L422,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Apache Storm 是一个实时流计算框架，由 Twitter 在 2014 年正 ~飞</tspan><tspan y="35.1" style="white-space:pre" x="8">式开源，遵循Eclipse Public License1.0，基于Clojure等语言实现</tspan></text></g><g ed:parentid="244" id="740" transform="matrix(1,0,0,1,925,8816)" ed:width="514" ed:height="81.5"><path stroke="#696969" d="M0,81.5L514,81.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">Elasticsearch 是基于 Lucene 的开源搜索服务（ Java 实现） 。它是分布式、多租户</tspan><tspan y="35.1" style="white-space:pre" x="8">的全文搜索引擎，支持 RESTful Web 接口 。Elasticsearch 支持实时分布式数据存储</tspan><tspan y="54.1" style="white-space:pre" x="8">和分析查询功能，可以轻松扩展到上百台服务器，同时支持处理 PB 级结构化或非结构</tspan><tspan y="73.1" style="white-space:pre" x="8">化数据 。</tspan></text></g><g ed:parentid="236" id="742" transform="matrix(1,0,0,1,772,8904)" ed:width="499" ed:height="43.5"><path stroke="#696969" d="M0,43.5L499,43.5" fill="none" stroke-linejoin="round"/><text class="st3"><tspan y="16.1" style="white-space:pre" x="8">实际上，摩尔定律的失效，必将导致越来越多的复杂任务必须采用分布式架构进行处</tspan><tspan y="35.1" style="white-space:pre" x="8">理。</tspan></text></g><symbol id="plus"><path d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6z" fill="url(#lg1)"/><path stroke="#46a000" d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6zM3,6L9,6M6,3L6,9" stroke-width="0.7" fill="none"/></symbol><symbol id="minus"><path d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6z" fill="url(#lg1)"/><path stroke="#46a000" d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6zM3,6L9,6" stroke-width="0.7" fill="none"/></symbol><g ed:togtopicid="101" transform="translate(399,4720)"><use xlink:href="#minus"/></g><g ed:togtopicid="102" transform="translate(640,352)"><use xlink:href="#minus"/></g><g ed:togtopicid="104" transform="translate(698,1175)"><use xlink:href="#minus"/></g><g ed:togtopicid="106" transform="translate(672,2145)"><use xlink:href="#minus"/></g><g ed:togtopicid="108" transform="translate(790,96)"><use xlink:href="#minus"/></g><g ed:togtopicid="110" transform="translate(829,343)"><use xlink:href="#minus"/></g><g ed:togtopicid="112" transform="translate(803,599)"><use xlink:href="#minus"/></g><g ed:togtopicid="116" transform="translate(817,862)"><use xlink:href="#minus"/></g><g ed:togtopicid="118" transform="translate(861,1193)"><use xlink:href="#minus"/></g><g ed:togtopicid="120" transform="translate(861,1437)"><use xlink:href="#minus"/></g><g ed:togtopicid="122" transform="translate(843,1547)"><use xlink:href="#minus"/></g><g ed:togtopicid="124" transform="translate(791,1698)"><use xlink:href="#minus"/></g><g ed:togtopicid="126" transform="translate(817,1829)"><use xlink:href="#minus"/></g><g ed:togtopicid="128" transform="translate(791,1945)"><use xlink:href="#minus"/></g><g ed:togtopicid="130" transform="translate(830,2095)"><use xlink:href="#minus"/></g><g ed:togtopicid="132" transform="translate(791,2329)"><use xlink:href="#minus"/></g><g ed:togtopicid="134" transform="translate(830,2485)"><use xlink:href="#minus"/></g><g ed:togtopicid="136" transform="translate(791,2582)"><use xlink:href="#minus"/></g><g ed:togtopicid="138" transform="translate(672,3207)"><use xlink:href="#minus"/></g><g ed:togtopicid="140" transform="translate(791,2780)"><use xlink:href="#minus"/></g><g ed:togtopicid="142" transform="translate(791,2917)"><use xlink:href="#minus"/></g><g ed:togtopicid="144" transform="translate(791,3048)"><use xlink:href="#minus"/></g><g ed:togtopicid="146" transform="translate(791,3154)"><use xlink:href="#minus"/></g><g ed:togtopicid="148" transform="translate(830,3285)"><use xlink:href="#minus"/></g><g ed:togtopicid="150" transform="translate(791,3450)"><use xlink:href="#minus"/></g><g ed:togtopicid="152" transform="translate(817,3641)"><use xlink:href="#minus"/></g><g ed:togtopicid="154" transform="translate(672,4020)"><use xlink:href="#minus"/></g><g ed:togtopicid="156" transform="translate(891,3954)"><use xlink:href="#minus"/></g><g ed:togtopicid="158" transform="translate(830,4110)"><use xlink:href="#minus"/></g><g ed:togtopicid="160" transform="translate(843,4201)"><use xlink:href="#minus"/></g><g ed:togtopicid="164" transform="translate(672,4542)"><use xlink:href="#minus"/></g><g ed:togtopicid="166" transform="translate(778,4457)"><use xlink:href="#minus"/></g><g ed:togtopicid="168" transform="translate(804,4610)"><use xlink:href="#minus"/></g><g ed:togtopicid="170" transform="translate(895,4666)"><use xlink:href="#minus"/></g><g ed:togtopicid="172" transform="translate(698,5021)"><use xlink:href="#minus"/></g><g ed:togtopicid="174" transform="translate(895,4877)"><use xlink:href="#minus"/></g><g ed:togtopicid="176" transform="translate(895,5011)"><use xlink:href="#minus"/></g><g ed:togtopicid="180" transform="translate(727,5766)"><use xlink:href="#minus"/></g><g ed:togtopicid="182" transform="translate(846,5332)"><use xlink:href="#minus"/></g><g ed:togtopicid="184" transform="translate(846,5603)"><use xlink:href="#minus"/></g><g ed:togtopicid="186" transform="translate(846,5994)"><use xlink:href="#minus"/></g><g ed:togtopicid="188" transform="translate(846,6222)"><use xlink:href="#minus"/></g><g ed:togtopicid="190" transform="translate(618,6543)"><use xlink:href="#minus"/></g><g ed:togtopicid="192" transform="translate(737,6433)"><use xlink:href="#minus"/></g><g ed:togtopicid="194" transform="translate(723,6493)"><use xlink:href="#minus"/></g><g ed:togtopicid="196" transform="translate(780,6543)"><use xlink:href="#minus"/></g><g ed:togtopicid="198" transform="translate(781,6618)"><use xlink:href="#minus"/></g><g ed:togtopicid="200" transform="translate(696,6891)"><use xlink:href="#minus"/></g><g ed:togtopicid="208" transform="translate(685,7467)"><use xlink:href="#minus"/></g><g ed:togtopicid="210" transform="translate(806,7048)"><use xlink:href="#minus"/></g><g ed:togtopicid="212" transform="translate(797,7133)"><use xlink:href="#minus"/></g><g ed:togtopicid="214" transform="translate(806,7227)"><use xlink:href="#minus"/></g><g ed:togtopicid="216" transform="translate(789,7330)"><use xlink:href="#minus"/></g><g ed:togtopicid="218" transform="translate(797,7449)"><use xlink:href="#minus"/></g><g ed:togtopicid="220" transform="translate(851,7640)"><use xlink:href="#minus"/></g><g ed:togtopicid="222" transform="translate(650,8245)"><use xlink:href="#minus"/></g><g ed:togtopicid="224" transform="translate(771,7972)"><use xlink:href="#minus"/></g><g ed:togtopicid="226" transform="translate(845,8022)"><use xlink:href="#minus"/></g><g ed:togtopicid="228" transform="translate(788,8132)"><use xlink:href="#minus"/></g><g ed:togtopicid="230" transform="translate(757,8295)"><use xlink:href="#minus"/></g><g ed:togtopicid="232" transform="translate(788,8433)"><use xlink:href="#minus"/></g><g ed:togtopicid="236" transform="translate(746,8757)"><use xlink:href="#minus"/></g><g ed:togtopicid="238" transform="translate(870,8653)"><use xlink:href="#minus"/></g><g ed:togtopicid="240" transform="translate(856,8722)"><use xlink:href="#minus"/></g><g ed:togtopicid="242" transform="translate(859,8782)"><use xlink:href="#minus"/></g><g ed:togtopicid="244" transform="translate(899,8851)"><use xlink:href="#minus"/></g><g ed:togtopicid="246" transform="translate(634,9049)"><use xlink:href="#minus"/></g><g ed:togtopicid="260" transform="translate(666,9215)"><use xlink:href="#minus"/></g><g ed:togtopicid="270" transform="translate(666,9365)"><use xlink:href="#minus"/></g><g ed:togtopicid="357" transform="translate(1091,243)"><use xlink:href="#minus"/></g><g ed:togtopicid="373" transform="translate(1026,405)"><use xlink:href="#minus"/></g><g ed:togtopicid="559" transform="translate(929,4314)"><use xlink:href="#minus"/></g><g ed:togtopicid="567" transform="translate(1044,4457)"><use xlink:href="#minus"/></g><g ed:togtopicid="703" transform="translate(1069,7846)"><use xlink:href="#minus"/></g></svg>