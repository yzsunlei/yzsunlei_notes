<svg id="page100" xmlns:ed="https://www.edrawsoft.cn/xml/2017/SVGExtensions/" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ev="http://www.w3.org/2001/xml-events" width="1666" xmlns="http://www.w3.org/2000/svg" ed:hSpacing="30" ed:vSpacing="30" viewBox="0 0 1666 4367" height="4367" ed:name="Page-1"><style type="text/css"><![CDATA[
g[ed\:togtopicid],g[ed\:hyperlink],g[ed\:comment],g[ed\:note] {cursor:pointer;}
g[id] {-moz-user-select: none;-ms-user-select: none;user-select: none;}
svg text::selection,svg tspan::selection{background-color: #4285f4;color: #ffffff;fill: #ffffff;}
.st2 {fill:#303030;font-family:微软雅黑;font-size:12pt}
.st3 {fill:#454545;font-family:微软雅黑;font-size:10pt}
.st1 {fill:#ffffff;font-family:微软雅黑;font-size:14pt}
]]></style><defs><linearGradient x1="0%" id="lg1" x2="0%" y1="0%" y2="100%"><stop offset="0" stop-color="#ffffff"/><stop offset="0.25" stop-color="#f0f5f0"/><stop offset="0.75" stop-color="#e1ebe1"/><stop offset="1" stop-color="#c8d7c8"/></linearGradient></defs><rect x="0" width="1666" fill="#ffffff" y="0" height="4367"/><path id="104" d="M-67.2,743.4C18.5,532.9,-79,-771.9,94.3,-771.9" transform="matrix(1,0,0,1,243,1412)" fill="none" ed:tosuperid="103" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="106" d="M-54.2,248.1C6.5,134.9,-58.5,-276.6,94.3,-276.6" transform="matrix(1,0,0,1,243,1907)" fill="none" ed:tosuperid="105" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="108" d="M-13.5,269.1C5.4,269.1,-13.5,-269.1,13.5,-269.1" transform="matrix(1,0,0,1,614,371)" fill="none" ed:tosuperid="107" stroke-linecap="round" stroke="#696969" ed:parentid="103" stroke-linejoin="round"/><path id="110" d="M-13.5,139.9C5.4,139.9,-13.5,-139.9,13.5,-139.9" transform="matrix(1,0,0,1,614,500)" fill="none" ed:tosuperid="109" stroke-linecap="round" stroke="#696969" ed:parentid="103" stroke-linejoin="round"/><path id="112" d="M-13.5,-7.9C-0.9,-7.9,1.1,7.9,13.5,7.9" transform="matrix(1,0,0,1,614,648)" fill="none" ed:tosuperid="111" stroke-linecap="round" stroke="#696969" ed:parentid="103" stroke-linejoin="round"/><path id="114" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,746,74)" fill="none" ed:tosuperid="113" stroke-linecap="round" stroke="#696969" ed:parentid="107" stroke-linejoin="round"/><path id="116" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,746,89)" fill="none" ed:tosuperid="115" stroke-linecap="round" stroke="#696969" ed:parentid="107" stroke-linejoin="round"/><path id="118" d="M-13.5,-3C-2,-3,3.8,3,13.5,3" transform="matrix(1,0,0,1,746,105)" fill="none" ed:tosuperid="117" stroke-linecap="round" stroke="#696969" ed:parentid="107" stroke-linejoin="round"/><path id="120" d="M-13.5,42.3C4.9,42.3,-12.4,-42.3,13.5,-42.3" transform="matrix(1,0,0,1,772,318)" fill="none" ed:tosuperid="119" stroke-linecap="round" stroke="#696969" ed:parentid="109" stroke-linejoin="round"/><path id="122" d="M-13.5,-43.5C5,-43.5,-12.6,43.5,13.5,43.5" transform="matrix(1,0,0,1,772,404)" fill="none" ed:tosuperid="121" stroke-linecap="round" stroke="#696969" ed:parentid="109" stroke-linejoin="round"/><path id="126" d="M-13.5,38.8C4.6,38.8,-11.7,-38.8,13.5,-38.8" transform="matrix(1,0,0,1,772,617)" fill="none" ed:tosuperid="125" stroke-linecap="round" stroke="#696969" ed:parentid="111" stroke-linejoin="round"/><path id="128" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,772,640)" fill="none" ed:tosuperid="127" stroke-linecap="round" stroke="#696969" ed:parentid="111" stroke-linejoin="round"/><path id="130" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,772,656)" fill="none" ed:tosuperid="129" stroke-linecap="round" stroke="#696969" ed:parentid="111" stroke-linejoin="round"/><path id="132" d="M-13.5,-23.3C2.4,-23.3,-6.4,23.3,13.5,23.3" transform="matrix(1,0,0,1,772,679)" fill="none" ed:tosuperid="131" stroke-linecap="round" stroke="#696969" ed:parentid="111" stroke-linejoin="round"/><path id="134" d="M-13.5,-46.5C5.2,-46.5,-13.1,46.5,13.5,46.5" transform="matrix(1,0,0,1,772,702)" fill="none" ed:tosuperid="133" stroke-linecap="round" stroke="#696969" ed:parentid="111" stroke-linejoin="round"/><path id="138" d="M-13.5,-161.6C5.4,-161.6,-13.5,161.6,13.5,161.6" transform="matrix(1,0,0,1,614,801)" fill="none" ed:tosuperid="137" stroke-linecap="round" stroke="#696969" ed:parentid="103" stroke-linejoin="round"/><path id="140" d="M-13.5,56C5.4,56,-13.5,-56,13.5,-56" transform="matrix(1,0,0,1,772,907)" fill="none" ed:tosuperid="139" stroke-linecap="round" stroke="#696969" ed:parentid="137" stroke-linejoin="round"/><path id="142" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,772,976)" fill="none" ed:tosuperid="141" stroke-linecap="round" stroke="#696969" ed:parentid="137" stroke-linejoin="round"/><path id="144" d="M-13.5,-76.3C5.4,-76.3,-13.5,76.3,13.5,76.3" transform="matrix(1,0,0,1,772,1039)" fill="none" ed:tosuperid="143" stroke-linecap="round" stroke="#696969" ed:parentid="137" stroke-linejoin="round"/><path id="146" d="M-13.5,-289.1C5.4,-289.1,-13.5,289.1,13.5,289.1" transform="matrix(1,0,0,1,614,929)" fill="none" ed:tosuperid="145" stroke-linecap="round" stroke="#696969" ed:parentid="103" stroke-linejoin="round"/><path id="148" d="M-13.5,45.1C5.1,45.1,-12.9,-45.1,13.5,-45.1" transform="matrix(1,0,0,1,523,1585)" fill="none" ed:tosuperid="147" stroke-linecap="round" stroke="#696969" ed:parentid="105" stroke-linejoin="round"/><path id="150" d="M-13.5,43.5C5,43.5,-12.6,-43.5,13.5,-43.5" transform="matrix(1,0,0,1,664,1497)" fill="none" ed:tosuperid="149" stroke-linecap="round" stroke="#696969" ed:parentid="147" stroke-linejoin="round"/><path id="152" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,664,1525)" fill="none" ed:tosuperid="151" stroke-linecap="round" stroke="#696969" ed:parentid="147" stroke-linejoin="round"/><path id="154" d="M-13.5,-28C3.2,-28,-8.3,28,13.5,28" transform="matrix(1,0,0,1,664,1568)" fill="none" ed:tosuperid="153" stroke-linecap="round" stroke="#696969" ed:parentid="147" stroke-linejoin="round"/><path id="156" d="M-13.5,-54.4C5.4,-54.4,-13.5,54.4,13.5,54.4" transform="matrix(1,0,0,1,523,1685)" fill="none" ed:tosuperid="155" stroke-linecap="round" stroke="#696969" ed:parentid="105" stroke-linejoin="round"/><path id="158" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,655,1727)" fill="none" ed:tosuperid="157" stroke-linecap="round" stroke="#696969" ed:parentid="155" stroke-linejoin="round"/><path id="160" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,655,1755)" fill="none" ed:tosuperid="159" stroke-linecap="round" stroke="#696969" ed:parentid="155" stroke-linejoin="round"/><path id="162" d="M-13.5,-118.1C5.4,-118.1,-13.5,118.1,13.5,118.1" transform="matrix(1,0,0,1,523,1748)" fill="none" ed:tosuperid="161" stroke-linecap="round" stroke="#696969" ed:parentid="105" stroke-linejoin="round"/><path id="164" d="M-31.8,-39.4C7.1,0.4,28.4,67.9,94.3,67.9" transform="matrix(1,0,0,1,243,2251)" fill="none" ed:tosuperid="163" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="166" d="M-13.5,126.1C5.4,126.1,-13.5,-126.1,13.5,-126.1" transform="matrix(1,0,0,1,651,2193)" fill="none" ed:tosuperid="165" stroke-linecap="round" stroke="#696969" ed:parentid="163" stroke-linejoin="round"/><path id="168" d="M-13.5,65.4C5.4,65.4,-13.5,-65.4,13.5,-65.4" transform="matrix(1,0,0,1,651,2254)" fill="none" ed:tosuperid="167" stroke-linecap="round" stroke="#696969" ed:parentid="163" stroke-linejoin="round"/><path id="170" d="M-13.5,17.1C1.2,17.1,-3.6,-17.1,13.5,-17.1" transform="matrix(1,0,0,1,651,2302)" fill="none" ed:tosuperid="169" stroke-linecap="round" stroke="#696969" ed:parentid="163" stroke-linejoin="round"/><path id="172" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" transform="matrix(1,0,0,1,819,2184)" fill="none" ed:tosuperid="171" stroke-linecap="round" stroke="#696969" ed:parentid="167" stroke-linejoin="round"/><path id="174" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,819,2209)" fill="none" ed:tosuperid="173" stroke-linecap="round" stroke="#696969" ed:parentid="167" stroke-linejoin="round"/><path id="176" d="M-13.5,-13.9C0.5,-13.9,-2,13.9,13.5,13.9" transform="matrix(1,0,0,1,651,2333)" fill="none" ed:tosuperid="175" stroke-linecap="round" stroke="#696969" ed:parentid="163" stroke-linejoin="round"/><path id="178" d="M-13.5,-37.1C4.4,-37.1,-11.3,37.1,13.5,37.1" transform="matrix(1,0,0,1,651,2356)" fill="none" ed:tosuperid="177" stroke-linecap="round" stroke="#696969" ed:parentid="163" stroke-linejoin="round"/><path id="180" d="M-13.5,-72.9C5.4,-72.9,-13.5,72.9,13.5,72.9" transform="matrix(1,0,0,1,651,2392)" fill="none" ed:tosuperid="179" stroke-linecap="round" stroke="#696969" ed:parentid="163" stroke-linejoin="round"/><path id="182" d="M-13.5,-113.4C5.4,-113.4,-13.5,113.4,13.5,113.4" transform="matrix(1,0,0,1,651,2433)" fill="none" ed:tosuperid="181" stroke-linecap="round" stroke="#696969" ed:parentid="163" stroke-linejoin="round"/><path id="184" d="M-13.5,-133.6C5.4,-133.6,-13.5,133.6,13.5,133.6" transform="matrix(1,0,0,1,651,2453)" fill="none" ed:tosuperid="183" stroke-linecap="round" stroke="#696969" ed:parentid="163" stroke-linejoin="round"/><path id="186" d="M-56.5,-310.6C9.8,-181.9,-69.5,339.1,94.3,339.1" transform="matrix(1,0,0,1,243,2523)" fill="none" ed:tosuperid="185" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="188" d="M-13.5,83.9C5.4,83.9,-13.5,-83.9,13.5,-83.9" transform="matrix(1,0,0,1,598,2778)" fill="none" ed:tosuperid="187" stroke-linecap="round" stroke="#696969" ed:parentid="185" stroke-linejoin="round"/><path id="190" d="M-13.5,60.6C5.4,60.6,-13.5,-60.6,13.5,-60.6" transform="matrix(1,0,0,1,598,2801)" fill="none" ed:tosuperid="189" stroke-linecap="round" stroke="#696969" ed:parentid="185" stroke-linejoin="round"/><path id="192" d="M-13.5,9.4C-0.5,9.4,0.3,-9.4,13.5,-9.4" transform="matrix(1,0,0,1,598,2852)" fill="none" ed:tosuperid="191" stroke-linecap="round" stroke="#696969" ed:parentid="185" stroke-linejoin="round"/><path id="194" d="M-13.5,-57.4C5.4,-57.4,-13.5,57.4,13.5,57.4" transform="matrix(1,0,0,1,598,2919)" fill="none" ed:tosuperid="193" stroke-linecap="round" stroke="#696969" ed:parentid="185" stroke-linejoin="round"/><path id="196" d="M-13.5,-96.1C5.4,-96.1,-13.5,96.1,13.5,96.1" transform="matrix(1,0,0,1,598,2958)" fill="none" ed:tosuperid="195" stroke-linecap="round" stroke="#696969" ed:parentid="185" stroke-linejoin="round"/><path id="198" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,782,2733)" fill="none" ed:tosuperid="197" stroke-linecap="round" stroke="#696969" ed:parentid="189" stroke-linejoin="round"/><path id="200" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,782,2748)" fill="none" ed:tosuperid="199" stroke-linecap="round" stroke="#696969" ed:parentid="189" stroke-linejoin="round"/><path id="202" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,805,2831)" fill="none" ed:tosuperid="201" stroke-linecap="round" stroke="#696969" ed:parentid="191" stroke-linejoin="round"/><path id="204" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,805,2859)" fill="none" ed:tosuperid="203" stroke-linecap="round" stroke="#696969" ed:parentid="191" stroke-linejoin="round"/><path id="206" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,821,2953)" fill="none" ed:tosuperid="205" stroke-linecap="round" stroke="#696969" ed:parentid="193" stroke-linejoin="round"/><path id="208" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,821,2969)" fill="none" ed:tosuperid="207" stroke-linecap="round" stroke="#696969" ed:parentid="193" stroke-linejoin="round"/><path id="210" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,821,2984)" fill="none" ed:tosuperid="209" stroke-linecap="round" stroke="#696969" ed:parentid="193" stroke-linejoin="round"/><path id="212" d="M-13.5,-23.3C2.4,-23.3,-6.4,23.3,13.5,23.3" transform="matrix(1,0,0,1,821,3000)" fill="none" ed:tosuperid="211" stroke-linecap="round" stroke="#696969" ed:parentid="193" stroke-linejoin="round"/><path id="216" d="M-64.8,-606.9C16.7,-418.9,-77.4,635.4,94.3,635.4" transform="matrix(1,0,0,1,243,2819)" fill="none" ed:tosuperid="215" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="218" d="M-13.5,28.4C3.3,28.4,-8.5,-28.4,13.5,-28.4" transform="matrix(1,0,0,1,624,3426)" fill="none" ed:tosuperid="217" stroke-linecap="round" stroke="#696969" ed:parentid="215" stroke-linejoin="round"/><path id="220" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,811,3390)" fill="none" ed:tosuperid="219" stroke-linecap="round" stroke="#696969" ed:parentid="217" stroke-linejoin="round"/><path id="222" d="M-13.5,-56C5.4,-56,-13.5,56,13.5,56" transform="matrix(1,0,0,1,811,3454)" fill="none" ed:tosuperid="221" stroke-linecap="round" stroke="#696969" ed:parentid="217" stroke-linejoin="round"/><path id="224" d="M-13.5,-113.4C5.4,-113.4,-13.5,113.4,13.5,113.4" transform="matrix(1,0,0,1,624,3568)" fill="none" ed:tosuperid="223" stroke-linecap="round" stroke="#696969" ed:parentid="215" stroke-linejoin="round"/><path id="226" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" transform="matrix(1,0,0,1,860,3656)" fill="none" ed:tosuperid="225" stroke-linecap="round" stroke="#696969" ed:parentid="223" stroke-linejoin="round"/><path id="228" d="M-13.5,-53C5.4,-53,-13.5,53,13.5,53" transform="matrix(1,0,0,1,860,3734)" fill="none" ed:tosuperid="227" stroke-linecap="round" stroke="#696969" ed:parentid="223" stroke-linejoin="round"/><path id="230" d="M-69.6,-929.9C20.3,-691.7,-80.6,958.4,94.3,958.4" transform="matrix(1,0,0,1,243,3142)" fill="none" ed:tosuperid="229" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="232" d="M-13.5,70.1C5.4,70.1,-13.5,-70.1,13.5,-70.1" transform="matrix(1,0,0,1,555,4030)" fill="none" ed:tosuperid="231" stroke-linecap="round" stroke="#696969" ed:parentid="229" stroke-linejoin="round"/><path id="234" d="M-13.5,-1.4C-2.4,-1.4,4.6,1.4,13.5,1.4" transform="matrix(1,0,0,1,555,4102)" fill="none" ed:tosuperid="233" stroke-linecap="round" stroke="#696969" ed:parentid="229" stroke-linejoin="round"/><path id="236" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,734,4075)" fill="none" ed:tosuperid="235" stroke-linecap="round" stroke="#696969" ed:parentid="233" stroke-linejoin="round"/><path id="238" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,734,4103)" fill="none" ed:tosuperid="237" stroke-linecap="round" stroke="#696969" ed:parentid="233" stroke-linejoin="round"/><path id="240" d="M-13.5,-28C3.2,-28,-8.3,28,13.5,28" transform="matrix(1,0,0,1,734,4131)" fill="none" ed:tosuperid="239" stroke-linecap="round" stroke="#696969" ed:parentid="233" stroke-linejoin="round"/><path id="242" d="M-13.5,-90.1C5.4,-90.1,-13.5,90.1,13.5,90.1" transform="matrix(1,0,0,1,555,4190)" fill="none" ed:tosuperid="241" stroke-linecap="round" stroke="#696969" ed:parentid="229" stroke-linejoin="round"/><path id="244" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,726,4253)" fill="none" ed:tosuperid="243" stroke-linecap="round" stroke="#696969" ed:parentid="241" stroke-linejoin="round"/><path id="246" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,726,4273)" fill="none" ed:tosuperid="245" stroke-linecap="round" stroke="#696969" ed:parentid="241" stroke-linejoin="round"/><path id="248" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,726,4288)" fill="none" ed:tosuperid="247" stroke-linecap="round" stroke="#696969" ed:parentid="241" stroke-linejoin="round"/><path id="250" d="M-13.5,-28C3.2,-28,-8.3,28,13.5,28" transform="matrix(1,0,0,1,746,130)" fill="none" ed:tosuperid="249" stroke-linecap="round" stroke="#696969" ed:parentid="107" stroke-linejoin="round"/><path id="252" d="M-13.5,85.8C5.4,85.8,-13.5,-85.8,13.5,-85.8" transform="matrix(1,0,0,1,772,274)" fill="none" ed:tosuperid="251" stroke-linecap="round" stroke="#696969" ed:parentid="109" stroke-linejoin="round"/><path id="254" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,936,248)" fill="none" ed:tosuperid="253" stroke-linecap="round" stroke="#696969" ed:parentid="119" stroke-linejoin="round"/><path id="256" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,936,263)" fill="none" ed:tosuperid="255" stroke-linecap="round" stroke="#696969" ed:parentid="119" stroke-linejoin="round"/><path id="260" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,936,288)" fill="none" ed:tosuperid="259" stroke-linecap="round" stroke="#696969" ed:parentid="119" stroke-linejoin="round"/><path id="262" d="M-13.5,-28C3.2,-28,-8.3,28,13.5,28" transform="matrix(1,0,0,1,936,304)" fill="none" ed:tosuperid="261" stroke-linecap="round" stroke="#696969" ed:parentid="119" stroke-linejoin="round"/><path id="264" d="M-13.5,32.8C3.9,32.8,-10,-32.8,13.5,-32.8" transform="matrix(1,0,0,1,941,414)" fill="none" ed:tosuperid="263" stroke-linecap="round" stroke="#696969" ed:parentid="121" stroke-linejoin="round"/><path id="266" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,941,439)" fill="none" ed:tosuperid="265" stroke-linecap="round" stroke="#696969" ed:parentid="121" stroke-linejoin="round"/><path id="268" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,941,464)" fill="none" ed:tosuperid="267" stroke-linecap="round" stroke="#696969" ed:parentid="121" stroke-linejoin="round"/><path id="270" d="M-13.5,-42.3C4.9,-42.3,-12.4,42.3,13.5,42.3" transform="matrix(1,0,0,1,941,489)" fill="none" ed:tosuperid="269" stroke-linecap="round" stroke="#696969" ed:parentid="121" stroke-linejoin="round"/><path id="272" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,967,570)" fill="none" ed:tosuperid="271" stroke-linecap="round" stroke="#696969" ed:parentid="125" stroke-linejoin="round"/><path id="274" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,967,586)" fill="none" ed:tosuperid="273" stroke-linecap="round" stroke="#696969" ed:parentid="125" stroke-linejoin="round"/><path id="276" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,941,625)" fill="none" ed:tosuperid="275" stroke-linecap="round" stroke="#696969" ed:parentid="127" stroke-linejoin="round"/><path id="278" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,941,656)" fill="none" ed:tosuperid="277" stroke-linecap="round" stroke="#696969" ed:parentid="129" stroke-linejoin="round"/><path id="280" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,967,694)" fill="none" ed:tosuperid="279" stroke-linecap="round" stroke="#696969" ed:parentid="131" stroke-linejoin="round"/><path id="282" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,967,710)" fill="none" ed:tosuperid="281" stroke-linecap="round" stroke="#696969" ed:parentid="131" stroke-linejoin="round"/><path id="284" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,954,749)" fill="none" ed:tosuperid="283" stroke-linecap="round" stroke="#696969" ed:parentid="133" stroke-linejoin="round"/><path id="286" d="M-13.5,91.8C5.4,91.8,-13.5,-91.8,13.5,-91.8" transform="matrix(1,0,0,1,772,871)" fill="none" ed:tosuperid="285" stroke-linecap="round" stroke="#696969" ed:parentid="137" stroke-linejoin="round"/><path id="288" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,954,831)" fill="none" ed:tosuperid="287" stroke-linecap="round" stroke="#696969" ed:parentid="139" stroke-linejoin="round"/><path id="290" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,954,856)" fill="none" ed:tosuperid="289" stroke-linecap="round" stroke="#696969" ed:parentid="139" stroke-linejoin="round"/><path id="292" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,954,871)" fill="none" ed:tosuperid="291" stroke-linecap="round" stroke="#696969" ed:parentid="139" stroke-linejoin="round"/><path id="294" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,954,965)" fill="none" ed:tosuperid="293" stroke-linecap="round" stroke="#696969" ed:parentid="141" stroke-linejoin="round"/><path id="296" d="M-13.5,-1.8C-2.3,-1.8,4.4,1.8,13.5,1.8" transform="matrix(1,0,0,1,954,990)" fill="none" ed:tosuperid="295" stroke-linecap="round" stroke="#696969" ed:parentid="141" stroke-linejoin="round"/><path id="298" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,954,1005)" fill="none" ed:tosuperid="297" stroke-linecap="round" stroke="#696969" ed:parentid="141" stroke-linejoin="round"/><path id="300" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,954,1021)" fill="none" ed:tosuperid="299" stroke-linecap="round" stroke="#696969" ed:parentid="141" stroke-linejoin="round"/><path id="302" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,941,1100)" fill="none" ed:tosuperid="301" stroke-linecap="round" stroke="#696969" ed:parentid="143" stroke-linejoin="round"/><path id="304" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,941,1116)" fill="none" ed:tosuperid="303" stroke-linecap="round" stroke="#696969" ed:parentid="143" stroke-linejoin="round"/><path id="306" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,941,1131)" fill="none" ed:tosuperid="305" stroke-linecap="round" stroke="#696969" ed:parentid="143" stroke-linejoin="round"/><path id="308" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,798,1198)" fill="none" ed:tosuperid="307" stroke-linecap="round" stroke="#696969" ed:parentid="145" stroke-linejoin="round"/><path id="310" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,798,1223)" fill="none" ed:tosuperid="309" stroke-linecap="round" stroke="#696969" ed:parentid="145" stroke-linejoin="round"/><path id="312" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,798,1238)" fill="none" ed:tosuperid="311" stroke-linecap="round" stroke="#696969" ed:parentid="145" stroke-linejoin="round"/><path id="314" d="M-13.5,136.9C5.4,136.9,-13.5,-136.9,13.5,-136.9" transform="matrix(1,0,0,1,523,1493)" fill="none" ed:tosuperid="313" stroke-linecap="round" stroke="#696969" ed:parentid="105" stroke-linejoin="round"/><path id="316" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,620,1336)" fill="none" ed:tosuperid="315" stroke-linecap="round" stroke="#696969" ed:parentid="313" stroke-linejoin="round"/><path id="318" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" transform="matrix(1,0,0,1,620,1352)" fill="none" ed:tosuperid="317" stroke-linecap="round" stroke="#696969" ed:parentid="313" stroke-linejoin="round"/><path id="320" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,620,1377)" fill="none" ed:tosuperid="319" stroke-linecap="round" stroke="#696969" ed:parentid="313" stroke-linejoin="round"/><path id="322" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,846,1450)" fill="none" ed:tosuperid="321" stroke-linecap="round" stroke="#696969" ed:parentid="149" stroke-linejoin="round"/><path id="324" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,846,1466)" fill="none" ed:tosuperid="323" stroke-linecap="round" stroke="#696969" ed:parentid="149" stroke-linejoin="round"/><path id="326" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,855,1509)" fill="none" ed:tosuperid="325" stroke-linecap="round" stroke="#696969" ed:parentid="151" stroke-linejoin="round"/><path id="330" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,781,1568)" fill="none" ed:tosuperid="329" stroke-linecap="round" stroke="#696969" ed:parentid="153" stroke-linejoin="round"/><path id="332" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,781,1584)" fill="none" ed:tosuperid="331" stroke-linecap="round" stroke="#696969" ed:parentid="153" stroke-linejoin="round"/><path id="334" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,781,1609)" fill="none" ed:tosuperid="333" stroke-linecap="round" stroke="#696969" ed:parentid="153" stroke-linejoin="round"/><path id="336" d="M-13.5,-28C3.2,-28,-8.3,28,13.5,28" transform="matrix(1,0,0,1,781,1624)" fill="none" ed:tosuperid="335" stroke-linecap="round" stroke="#696969" ed:parentid="153" stroke-linejoin="round"/><path id="338" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,655,1711)" fill="none" ed:tosuperid="337" stroke-linecap="round" stroke="#696969" ed:parentid="155" stroke-linejoin="round"/><path id="340" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,824,1714)" fill="none" ed:tosuperid="339" stroke-linecap="round" stroke="#696969" ed:parentid="157" stroke-linejoin="round"/><path id="342" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,863,1783)" fill="none" ed:tosuperid="341" stroke-linecap="round" stroke="#696969" ed:parentid="159" stroke-linejoin="round"/><path id="344" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,863,1767)" fill="none" ed:tosuperid="343" stroke-linecap="round" stroke="#696969" ed:parentid="159" stroke-linejoin="round"/><path id="346" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,696,1846)" fill="none" ed:tosuperid="345" stroke-linecap="round" stroke="#696969" ed:parentid="161" stroke-linejoin="round"/><path id="348" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" transform="matrix(1,0,0,1,696,1862)" fill="none" ed:tosuperid="347" stroke-linecap="round" stroke="#696969" ed:parentid="161" stroke-linejoin="round"/><path id="350" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,696,1887)" fill="none" ed:tosuperid="349" stroke-linecap="round" stroke="#696969" ed:parentid="161" stroke-linejoin="round"/><path id="352" d="M-13.5,-161.6C5.4,-161.6,-13.5,161.6,13.5,161.6" transform="matrix(1,0,0,1,523,1792)" fill="none" ed:tosuperid="351" stroke-linecap="round" stroke="#696969" ed:parentid="105" stroke-linejoin="round"/><path id="354" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,594,1946)" fill="none" ed:tosuperid="353" stroke-linecap="round" stroke="#696969" ed:parentid="351" stroke-linejoin="round"/><path id="356" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,594,1961)" fill="none" ed:tosuperid="355" stroke-linecap="round" stroke="#696969" ed:parentid="351" stroke-linejoin="round"/><path id="358" d="M-13.5,10.8C-0.2,10.8,-0.4,-10.8,13.5,-10.8" transform="matrix(1,0,0,1,806,2056)" fill="none" ed:tosuperid="357" stroke-linecap="round" stroke="#696969" ed:parentid="165" stroke-linejoin="round"/><path id="360" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,806,2072)" fill="none" ed:tosuperid="359" stroke-linecap="round" stroke="#696969" ed:parentid="165" stroke-linejoin="round"/><path id="362" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,806,2087)" fill="none" ed:tosuperid="361" stroke-linecap="round" stroke="#696969" ed:parentid="165" stroke-linejoin="round"/><path id="364" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" transform="matrix(1,0,0,1,819,2164)" fill="none" ed:tosuperid="363" stroke-linecap="round" stroke="#696969" ed:parentid="167" stroke-linejoin="round"/><path id="368" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,1008,2184)" fill="none" ed:tosuperid="367" stroke-linecap="round" stroke="#696969" ed:parentid="171" stroke-linejoin="round"/><path id="370" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,1064,2234)" fill="none" ed:tosuperid="369" stroke-linecap="round" stroke="#696969" ed:parentid="173" stroke-linejoin="round"/><path id="374" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,835,2277)" fill="none" ed:tosuperid="373" stroke-linecap="round" stroke="#696969" ed:parentid="169" stroke-linejoin="round"/><path id="376" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,835,2293)" fill="none" ed:tosuperid="375" stroke-linecap="round" stroke="#696969" ed:parentid="169" stroke-linejoin="round"/><path id="378" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,770,2339)" fill="none" ed:tosuperid="377" stroke-linecap="round" stroke="#696969" ed:parentid="175" stroke-linejoin="round"/><path id="380" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,770,2355)" fill="none" ed:tosuperid="379" stroke-linecap="round" stroke="#696969" ed:parentid="175" stroke-linejoin="round"/><path id="382" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,832,2394)" fill="none" ed:tosuperid="381" stroke-linecap="round" stroke="#696969" ed:parentid="177" stroke-linejoin="round"/><path id="384" d="M-13.5,10.8C-0.2,10.8,-0.4,-10.8,13.5,-10.8" transform="matrix(1,0,0,1,796,2454)" fill="none" ed:tosuperid="383" stroke-linecap="round" stroke="#696969" ed:parentid="179" stroke-linejoin="round"/><path id="386" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,796,2470)" fill="none" ed:tosuperid="385" stroke-linecap="round" stroke="#696969" ed:parentid="179" stroke-linejoin="round"/><path id="388" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,796,2485)" fill="none" ed:tosuperid="387" stroke-linecap="round" stroke="#696969" ed:parentid="179" stroke-linejoin="round"/><path id="390" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,881,2551)" fill="none" ed:tosuperid="389" stroke-linecap="round" stroke="#696969" ed:parentid="181" stroke-linejoin="round"/><path id="392" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,884,2587)" fill="none" ed:tosuperid="391" stroke-linecap="round" stroke="#696969" ed:parentid="183" stroke-linejoin="round"/><path id="394" d="M-13.5,-158.6C5.4,-158.6,-13.5,158.6,13.5,158.6" transform="matrix(1,0,0,1,651,2478)" fill="none" ed:tosuperid="393" stroke-linecap="round" stroke="#696969" ed:parentid="163" stroke-linejoin="round"/><path id="396" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,795,2694)" fill="none" ed:tosuperid="395" stroke-linecap="round" stroke="#696969" ed:parentid="187" stroke-linejoin="round"/><path id="398" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,805,2815)" fill="none" ed:tosuperid="397" stroke-linecap="round" stroke="#696969" ed:parentid="191" stroke-linejoin="round"/><path id="400" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,1000,2818)" fill="none" ed:tosuperid="399" stroke-linecap="round" stroke="#696969" ed:parentid="201" stroke-linejoin="round"/><path id="402" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,1000,2871)" fill="none" ed:tosuperid="401" stroke-linecap="round" stroke="#696969" ed:parentid="203" stroke-linejoin="round"/><path id="404" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,1000,2887)" fill="none" ed:tosuperid="403" stroke-linecap="round" stroke="#696969" ed:parentid="203" stroke-linejoin="round"/><path id="406" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,977,2930)" fill="none" ed:tosuperid="405" stroke-linecap="round" stroke="#696969" ed:parentid="205" stroke-linejoin="round"/><path id="408" d="M-13.5,26.3C2.9,26.3,-7.7,-26.3,13.5,-26.3" transform="matrix(1,0,0,1,721,3157)" fill="none" ed:tosuperid="407" stroke-linecap="round" stroke="#696969" ed:parentid="409" stroke-linejoin="round"/><path id="410" d="M-13.5,135.6C5.4,135.6,-13.5,-135.6,13.5,-135.6" transform="matrix(1,0,0,1,624,3319)" fill="none" ed:tosuperid="409" stroke-linecap="round" stroke="#696969" ed:parentid="215" stroke-linejoin="round"/><path id="412" d="M-13.5,10.8C-0.2,10.8,-0.4,-10.8,13.5,-10.8" transform="matrix(1,0,0,1,721,3172)" fill="none" ed:tosuperid="411" stroke-linecap="round" stroke="#696969" ed:parentid="409" stroke-linejoin="round"/><path id="414" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,721,3188)" fill="none" ed:tosuperid="413" stroke-linecap="round" stroke="#696969" ed:parentid="409" stroke-linejoin="round"/><path id="416" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,721,3203)" fill="none" ed:tosuperid="415" stroke-linecap="round" stroke="#696969" ed:parentid="409" stroke-linejoin="round"/><path id="418" d="M-13.5,-35.8C4.3,-35.8,-10.9,35.8,13.5,35.8" transform="matrix(1,0,0,1,721,3219)" fill="none" ed:tosuperid="417" stroke-linecap="round" stroke="#696969" ed:parentid="409" stroke-linejoin="round"/><path id="420" d="M-13.5,48.3C5.3,48.3,-13.2,-48.3,13.5,-48.3" transform="matrix(1,0,0,1,1048,3334)" fill="none" ed:tosuperid="419" stroke-linecap="round" stroke="#696969" ed:parentid="219" stroke-linejoin="round"/><path id="422" d="M-13.5,32.8C3.9,32.8,-10,-32.8,13.5,-32.8" transform="matrix(1,0,0,1,1048,3349)" fill="none" ed:tosuperid="421" stroke-linecap="round" stroke="#696969" ed:parentid="219" stroke-linejoin="round"/><path id="424" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,1048,3374)" fill="none" ed:tosuperid="423" stroke-linecap="round" stroke="#696969" ed:parentid="219" stroke-linejoin="round"/><path id="426" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,1048,3399)" fill="none" ed:tosuperid="425" stroke-linecap="round" stroke="#696969" ed:parentid="219" stroke-linejoin="round"/><path id="428" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,1048,3415)" fill="none" ed:tosuperid="427" stroke-linecap="round" stroke="#696969" ed:parentid="219" stroke-linejoin="round"/><path id="430" d="M-13.5,-48.3C5.3,-48.3,-13.2,48.3,13.5,48.3" transform="matrix(1,0,0,1,1048,3430)" fill="none" ed:tosuperid="429" stroke-linecap="round" stroke="#696969" ed:parentid="219" stroke-linejoin="round"/><path id="432" d="M-13.5,45.3C5.1,45.3,-12.9,-45.3,13.5,-45.3" transform="matrix(1,0,0,1,1092,3586)" fill="none" ed:tosuperid="431" stroke-linecap="round" stroke="#696969" ed:parentid="225" stroke-linejoin="round"/><path id="434" d="M-13.5,29.8C3.5,29.8,-9,-29.8,13.5,-29.8" transform="matrix(1,0,0,1,1092,3601)" fill="none" ed:tosuperid="433" stroke-linecap="round" stroke="#696969" ed:parentid="225" stroke-linejoin="round"/><path id="436" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" transform="matrix(1,0,0,1,1092,3626)" fill="none" ed:tosuperid="435" stroke-linecap="round" stroke="#696969" ed:parentid="225" stroke-linejoin="round"/><path id="438" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,1092,3651)" fill="none" ed:tosuperid="437" stroke-linecap="round" stroke="#696969" ed:parentid="225" stroke-linejoin="round"/><path id="440" d="M-13.5,-45.3C5.1,-45.3,-12.9,45.3,13.5,45.3" transform="matrix(1,0,0,1,1092,3676)" fill="none" ed:tosuperid="439" stroke-linecap="round" stroke="#696969" ed:parentid="225" stroke-linejoin="round"/><path id="442" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,1118,3779)" fill="none" ed:tosuperid="441" stroke-linecap="round" stroke="#696969" ed:parentid="227" stroke-linejoin="round"/><path id="444" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,1118,3804)" fill="none" ed:tosuperid="443" stroke-linecap="round" stroke="#696969" ed:parentid="227" stroke-linejoin="round"/><path id="446" d="M-13.5,101.1C5.4,101.1,-13.5,-101.1,13.5,-101.1" transform="matrix(1,0,0,1,555,3999)" fill="none" ed:tosuperid="445" stroke-linecap="round" stroke="#696969" ed:parentid="229" stroke-linejoin="round"/><path id="450" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,726,3945)" fill="none" ed:tosuperid="449" stroke-linecap="round" stroke="#696969" ed:parentid="231" stroke-linejoin="round"/><path id="452" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,726,3960)" fill="none" ed:tosuperid="451" stroke-linecap="round" stroke="#696969" ed:parentid="231" stroke-linejoin="round"/><path id="454" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,726,3976)" fill="none" ed:tosuperid="453" stroke-linecap="round" stroke="#696969" ed:parentid="231" stroke-linejoin="round"/><path id="456" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,929,4035)" fill="none" ed:tosuperid="455" stroke-linecap="round" stroke="#696969" ed:parentid="235" stroke-linejoin="round"/><path id="458" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,929,4060)" fill="none" ed:tosuperid="457" stroke-linecap="round" stroke="#696969" ed:parentid="235" stroke-linejoin="round"/><path id="460" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,903,4103)" fill="none" ed:tosuperid="459" stroke-linecap="round" stroke="#696969" ed:parentid="237" stroke-linejoin="round"/><path id="462" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,916,4156)" fill="none" ed:tosuperid="461" stroke-linecap="round" stroke="#696969" ed:parentid="239" stroke-linejoin="round"/><path id="464" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,916,4172)" fill="none" ed:tosuperid="463" stroke-linecap="round" stroke="#696969" ed:parentid="239" stroke-linejoin="round"/><path id="466" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,882,4229)" fill="none" ed:tosuperid="465" stroke-linecap="round" stroke="#696969" ed:parentid="243" stroke-linejoin="round"/><path id="468" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,922,4265)" fill="none" ed:tosuperid="467" stroke-linecap="round" stroke="#696969" ed:parentid="245" stroke-linejoin="round"/><path id="470" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,965,4296)" fill="none" ed:tosuperid="469" stroke-linecap="round" stroke="#696969" ed:parentid="247" stroke-linejoin="round"/><path id="474" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,726,4313)" fill="none" ed:tosuperid="473" stroke-linecap="round" stroke="#696969" ed:parentid="241" stroke-linejoin="round"/><g id="101" transform="matrix(1,0,0,1,23,2155)" ed:width="251" ed:topictype="mainidea" ed:height="57" ed:layout="rightmap"><path stroke-width="3" d="M4,0L247,0C249.7,0,251,1.3,251,4L251,53C251,55.7,249.7,57,247,57L4,57C1.3,57,0,55.7,0,53L0,4C0,1.3,1.3,0,4,0z" fill="#435fbc" stroke="#435fbc" stroke-linejoin="round"/><text class="st1"><tspan x="21" style="white-space:pre" y="34.5">《JavaScript异步编程》</tspan></text></g><g id="103" transform="matrix(1,0,0,1,337,621)" ed:width="263" ed:parentid="101" ed:height="37"><path d="M4,0L259,0C261.7,0,263,1.3,263,4L263,33C263,35.7,261.7,37,259,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第一章 深入理解JavaScript事件</tspan></text></g><g id="105" transform="matrix(1,0,0,1,337,1612)" ed:width="172" ed:parentid="101" ed:height="37"><path d="M4,0L168,0C170.7,0,172,1.3,172,4L172,33C172,35.7,170.7,37,168,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第二章 分布式事件</tspan></text></g><g id="107" transform="matrix(1,0,0,1,627,77)" ed:width="105" ed:parentid="103" ed:height="24.5"><path d="M0,24.5L105,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.1.事件的调度</tspan></text></g><g id="109" transform="matrix(1,0,0,1,627,336)" ed:width="131" ed:parentid="103" ed:height="24.5"><path d="M0,24.5L131,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.2.异步函数的类型</tspan></text></g><g id="111" transform="matrix(1,0,0,1,627,631)" ed:width="131" ed:parentid="103" ed:height="24.5"><path d="M0,24.5L131,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.3.异步函数的编写</tspan></text></g><g id="113" transform="matrix(1,0,0,1,759,21)" ed:width="152" ed:parentid="107" ed:height="24.5"><path d="M0,24.5L152,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.1.1现在还是将来运行</tspan></text></g><g id="115" transform="matrix(1,0,0,1,759,52)" ed:width="116" ed:parentid="107" ed:height="24.5"><path d="M0,24.5L116,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.1.2.线程的阻塞</tspan></text></g><g id="117" transform="matrix(1,0,0,1,759,83)" ed:width="77" ed:parentid="107" ed:height="24.5"><path d="M0,24.5L77,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.1.3.队列</tspan></text></g><g id="119" transform="matrix(1,0,0,1,785,251)" ed:width="137" ed:parentid="109" ed:height="24.5"><path d="M0,24.5L137,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.2.1.异步的I/O函数</tspan></text></g><g id="121" transform="matrix(1,0,0,1,785,423)" ed:width="142" ed:parentid="109" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.2.2.异步的计时函数</tspan></text></g><g id="125" transform="matrix(1,0,0,1,785,554)" ed:width="168" ed:parentid="111" ed:height="24.5"><path d="M0,24.5L168,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.3.1.何时称函数为异步的</tspan></text></g><g id="127" transform="matrix(1,0,0,1,785,600)" ed:width="142" ed:parentid="111" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.3.2.间或异步的函数</tspan></text></g><g id="129" transform="matrix(1,0,0,1,785,631)" ed:width="142" ed:parentid="111" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.3.3.缓存型异步函数</tspan></text></g><g id="131" transform="matrix(1,0,0,1,785,678)" ed:width="168" ed:parentid="111" ed:height="24.5"><path d="M0,24.5L168,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.3.4.异步递归与回调存储</tspan></text></g><g id="133" transform="matrix(1,0,0,1,785,724)" ed:width="155" ed:parentid="111" ed:height="24.5"><path d="M0,24.5L155,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.3.5.返值与回调的混搭</tspan></text></g><g id="137" transform="matrix(1,0,0,1,627,939)" ed:width="131" ed:parentid="103" ed:height="24.5"><path d="M0,24.5L131,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.4.异步错误的处理</tspan></text></g><g id="139" transform="matrix(1,0,0,1,785,827)" ed:width="155" ed:parentid="137" ed:height="24.5"><path d="M0,24.5L155,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.4.1.回调内抛出的错误</tspan></text></g><g id="141" transform="matrix(1,0,0,1,785,964)" ed:width="155" ed:parentid="137" ed:height="24.5"><path d="M0,24.5L155,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.4.2.未捕获异常的处理</tspan></text></g><g id="143" transform="matrix(1,0,0,1,785,1091)" ed:width="142" ed:parentid="137" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.4.3.抛出还是不抛出</tspan></text></g><g id="145" transform="matrix(1,0,0,1,627,1194)" ed:width="157" ed:parentid="103" ed:height="24.5"><path d="M0,24.5L157,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.5.嵌套式回调的解嵌套</tspan></text></g><g id="147" transform="matrix(1,0,0,1,536,1516)" ed:width="114" ed:parentid="105" ed:height="24.5"><path d="M0,24.5L114,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.1.PubSub模式</tspan></text></g><g id="149" transform="matrix(1,0,0,1,677,1429)" ed:width="155" ed:parentid="147" ed:height="24.5"><path d="M0,24.5L155,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.1.1.EventEmitter对象</tspan></text></g><g id="151" transform="matrix(1,0,0,1,677,1485)" ed:width="164" ed:parentid="147" ed:height="24.5"><path d="M0,24.5L164,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.1.2.玩转自己的PubSub</tspan></text></g><g id="153" transform="matrix(1,0,0,1,677,1572)" ed:width="90" ed:parentid="147" ed:height="24.5"><path d="M0,24.5L90,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.1.3.同步性</tspan></text></g><g id="155" transform="matrix(1,0,0,1,536,1715)" ed:width="105" ed:parentid="105" ed:height="24.5"><path d="M0,24.5L105,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.2.事件化模型</tspan></text></g><g id="157" transform="matrix(1,0,0,1,668,1690)" ed:width="142" ed:parentid="155" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.2.1.模型事件的传播</tspan></text></g><g id="159" transform="matrix(1,0,0,1,668,1746)" ed:width="181" ed:parentid="155" ed:height="24.5"><path d="M0,24.5L181,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.2.2.事件循环与嵌套式变化</tspan></text></g><g id="161" transform="matrix(1,0,0,1,536,1842)" ed:width="146" ed:parentid="105" ed:height="24.5"><path d="M0,24.5L146,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.3.jQuery自定义事件</tspan></text></g><g id="163" transform="matrix(1,0,0,1,337,2301)" ed:width="300" ed:parentid="101" ed:height="37"><path d="M4,0L296,0C298.7,0,300,1.3,300,4L300,33C300,35.7,298.7,37,296,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第三章 Promise对象和Deferred对象</tspan></text></g><g id="165" transform="matrix(1,0,0,1,664,2043)" ed:width="128" ed:parentid="163" ed:height="24.5"><path d="M0,24.5L128,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.1.Promise极简史</tspan></text></g><g id="167" transform="matrix(1,0,0,1,664,2164)" ed:width="141" ed:parentid="163" ed:height="24.5"><path d="M0,24.5L141,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.2.生成Promise对象</tspan></text></g><g id="169" transform="matrix(1,0,0,1,664,2261)" ed:width="157" ed:parentid="163" ed:height="24.5"><path d="M0,24.5L157,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.3.向回调函数传递数据</tspan></text></g><g id="171" transform="matrix(1,0,0,1,832,2155)" ed:width="162" ed:parentid="167" ed:height="24.5"><path d="M0,24.5L162,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.2.1生成纯Promise对象</tspan></text></g><g id="173" transform="matrix(1,0,0,1,832,2205)" ed:width="218" ed:parentid="167" ed:height="24.5"><path d="M0,24.5L218,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.2.2.jQuery API中的Promise对象</tspan></text></g><g id="175" transform="matrix(1,0,0,1,664,2323)" ed:width="92" ed:parentid="163" ed:height="24.5"><path d="M0,24.5L92,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.4.进度通知</tspan></text></g><g id="177" transform="matrix(1,0,0,1,664,2369)" ed:width="154" ed:parentid="163" ed:height="24.5"><path d="M0,24.5L154,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.5.Promise对象的合并</tspan></text></g><g id="179" transform="matrix(1,0,0,1,664,2441)" ed:width="118" ed:parentid="163" ed:height="24.5"><path d="M0,24.5L118,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.6.管道连接未来</tspan></text></g><g id="181" transform="matrix(1,0,0,1,664,2522)" ed:width="203" ed:parentid="163" ed:height="24.5"><path d="M0,24.5L203,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.7.jQuery与Promises/A的对比</tspan></text></g><g id="183" transform="matrix(1,0,0,1,664,2562)" ed:width="206" ed:parentid="163" ed:height="24.5"><path d="M0,24.5L206,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.8.用Promise对象代替回调函数</tspan></text></g><g id="185" transform="matrix(1,0,0,1,337,2843)" ed:width="247" ed:parentid="101" ed:height="37"><path d="M4,0L243,0C245.7,0,247,1.3,247,4L247,33C247,35.7,245.7,37,243,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第四章 Async.js的工作流控制</tspan></text></g><g id="187" transform="matrix(1,0,0,1,611,2670)" ed:width="170" ed:parentid="185" ed:height="24.5"><path d="M0,24.5L170,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.1.异步工作流的次序问题</tspan></text></g><g id="189" transform="matrix(1,0,0,1,611,2716)" ed:width="157" ed:parentid="185" ed:height="24.5"><path d="M0,24.5L157,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.2.异步的数据收集方法</tspan></text></g><g id="191" transform="matrix(1,0,0,1,611,2819)" ed:width="180" ed:parentid="185" ed:height="24.5"><path d="M0,24.5L180,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.3.Async.js的任务组织技术</tspan></text></g><g id="193" transform="matrix(1,0,0,1,611,2952)" ed:width="196" ed:parentid="185" ed:height="24.5"><path d="M0,24.5L196,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.4.异步工作流的动态排队技术</tspan></text></g><g id="195" transform="matrix(1,0,0,1,611,3030)" ed:width="211" ed:parentid="185" ed:height="24.5"><path d="M0,24.5L211,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.5.极简主义者Step的工作流控制</tspan></text></g><g id="197" transform="matrix(1,0,0,1,795,2701)" ed:width="178" ed:parentid="189" ed:height="24.5"><path d="M0,24.5L178,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.2.1.Async.js的函数式写法</tspan></text></g><g id="199" transform="matrix(1,0,0,1,795,2732)" ed:width="191" ed:parentid="189" ed:height="24.5"><path d="M0,24.5L191,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.2.2.Async.js的错误处理技术</tspan></text></g><g id="201" transform="matrix(1,0,0,1,818,2794)" ed:width="168" ed:parentid="191" ed:height="24.5"><path d="M0,24.5L168,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.3.1.异步函数序列的运行</tspan></text></g><g id="203" transform="matrix(1,0,0,1,818,2850)" ed:width="168" ed:parentid="191" ed:height="24.5"><path d="M0,24.5L168,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.3.2.异步函数的并行运行</tspan></text></g><g id="205" transform="matrix(1,0,0,1,834,2906)" ed:width="129" ed:parentid="193" ed:height="24.5"><path d="M0,24.5L129,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.4.1.深入理解队列</tspan></text></g><g id="207" transform="matrix(1,0,0,1,834,2937)" ed:width="116" ed:parentid="193" ed:height="24.5"><path d="M0,24.5L116,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.4.2.任务的入列</tspan></text></g><g id="209" transform="matrix(1,0,0,1,834,2968)" ed:width="142" ed:parentid="193" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.4.3.完工事件的处理</tspan></text></g><g id="211" transform="matrix(1,0,0,1,834,2999)" ed:width="168" ed:parentid="193" ed:height="24.5"><path d="M0,24.5L168,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.4.4.队列的高级回调方法</tspan></text></g><g id="215" transform="matrix(1,0,0,1,337,3436)" ed:width="273" ed:parentid="101" ed:height="37"><path d="M4,0L269,0C271.7,0,273,1.3,273,4L273,33C273,35.7,271.7,37,269,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第五章 worker对象的多线程技术</tspan></text></g><g id="217" transform="matrix(1,0,0,1,637,3373)" ed:width="160" ed:parentid="215" ed:height="24.5"><path d="M0,24.5L160,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.1.网页版的worker对象</tspan></text></g><g id="219" transform="matrix(1,0,0,1,824,3358)" ed:width="210" ed:parentid="217" ed:height="24.5"><path d="M0,24.5L210,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.1.1.网页版worker对象的局限性</tspan></text></g><g id="221" transform="matrix(1,0,0,1,824,3485)" ed:width="210" ed:parentid="217" ed:height="24.5"><path d="M0,24.5L210,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.1.2.支持网页版worker的浏览器</tspan></text></g><g id="223" transform="matrix(1,0,0,1,637,3657)" ed:width="209" ed:parentid="215" ed:height="24.5"><path d="M0,24.5L209,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.2.cluster带来的Node版worker</tspan></text></g><g id="225" transform="matrix(1,0,0,1,873,3607)" ed:width="205" ed:parentid="223" ed:height="24.5"><path d="M0,24.5L205,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.2.1.Node版worker的交互接口</tspan></text></g><g id="227" transform="matrix(1,0,0,1,873,3763)" ed:width="231" ed:parentid="223" ed:height="24.5"><path d="M0,24.5L231,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.2.2.Node版的worker对象的局限性</tspan></text></g><g id="229" transform="matrix(1,0,0,1,337,4082)" ed:width="204" ed:parentid="101" ed:height="37"><path d="M4,0L200,0C202.7,0,204,1.3,204,4L204,33C204,35.7,202.7,37,200,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第六章 异步的脚本加载</tspan></text></g><g id="231" transform="matrix(1,0,0,1,568,3936)" ed:width="144" ed:parentid="229" ed:height="24.5"><path d="M0,24.5L144,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.1.局限性与补充说明</tspan></text></g><g id="233" transform="matrix(1,0,0,1,568,4079)" ed:width="152" ed:parentid="229" ed:height="24.5"><path d="M0,24.5L152,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.2.script标签的再认识</tspan></text></g><g id="235" transform="matrix(1,0,0,1,747,4023)" ed:width="168" ed:parentid="233" ed:height="24.5"><path d="M0,24.5L168,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.2.1.阻塞型脚本何去何从</tspan></text></g><g id="237" transform="matrix(1,0,0,1,747,4079)" ed:width="142" ed:parentid="233" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.2.2.脚本的延迟运行</tspan></text></g><g id="239" transform="matrix(1,0,0,1,747,4135)" ed:width="155" ed:parentid="233" ed:height="24.5"><path d="M0,24.5L155,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.2.3.脚本的完全并行化</tspan></text></g><g id="241" transform="matrix(1,0,0,1,568,4256)" ed:width="144" ed:parentid="229" ed:height="24.5"><path d="M0,24.5L144,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.3.可编程的脚本加载</tspan></text></g><g id="243" transform="matrix(1,0,0,1,739,4200)" ed:width="129" ed:parentid="241" ed:height="24.5"><path d="M0,24.5L129,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.3.1.直接加载脚本</tspan></text></g><g id="245" transform="matrix(1,0,0,1,739,4241)" ed:width="169" ed:parentid="241" ed:height="24.5"><path d="M0,24.5L169,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.3.2.yepnope的条件加载</tspan></text></g><g id="247" transform="matrix(1,0,0,1,739,4272)" ed:width="212" ed:parentid="241" ed:height="24.5"><path d="M0,24.5L212,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.3.3.Require.js/AMD的智能加载</tspan></text></g><g id="249" transform="matrix(1,0,0,1,759,114)" ed:width="514" ed:parentid="107" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript代码用于不会被中断，因为代码在运行期间只需要排队事件即可，而这些事</tspan><tspan x="8" style="white-space:pre" y="35.1">件在代码运行结束之前不会被触发</tspan></text></g><g id="251" transform="matrix(1,0,0,1,785,164)" ed:width="275" ed:parentid="109" ed:height="24.5"><path d="M0,24.5L275,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">每一种JavaScript环境都有自己的异步函数集</tspan></text></g><g id="253" transform="matrix(1,0,0,1,949,195)" ed:width="341" ed:parentid="119" ed:height="24.5"><path d="M0,24.5L341,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在浏览器端，Ajax方法有一个可设置为false的async选项</tspan></text></g><g id="255" transform="matrix(1,0,0,1,949,226)" ed:width="423" ed:parentid="119" ed:height="24.5"><path d="M0,24.5L423,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在Node.js中同步的API方法在名称上会有明确的标示如fs.readFileSync</tspan></text></g><g id="259" transform="matrix(1,0,0,1,949,257)" ed:width="514" ed:parentid="119" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">WebKit的console.log打印输出并没有立即拍摄对象快照，只存储了一个指向对象的引</tspan><tspan x="8" style="white-space:pre" y="35.1">用，等代码返回事件队列才去打印输出快照</tspan></text></g><g id="261" transform="matrix(1,0,0,1,949,307)" ed:width="212" ed:parentid="119" ed:height="24.5"><path d="M0,24.5L212,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Node的console.log是严格同步的</tspan></text></g><g id="263" transform="matrix(1,0,0,1,954,338)" ed:width="514" ed:parentid="121" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">当同一个JavaScript进程正运行着代码时，任何JavaScript计时函数都无法使其他代码</tspan><tspan x="8" style="white-space:pre" y="35.1">运行</tspan></text></g><g id="265" transform="matrix(1,0,0,1,954,388)" ed:width="514" ed:parentid="121" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">setInterval调度事件设置成0，chrome等浏览器触发频率大约为200次/秒，node大约</tspan><tspan x="8" style="white-space:pre" y="35.1">是1000次/秒</tspan></text></g><g id="267" transform="matrix(1,0,0,1,954,438)" ed:width="514" ed:parentid="121" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">替换成while循环时在Chrome中触发频率达到400万次/秒，在node中会达到500万次/</tspan><tspan x="8" style="white-space:pre" y="35.1">秒</tspan></text></g><g id="269" transform="matrix(1,0,0,1,954,488)" ed:width="514" ed:parentid="121" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">所以需要更细粒度的计时，在node中使用process.nextTick，在现代浏览器中使用</tspan><tspan x="8" style="white-space:pre" y="35.1">requestAnimationFrame(主意兼容性)</tspan></text></g><g id="271" transform="matrix(1,0,0,1,980,538)" ed:width="239" ed:parentid="125" ed:height="24.5"><path d="M0,24.5L239,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">这个函数会导致将来再运行另一个函数</tspan></text></g><g id="273" transform="matrix(1,0,0,1,980,569)" ed:width="356" ed:parentid="125" ed:height="24.5"><path d="M0,24.5L356,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">要想确认某个函数异步与否，唯一的方法就是审查其源代码</tspan></text></g><g id="275" transform="matrix(1,0,0,1,954,600)" ed:width="291" ed:parentid="127" ed:height="24.5"><path d="M0,24.5L291,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">有些函数某些时候是异步的，但其他时候却不是</tspan></text></g><g id="277" transform="matrix(1,0,0,1,954,631)" ed:width="187" ed:parentid="129" ed:height="24.5"><path d="M0,24.5L187,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可缓存结果的异步请求类函数</tspan></text></g><g id="279" transform="matrix(1,0,0,1,980,662)" ed:width="239" ed:parentid="131" ed:height="24.5"><path d="M0,24.5L239,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">大量延时的话，会造成巨大的计算荷载</tspan></text></g><g id="281" transform="matrix(1,0,0,1,980,693)" ed:width="473" ed:parentid="131" ed:height="24.5"><path d="M0,24.5L473,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">异步递归有一点很害怕，即在等待任务完成期间，可触发延时的次数是不受限的</tspan></text></g><g id="283" transform="matrix(1,0,0,1,967,724)" ed:width="356" ed:parentid="133" ed:height="24.5"><path d="M0,24.5L356,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">永远不要定义一个潜在同步而返值却有可能用于回调的函数</tspan></text></g><g id="285" transform="matrix(1,0,0,1,785,755)" ed:width="384" ed:parentid="137" ed:height="24.5"><path d="M0,24.5L384,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript也允许抛出异常，随后再用一个try/catch语句块捕获</tspan></text></g><g id="287" transform="matrix(1,0,0,1,967,786)" ed:width="348" ed:parentid="139" ed:height="24.5"><path d="M0,24.5L348,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">利用try/catch语句块并不能捕获从异步回调中抛出的错误</tspan></text></g><g id="289" transform="matrix(1,0,0,1,967,817)" ed:width="514" ed:parentid="139" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">正因如此，Node.js中的回调几乎总是接受一个错误作为其首个参数，这样就允许回调</tspan><tspan x="8" style="white-space:pre" y="35.1">自己来决定如何处理这个错误</tspan></text></g><g id="291" transform="matrix(1,0,0,1,967,867)" ed:width="317" ed:parentid="139" ed:height="24.5"><path d="M0,24.5L317,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">始终记住，只能在回调内部处理源于回调的异步错误</tspan></text></g><g id="293" transform="matrix(1,0,0,1,967,898)" ed:width="514" ed:parentid="141" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在浏览器环境中，windows.onerror可以捕获异常，如果返回true，则能阻止浏览器默</tspan><tspan x="8" style="white-space:pre" y="35.1">认的错误处理行为</tspan></text></g><g id="295" transform="matrix(1,0,0,1,967,948)" ed:width="514" ed:parentid="141" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在node中，类似的process对象的uncaughtException事件捕获错误，正常情况下，</tspan><tspan x="8" style="white-space:pre" y="35.1">node应用会因未捕获的异常而立即退出</tspan></text></g><g id="297" transform="matrix(1,0,0,1,967,998)" ed:width="344" ed:parentid="141" ed:height="24.5"><path d="M0,24.5L344,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">但自Node0.8.4起，uncaughtException事件就被废弃了</tspan></text></g><g id="299" transform="matrix(1,0,0,1,967,1029)" ed:width="338" ed:parentid="141" ed:height="24.5"><path d="M0,24.5L338,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">domain对象是事件化对象，它将throw转化为error事件</tspan></text></g><g id="301" transform="matrix(1,0,0,1,954,1060)" ed:width="415" ed:parentid="143" ed:height="24.5"><path d="M0,24.5L415,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">回调中德throw相当于JavaScript写手在说“现在我还不想考虑这个”</tspan></text></g><g id="303" transform="matrix(1,0,0,1,954,1091)" ed:width="273" ed:parentid="143" ed:height="24.5"><path d="M0,24.5L273,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">try/catch只是包装这漂亮花括号的goto语句</tspan></text></g><g id="305" transform="matrix(1,0,0,1,954,1122)" ed:width="458" ed:parentid="143" ed:height="24.5"><path d="M0,24.5L458,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">schueter提倡完全将throw用作断言似的构造结构，作为一种挂起应用的方式</tspan></text></g><g id="307" transform="matrix(1,0,0,1,811,1153)" ed:width="278" ed:parentid="145" ed:height="24.5"><path d="M0,24.5L278,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">最常见的反模式做法是，回调内部再嵌套回调</tspan></text></g><g id="309" transform="matrix(1,0,0,1,811,1184)" ed:width="514" ed:parentid="145" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">嵌套式回调诱惑我们通过添加更多代码来添加更多特性，而不是将这些特性实现为可管</tspan><tspan x="8" style="white-space:pre" y="35.1">理、可重用的代码片段</tspan></text></g><g id="311" transform="matrix(1,0,0,1,811,1234)" ed:width="239" ed:parentid="145" ed:height="24.5"><path d="M0,24.5L239,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">按照惯例，请避免两层以上的函数嵌套</tspan></text></g><g id="313" transform="matrix(1,0,0,1,536,1332)" ed:width="70" ed:parentid="105" ed:height="24.5"><path d="M0,24.5L70,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">写在前面</tspan></text></g><g id="315" transform="matrix(1,0,0,1,633,1292)" ed:width="460" ed:parentid="313" ed:height="24.5"><path d="M0,24.5L460,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">希望使用分布式事件：事件的蝴蝶偶然扇动下翅膀，整个应用到处都引发反应</tspan></text></g><g id="317" transform="matrix(1,0,0,1,633,1323)" ed:width="254" ed:parentid="313" ed:height="24.5"><path d="M0,24.5L254,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">PubSub意为发布/订阅，模式来分发事件</tspan></text></g><g id="319" transform="matrix(1,0,0,1,633,1354)" ed:width="514" ed:parentid="313" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">PubSub模式的一些具体表现：Node的EventEmitter对象，Backbone的事件化模型，</tspan><tspan x="8" style="white-space:pre" y="35.1">JQuery的自定义事件</tspan></text></g><g id="321" transform="matrix(1,0,0,1,859,1404)" ed:width="514" ed:parentid="149" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Node中几乎所有的I/O都是EventEmitter对象：文件流、HTTP服务器，甚至是应用进</tspan><tspan x="8" style="white-space:pre" y="35.1">程本身</tspan></text></g><g id="323" transform="matrix(1,0,0,1,859,1454)" ed:width="187" ed:parentid="149" ed:height="24.5"><path d="M0,24.5L187,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">有着简单而近乎最简化的设计</tspan></text></g><g id="325" transform="matrix(1,0,0,1,868,1485)" ed:width="460" ed:parentid="151" ed:height="24.5"><path d="M0,24.5L460,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">对于支持的每一种事件类型，唯一需要储存的状态值就是一个事件处理器清单</tspan></text></g><g id="329" transform="matrix(1,0,0,1,794,1516)" ed:width="421" ed:parentid="153" ed:height="24.5"><path d="M0,24.5L421,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">事件处理器本身无法知道自己是从事件队列中还是从应用代码中运行的</tspan></text></g><g id="331" transform="matrix(1,0,0,1,794,1547)" ed:width="343" ed:parentid="153" ed:height="24.5"><path d="M0,24.5L343,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如果事件处理器本身触发了事件，还很容易造成无限循环</tspan></text></g><g id="333" transform="matrix(1,0,0,1,794,1578)" ed:width="514" ed:parentid="153" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">对于无需即刻发生的事情维持一个队列，并使用一个计时函数定时运行此队列中的下一</tspan><tspan x="8" style="white-space:pre" y="35.1">项任务</tspan></text></g><g id="335" transform="matrix(1,0,0,1,794,1628)" ed:width="248" ed:parentid="153" ed:height="24.5"><path d="M0,24.5L248,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">PubSub简化了事件的命名、分发、堆积</tspan></text></g><g id="337" transform="matrix(1,0,0,1,668,1659)" ed:width="326" ed:parentid="155" ed:height="24.5"><path d="M0,24.5L326,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">只要对象带有PubSub接口，就可以称之为事件化对象</tspan></text></g><g id="339" transform="matrix(1,0,0,1,837,1690)" ed:width="426" ed:parentid="157" ed:height="24.5"><path d="M0,24.5L426,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">新式的JavaScript先改变模型，接着由模型触发事件而导致DOM的更新</tspan></text></g><g id="341" transform="matrix(1,0,0,1,876,1771)" ed:width="408" ed:parentid="159" ed:height="24.5"><path d="M0,24.5L408,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">事件化模型为我们带来了一种将应用状态变化转换为事件的直观方式</tspan></text></g><g id="343" transform="matrix(1,0,0,1,876,1721)" ed:width="514" ed:parentid="159" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">每次一个对象上的事件引发了一系列事件并最终对这个对象本身触发了相同的事件，结</tspan><tspan x="8" style="white-space:pre" y="35.1">果就事件循环了</tspan></text></g><g id="345" transform="matrix(1,0,0,1,709,1802)" ed:width="373" ed:parentid="161" ed:height="24.5"><path d="M0,24.5L373,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">jQuery简化了强大分布式事件系统向任何Web应用程序的移植</tspan></text></g><g id="347" transform="matrix(1,0,0,1,709,1833)" ed:width="278" ed:parentid="161" ed:height="24.5"><path d="M0,24.5L278,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">jQuery提供了非冒泡式的triggerHandler方法</tspan></text></g><g id="349" transform="matrix(1,0,0,1,709,1864)" ed:width="514" ed:parentid="161" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">jQuery的自定义事件允许直接通过DOM来表达DOM相关的事件，不必再把DOM变化</tspan><tspan x="8" style="white-space:pre" y="35.1">的状态复制到应用程序的其他地方</tspan></text></g><g id="351" transform="matrix(1,0,0,1,536,1929)" ed:width="44" ed:parentid="105" ed:height="24.5"><path d="M0,24.5L44,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">小结</tspan></text></g><g id="353" transform="matrix(1,0,0,1,607,1914)" ed:width="222" ed:parentid="351" ed:height="24.5"><path d="M0,24.5L222,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">PubSub模式尤其不适合一次性事件</tspan></text></g><g id="355" transform="matrix(1,0,0,1,607,1945)" ed:width="275" ed:parentid="351" ed:height="24.5"><path d="M0,24.5L275,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">用于解决一次性事件问题的工具叫做Promise</tspan></text></g><g id="357" transform="matrix(1,0,0,1,819,2002)" ed:width="514" ed:parentid="165" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Promise对象也和EventEmitter对象一样，允许向同一个事件绑定任意多个处理器(堆积</tspan><tspan x="8" style="white-space:pre" y="35.1">技术)</tspan></text></g><g id="359" transform="matrix(1,0,0,1,819,2052)" ed:width="503" ed:parentid="165" ed:height="24.5"><path d="M0,24.5L503,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">使用Promise对象的最大优势在于，可以轻松从现有Promise对象派生出新的Promise</tspan></text></g><g id="361" transform="matrix(1,0,0,1,819,2083)" ed:width="447" ed:parentid="165" ed:height="24.5"><path d="M0,24.5L447,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在一般性用法中，Promise、Deferred和Future这三个词大体可算作同义词</tspan></text></g><g id="363" transform="matrix(1,0,0,1,832,2114)" ed:width="508" ed:parentid="167" ed:height="24.5"><path d="M0,24.5L508,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">准确的说，Deffered是Promise的超集，它比Promise多一项关键特性，可以直接触发</tspan></text></g><g id="367" transform="matrix(1,0,0,1,1021,2145)" ed:width="514" ed:parentid="171" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">重申一点：每个Deferred对象都含有一个Promise对象，而每一个Promise对象都代表</tspan><tspan x="8" style="white-space:pre" y="35.1">者一个Deferred对象</tspan></text></g><g id="369" transform="matrix(1,0,0,1,1077,2195)" ed:width="514" ed:parentid="173" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Ajax是演示Promise的绝佳用例：每次对远程服务器额调用都或成功或失败，而我们希</tspan><tspan x="8" style="white-space:pre" y="35.1">望以不同的方式来处理这两种情况</tspan></text></g><g id="373" transform="matrix(1,0,0,1,848,2245)" ed:width="410" ed:parentid="169" ed:height="24.5"><path d="M0,24.5L410,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">执行或拒绝Deferred对象时，提供的任何参数都会转发至相应的回调</tspan></text></g><g id="375" transform="matrix(1,0,0,1,848,2276)" ed:width="361" ed:parentid="169" ed:height="24.5"><path d="M0,24.5L361,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">resolve/reject可以直接将其上下文传递至自己所触发的回调</tspan></text></g><g id="377" transform="matrix(1,0,0,1,783,2307)" ed:width="427" ed:parentid="175" ed:height="24.5"><path d="M0,24.5L427,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">jQuery1.7中为Promise对象新添了一种可以调用无数次的回调progress</tspan></text></g><g id="379" transform="matrix(1,0,0,1,783,2338)" ed:width="385" ed:parentid="175" ed:height="24.5"><path d="M0,24.5L385,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">总结下，Promise对象接受3种回调形式：done、fail、progress</tspan></text></g><g id="381" transform="matrix(1,0,0,1,845,2369)" ed:width="470" ed:parentid="177" ed:height="24.5"><path d="M0,24.5L470,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Promise对象的逻辑合并技术有一个最常见的用例：判定一组异步任务何时完成</tspan></text></g><g id="383" transform="matrix(1,0,0,1,809,2400)" ed:width="514" ed:parentid="179" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript中常常无法便捷的执行一系列异步任务，一个主要原因是无法在第一个任务</tspan><tspan x="8" style="white-space:pre" y="35.1">结束之前就向第二个任务附加处理器</tspan></text></g><g id="385" transform="matrix(1,0,0,1,809,2450)" ed:width="278" ed:parentid="179" ed:height="24.5"><path d="M0,24.5L278,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">jQuery1.6为Promise对象新增pipe(管道)方法</tspan></text></g><g id="387" transform="matrix(1,0,0,1,809,2481)" ed:width="214" ed:parentid="179" ed:height="24.5"><path d="M0,24.5L214,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">promise.promise() === promise</tspan></text></g><g id="389" transform="matrix(1,0,0,1,894,2512)" ed:width="514" ed:parentid="181" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">jQuery使用resolve作为fail的反义词，而Promise/A使用的是fulfill。在Promise/A规范</tspan><tspan x="8" style="white-space:pre" y="35.1">中，Promise对象不管是已履行还是已失败，都是以执行</tspan></text></g><g id="391" transform="matrix(1,0,0,1,897,2562)" ed:width="405" ed:parentid="183" ed:height="24.5"><path d="M0,24.5L405,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">理想情况下，开始执行异步任务的任何函数都应该返回Promise对象</tspan></text></g><g id="393" transform="matrix(1,0,0,1,664,2593)" ed:width="514" ed:parentid="163" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Promise大大有助于让意大利面式的回调趋于平滑，而且也是因为Promise可以非常轻</tspan><tspan x="8" style="white-space:pre" y="35.1">松的协调这种类型的异步任务</tspan></text></g><g id="395" transform="matrix(1,0,0,1,808,2670)" ed:width="395" ed:parentid="187" ed:height="24.5"><path d="M0,24.5L395,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">普通的异步代码根本无法保证按照做出调用次序来触发调用的回调</tspan></text></g><g id="397" transform="matrix(1,0,0,1,818,2763)" ed:width="444" ed:parentid="191" ed:height="24.5"><path d="M0,24.5L444,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Async.js的数据收集方法解决了一个异步函数如何运用于一个数据集的问题</tspan></text></g><g id="399" transform="matrix(1,0,0,1,1013,2794)" ed:width="193" ed:parentid="201" ed:height="24.5"><path d="M0,24.5L193,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">async.series和async.waterfall</tspan></text></g><g id="401" transform="matrix(1,0,0,1,1013,2825)" ed:width="514" ed:parentid="203" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">便利的是Async.js按照任务列表的次序向完工事件处理器传递结果，而不是按照生成这</tspan><tspan x="8" style="white-space:pre" y="35.1">些结果的次序</tspan></text></g><g id="403" transform="matrix(1,0,0,1,1013,2875)" ed:width="431" ed:parentid="203" ed:height="24.5"><path d="M0,24.5L431,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Async.js的内核与灵魂：为最常见的异步情景提供简单又省时的工具函数</tspan></text></g><g id="405" transform="matrix(1,0,0,1,990,2906)" ed:width="347" ed:parentid="205" ed:height="24.5"><path d="M0,24.5L347,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">async.queue的底层基本理念令人想起DMV动态管理视图</tspan></text></g><g id="407" transform="matrix(1,0,0,1,734,3087)" ed:width="514" ed:parentid="409" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">事件能够代替一种特殊的多线程，即应用程序进程可拆分成多个部分同时运行的多线程</tspan><tspan x="8" style="white-space:pre" y="35.1">技术（或者通过中断技术虚拟实现，或者通过多个CPU内核真正实现）</tspan></text></g><g id="409" transform="matrix(1,0,0,1,637,3159)" ed:width="70" ed:parentid="215" ed:height="24.5"><path d="M0,24.5L70,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">写在前面</tspan></text></g><g id="411" transform="matrix(1,0,0,1,734,3137)" ed:width="499" ed:parentid="409" ed:height="24.5"><path d="M0,24.5L499,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">尽管只运行在一个线程上确实不理想，但天真的将应用直接分发给多个内核更加糟糕</tspan></text></g><g id="413" transform="matrix(1,0,0,1,734,3168)" ed:width="400" ed:parentid="409" ed:height="24.5"><path d="M0,24.5L400,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">与不同线程进行交互的方式与在JavaScript中进行I/O操作一模一样</tspan></text></g><g id="415" transform="matrix(1,0,0,1,734,3199)" ed:width="447" ed:parentid="409" ed:height="24.5"><path d="M0,24.5L447,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">同一个进程内的多个线程之间可以分享状态，而彼此独立的进程之间则不能</tspan></text></g><g id="417" transform="matrix(1,0,0,1,734,3230)" ed:width="421" ed:parentid="409" ed:height="24.5"><path d="M0,24.5L421,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在JavaScript环境中，由worker对象运行的并发代码从来不会分享状态</tspan></text></g><g id="419" transform="matrix(1,0,0,1,1061,3261)" ed:width="364" ed:parentid="219" ed:height="24.5"><path d="M0,24.5L364,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">首要目标，在不损害DOM响应能力的前提下处理复杂的计算</tspan></text></g><g id="421" transform="matrix(1,0,0,1,1061,3292)" ed:width="343" ed:parentid="219" ed:height="24.5"><path d="M0,24.5L343,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">几种潜在用法：解码视频、加密通信、解析网页式编辑器</tspan></text></g><g id="423" transform="matrix(1,0,0,1,1061,3323)" ed:width="514" ed:parentid="219" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">基于类似的理由，worker对象看不到全局的window对象和主线程及其他worker线程的</tspan><tspan x="8" style="white-space:pre" y="35.1">任何对象</tspan></text></g><g id="425" transform="matrix(1,0,0,1,1061,3373)" ed:width="514" ed:parentid="219" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">通过postMessage发送的对象会透明的做序列化和反序列化，想想JSON.parse与</tspan><tspan x="8" style="white-space:pre" y="35.1">JSON.stringify</tspan></text></g><g id="427" transform="matrix(1,0,0,1,1061,3423)" ed:width="269" ed:parentid="219" ed:height="24.5"><path d="M0,24.5L269,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">worker对象可以随意使用XMLHttpRequest</tspan></text></g><g id="429" transform="matrix(1,0,0,1,1061,3454)" ed:width="361" ed:parentid="219" ed:height="24.5"><path d="M0,24.5L361,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">还有一个importScripts函数可以同步加载并运行指定的脚本</tspan></text></g><g id="431" transform="matrix(1,0,0,1,1105,3516)" ed:width="432" ed:parentid="225" ed:height="24.5"><path d="M0,24.5L432,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">node0.6后推出一个支持多个进程绑定同一个端口的API:cluster（群集）</tspan></text></g><g id="433" transform="matrix(1,0,0,1,1105,3547)" ed:width="398" ed:parentid="225" ed:height="24.5"><path d="M0,24.5L398,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">通常为追求最佳性能而使用cluster按每颗CPU内核分化出一个进程</tspan></text></g><g id="435" transform="matrix(1,0,0,1,1105,3578)" ed:width="514" ed:parentid="225" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Node版worker对象由cluster.fork()把运行自己的同一个脚本再次加载成一个独立的进</tspan><tspan x="8" style="white-space:pre" y="35.1">程</tspan></text></g><g id="437" transform="matrix(1,0,0,1,1105,3628)" ed:width="514" ed:parentid="225" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">浏览器可以将任意多余的线程降格为后台任务，而node服务器则要留出计算资源保障</tspan><tspan x="8" style="white-space:pre" y="35.1">其请求处理的主要任务</tspan></text></g><g id="439" transform="matrix(1,0,0,1,1105,3678)" ed:width="514" ed:parentid="225" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">最著名的魔法：多个worker对象试图监听一个TCP端口时，node利用内部消息来允许</tspan><tspan x="8" style="white-space:pre" y="35.1">分享该端口</tspan></text></g><g id="441" transform="matrix(1,0,0,1,1131,3728)" ed:width="514" ed:parentid="227" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">同样，cluster对象有一个主线程和多个worker线程，之间基于一些带有序列化对象或</tspan><tspan x="8" style="white-space:pre" y="35.1">附连字符串的事件</tspan></text></g><g id="443" transform="matrix(1,0,0,1,1131,3778)" ed:width="514" ed:parentid="227" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">为了尽可能减少线程之间的通信开销，线程间分享的状态应该存储在像Redis这样的外</tspan><tspan x="8" style="white-space:pre" y="35.1">部数据库中</tspan></text></g><g id="445" transform="matrix(1,0,0,1,568,3855)" ed:width="514" ed:parentid="229" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">需要对脚本分而治之，那些负责让页面更好看、更好用的脚本应该立即加载，而那些可</tspan><tspan x="8" style="white-space:pre" y="35.1">以待会再加载的脚本稍后加载</tspan></text></g><g id="449" transform="matrix(1,0,0,1,739,3905)" ed:width="161" ed:parentid="231" ed:height="24.5"><path d="M0,24.5L161,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">请尽量避免使用内联技术</tspan></text></g><g id="451" transform="matrix(1,0,0,1,739,3936)" ed:width="166" ed:parentid="231" ed:height="24.5"><path d="M0,24.5L166,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">请勿使用document.write</tspan></text></g><g id="453" transform="matrix(1,0,0,1,739,3967)" ed:width="395" ed:parentid="231" ed:height="24.5"><path d="M0,24.5L395,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">只要知道document.write相当于操控DOM时的GOTO语句就行了</tspan></text></g><g id="455" transform="matrix(1,0,0,1,942,3998)" ed:width="390" ed:parentid="235" ed:height="24.5"><path d="M0,24.5L390,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">现代浏览器中的script标签分成了两种新类型：经典型和非阻塞型</tspan></text></g><g id="457" transform="matrix(1,0,0,1,942,4029)" ed:width="514" ed:parentid="235" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">流行将脚本放在页面body标签的尾部。一方面用户可以更快的看到页面，另一方面可</tspan><tspan x="8" style="white-space:pre" y="35.1">以主动亲密接触DOM而无需等待事件来触发自己</tspan></text></g><g id="459" transform="matrix(1,0,0,1,916,4079)" ed:width="468" ed:parentid="237" ed:height="24.5"><path d="M0,24.5L468,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">既能让用户更快的看到网页，又能避免操控DOM之前绑定“就绪”事件的开销</tspan></text></g><g id="461" transform="matrix(1,0,0,1,929,4110)" ed:width="514" ed:parentid="239" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">defer让我们想到静静等待文档加载的有序排队场景，那么async就会让我们想到混乱的</tspan><tspan x="8" style="white-space:pre" y="35.1">无政府状态</tspan></text></g><g id="463" transform="matrix(1,0,0,1,929,4160)" ed:width="490" ed:parentid="239" ed:height="24.5"><path d="M0,24.5L490,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一个脚本即用defer又用async，则在那些同时支持的浏览器中，async会覆盖defer</tspan></text></g><g id="465" transform="matrix(1,0,0,1,895,4191)" ed:width="514" ed:parentid="243" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">两种合理的方法来抓取并运行服务器脚本：生成Ajax请求并用eval函数处理响应；向</tspan><tspan x="8" style="white-space:pre" y="35.1">DOM插入script标签</tspan></text></g><g id="467" transform="matrix(1,0,0,1,935,4241)" ed:width="304" ed:parentid="245" ed:height="24.5"><path d="M0,24.5L304,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">设计目标是真诚服务于最常见的动态脚本加载需求</tspan></text></g><g id="469" transform="matrix(1,0,0,1,978,4272)" ed:width="469" ed:parentid="247" ed:height="24.5"><path d="M0,24.5L469,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">require.js强大的工具包能够自动和AMD技术一起捋顺哪怕最复杂的脚本依赖图</tspan></text></g><g id="473" transform="matrix(1,0,0,1,739,4303)" ed:width="514" ed:parentid="241" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如果要求根据条件来加载脚本，请考虑像yepnope这样的脚本加载器。如果站点大量相</tspan><tspan x="8" style="white-space:pre" y="35.1">互依赖的脚本，请考虑require.js</tspan></text></g><symbol id="plus"><path d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6z" fill="url(#lg1)"/><path stroke-width="0.7" d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6zM3,6L9,6M6,3L6,9" fill="none" stroke="#46a000"/></symbol><symbol id="minus"><path d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6z" fill="url(#lg1)"/><path stroke-width="0.7" d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6zM3,6L9,6" fill="none" stroke="#46a000"/></symbol><g transform="translate(275,2178)" ed:togtopicid="101"><use xlink:href="#minus"/></g><g transform="translate(601,634)" ed:togtopicid="103"><use xlink:href="#minus"/></g><g transform="translate(510,1624)" ed:togtopicid="105"><use xlink:href="#minus"/></g><g transform="translate(733,83)" ed:togtopicid="107"><use xlink:href="#minus"/></g><g transform="translate(759,342)" ed:togtopicid="109"><use xlink:href="#minus"/></g><g transform="translate(759,637)" ed:togtopicid="111"><use xlink:href="#minus"/></g><g transform="translate(923,257)" ed:togtopicid="119"><use xlink:href="#minus"/></g><g transform="translate(928,429)" ed:togtopicid="121"><use xlink:href="#minus"/></g><g transform="translate(954,560)" ed:togtopicid="125"><use xlink:href="#minus"/></g><g transform="translate(928,606)" ed:togtopicid="127"><use xlink:href="#minus"/></g><g transform="translate(928,637)" ed:togtopicid="129"><use xlink:href="#minus"/></g><g transform="translate(954,684)" ed:togtopicid="131"><use xlink:href="#minus"/></g><g transform="translate(941,730)" ed:togtopicid="133"><use xlink:href="#minus"/></g><g transform="translate(759,945)" ed:togtopicid="137"><use xlink:href="#minus"/></g><g transform="translate(941,833)" ed:togtopicid="139"><use xlink:href="#minus"/></g><g transform="translate(941,970)" ed:togtopicid="141"><use xlink:href="#minus"/></g><g transform="translate(928,1097)" ed:togtopicid="143"><use xlink:href="#minus"/></g><g transform="translate(785,1200)" ed:togtopicid="145"><use xlink:href="#minus"/></g><g transform="translate(651,1522)" ed:togtopicid="147"><use xlink:href="#minus"/></g><g transform="translate(833,1435)" ed:togtopicid="149"><use xlink:href="#minus"/></g><g transform="translate(842,1491)" ed:togtopicid="151"><use xlink:href="#minus"/></g><g transform="translate(768,1578)" ed:togtopicid="153"><use xlink:href="#minus"/></g><g transform="translate(642,1721)" ed:togtopicid="155"><use xlink:href="#minus"/></g><g transform="translate(811,1696)" ed:togtopicid="157"><use xlink:href="#minus"/></g><g transform="translate(850,1752)" ed:togtopicid="159"><use xlink:href="#minus"/></g><g transform="translate(683,1848)" ed:togtopicid="161"><use xlink:href="#minus"/></g><g transform="translate(638,2313)" ed:togtopicid="163"><use xlink:href="#minus"/></g><g transform="translate(793,2049)" ed:togtopicid="165"><use xlink:href="#minus"/></g><g transform="translate(806,2170)" ed:togtopicid="167"><use xlink:href="#minus"/></g><g transform="translate(822,2267)" ed:togtopicid="169"><use xlink:href="#minus"/></g><g transform="translate(995,2161)" ed:togtopicid="171"><use xlink:href="#minus"/></g><g transform="translate(1051,2211)" ed:togtopicid="173"><use xlink:href="#minus"/></g><g transform="translate(757,2329)" ed:togtopicid="175"><use xlink:href="#minus"/></g><g transform="translate(819,2375)" ed:togtopicid="177"><use xlink:href="#minus"/></g><g transform="translate(783,2447)" ed:togtopicid="179"><use xlink:href="#minus"/></g><g transform="translate(868,2528)" ed:togtopicid="181"><use xlink:href="#minus"/></g><g transform="translate(871,2568)" ed:togtopicid="183"><use xlink:href="#minus"/></g><g transform="translate(585,2856)" ed:togtopicid="185"><use xlink:href="#minus"/></g><g transform="translate(782,2676)" ed:togtopicid="187"><use xlink:href="#minus"/></g><g transform="translate(769,2722)" ed:togtopicid="189"><use xlink:href="#minus"/></g><g transform="translate(792,2825)" ed:togtopicid="191"><use xlink:href="#minus"/></g><g transform="translate(808,2958)" ed:togtopicid="193"><use xlink:href="#minus"/></g><g transform="translate(987,2800)" ed:togtopicid="201"><use xlink:href="#minus"/></g><g transform="translate(987,2856)" ed:togtopicid="203"><use xlink:href="#minus"/></g><g transform="translate(964,2912)" ed:togtopicid="205"><use xlink:href="#minus"/></g><g transform="translate(611,3448)" ed:togtopicid="215"><use xlink:href="#minus"/></g><g transform="translate(798,3379)" ed:togtopicid="217"><use xlink:href="#minus"/></g><g transform="translate(1035,3364)" ed:togtopicid="219"><use xlink:href="#minus"/></g><g transform="translate(847,3663)" ed:togtopicid="223"><use xlink:href="#minus"/></g><g transform="translate(1079,3613)" ed:togtopicid="225"><use xlink:href="#minus"/></g><g transform="translate(1105,3769)" ed:togtopicid="227"><use xlink:href="#minus"/></g><g transform="translate(542,4094)" ed:togtopicid="229"><use xlink:href="#minus"/></g><g transform="translate(713,3942)" ed:togtopicid="231"><use xlink:href="#minus"/></g><g transform="translate(721,4085)" ed:togtopicid="233"><use xlink:href="#minus"/></g><g transform="translate(916,4029)" ed:togtopicid="235"><use xlink:href="#minus"/></g><g transform="translate(890,4085)" ed:togtopicid="237"><use xlink:href="#minus"/></g><g transform="translate(903,4141)" ed:togtopicid="239"><use xlink:href="#minus"/></g><g transform="translate(713,4262)" ed:togtopicid="241"><use xlink:href="#minus"/></g><g transform="translate(869,4206)" ed:togtopicid="243"><use xlink:href="#minus"/></g><g transform="translate(909,4247)" ed:togtopicid="245"><use xlink:href="#minus"/></g><g transform="translate(952,4278)" ed:togtopicid="247"><use xlink:href="#minus"/></g><g transform="translate(607,1338)" ed:togtopicid="313"><use xlink:href="#minus"/></g><g transform="translate(581,1935)" ed:togtopicid="351"><use xlink:href="#minus"/></g><g transform="translate(708,3165)" ed:togtopicid="409"><use xlink:href="#minus"/></g></svg>