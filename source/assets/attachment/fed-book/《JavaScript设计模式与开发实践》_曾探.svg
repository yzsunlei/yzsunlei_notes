<svg id="page100" xmlns:ed="https://www.edrawsoft.cn/xml/2017/SVGExtensions/" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ev="http://www.w3.org/2001/xml-events" width="1959" xmlns="http://www.w3.org/2000/svg" ed:hSpacing="30" ed:vSpacing="30" viewBox="0 0 1959 20629" height="20629" ed:name="Page-1"><style type="text/css"><![CDATA[
g[ed\:togtopicid],g[ed\:hyperlink],g[ed\:comment],g[ed\:note] {cursor:pointer;}
g[id] {-moz-user-select: none;-ms-user-select: none;user-select: none;}
svg text::selection,svg tspan::selection{background-color: #4285f4;color: #ffffff;fill: #ffffff;}
.st2 {fill:#303030;font-family:微软雅黑;font-size:12pt}
.st3 {fill:#454545;font-family:微软雅黑;font-size:10pt}
.st1 {fill:#ffffff;font-family:微软雅黑;font-size:14pt}
]]></style><defs><linearGradient x1="0%" id="lg1" x2="0%" y1="0%" y2="100%"><stop offset="0" stop-color="#ffffff"/><stop offset="0.25" stop-color="#f0f5f0"/><stop offset="0.75" stop-color="#e1ebe1"/><stop offset="1" stop-color="#c8d7c8"/></linearGradient></defs><rect x="0" width="1959" fill="#ffffff" y="0" height="20629"/><path id="103" d="M-103.7,5108.9C37.4,4515.7,-110.7,-5137.4,118,-5137.4" transform="matrix(1,0,0,1,314,5177)" fill="none" ed:tosuperid="102" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="105" d="M-103,4623.3C36.9,4060.4,-110.4,-4651.8,118,-4651.8" transform="matrix(1,0,0,1,314,5663)" fill="none" ed:tosuperid="104" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="107" d="M-101.8,3941.3C36.1,3423.7,-109.7,-3969.8,118,-3969.8" transform="matrix(1,0,0,1,314,6345)" fill="none" ed:tosuperid="106" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="109" d="M-100.8,3464C35.4,2980.5,-109.2,-3492.5,118,-3492.5" transform="matrix(1,0,0,1,314,6822)" fill="none" ed:tosuperid="108" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="111" d="M-100.2,3183.1C34.9,2720.8,-108.8,-3211.6,118,-3211.6" transform="matrix(1,0,0,1,314,7103)" fill="none" ed:tosuperid="110" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="113" d="M-99.6,2994C34.6,2546.4,-108.5,-3022.5,118,-3022.5" transform="matrix(1,0,0,1,314,7292)" fill="none" ed:tosuperid="112" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="115" d="M-98.3,2558.5C33.6,2146.8,-107.7,-2587,118,-2587" transform="matrix(1,0,0,1,314,7727)" fill="none" ed:tosuperid="114" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="117" d="M-96,2020C32,1657.2,-106.4,-2048.5,118,-2048.5" transform="matrix(1,0,0,1,314,8266)" fill="none" ed:tosuperid="116" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="119" d="M-93.9,1636.3C30.4,1312.3,-105.2,-1664.8,118,-1664.8" transform="matrix(1,0,0,1,314,8650)" fill="none" ed:tosuperid="118" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="121" d="M-89.9,1159.3C27.5,890.5,-102.7,-1187.8,118,-1187.8" transform="matrix(1,0,0,1,314,9127)" fill="none" ed:tosuperid="120" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="123" d="M-82.1,646C21.6,451.3,-97.6,-674.5,118,-674.5" transform="matrix(1,0,0,1,314,9640)" fill="none" ed:tosuperid="122" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="125" d="M-68.8,233.3C5.6,124,-51.3,-261.8,118,-261.8" transform="matrix(1,0,0,1,314,10053)" fill="none" ed:tosuperid="124" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="127" d="M-72.4,-327.3C11.8,-194.6,-78.8,355.8,118,355.8" transform="matrix(1,0,0,1,314,10670)" fill="none" ed:tosuperid="126" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="129" d="M-88.4,-1023C26.4,-772,-101.8,1051.5,118,1051.5" transform="matrix(1,0,0,1,314,11366)" fill="none" ed:tosuperid="128" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="131" d="M-93.7,-1606.3C30.3,-1285.5,-105,1634.8,118,1634.8" transform="matrix(1,0,0,1,314,11949)" fill="none" ed:tosuperid="130" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="133" d="M-96.3,-2075.5C32.2,-1707.3,-106.6,2104,118,2104" transform="matrix(1,0,0,1,314,12418)" fill="none" ed:tosuperid="132" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="135" d="M-98.3,-2572.8C33.6,-2159.8,-107.8,2601.3,118,2601.3" transform="matrix(1,0,0,1,314,12916)" fill="none" ed:tosuperid="134" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="137" d="M-100.2,-3218.3C35,-2753.2,-108.9,3246.8,118,3246.8" transform="matrix(1,0,0,1,314,13561)" fill="none" ed:tosuperid="136" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="139" d="M-101.4,-3706C35.8,-3205,-109.5,3734.5,118,3734.5" transform="matrix(1,0,0,1,314,14049)" fill="none" ed:tosuperid="138" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="141" d="M-101.6,-3833C36,-3323,-109.6,3861.5,118,3861.5" transform="matrix(1,0,0,1,314,14176)" fill="none" ed:tosuperid="140" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="143" d="M-101.8,-3938C36.1,-3420.7,-109.7,3966.5,118,3966.5" transform="matrix(1,0,0,1,314,14281)" fill="none" ed:tosuperid="142" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="145" d="M-102.2,-4127C36.4,-3596.7,-109.9,4155.5,118,4155.5" transform="matrix(1,0,0,1,314,14470)" fill="none" ed:tosuperid="144" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="147" d="M-102.6,-4375.5C36.7,-3828.7,-110.2,4404,118,4404" transform="matrix(1,0,0,1,314,14718)" fill="none" ed:tosuperid="146" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="149" d="M-103.1,-4668C37,-4102.3,-110.4,4696.5,118,4696.5" transform="matrix(1,0,0,1,314,15011)" fill="none" ed:tosuperid="148" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="151" d="M-103.5,-4970.8C37.3,-4386.1,-110.6,4999.3,118,4999.3" transform="matrix(1,0,0,1,314,15314)" fill="none" ed:tosuperid="150" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="178" d="M-13.5,105.9C5.4,105.9,-13.5,-105.9,13.5,-105.9" transform="matrix(1,0,0,1,602,4163)" fill="none" ed:tosuperid="177" stroke-linecap="round" stroke="#696969" ed:parentid="112" stroke-linejoin="round"/><path id="181" d="M-13.5,29.6C3.4,29.6,-8.9,-29.6,13.5,-29.6" transform="matrix(1,0,0,1,650,18218)" fill="none" ed:tosuperid="180" stroke-linecap="round" stroke="#696969" ed:parentid="142" stroke-linejoin="round"/><path id="183" d="M-13.5,-6.1C-1.3,-6.1,2.1,6.1,13.5,6.1" transform="matrix(1,0,0,1,650,18253)" fill="none" ed:tosuperid="182" stroke-linecap="round" stroke="#696969" ed:parentid="142" stroke-linejoin="round"/><path id="185" d="M-13.5,-37.1C4.4,-37.1,-11.3,37.1,13.5,37.1" transform="matrix(1,0,0,1,650,18284)" fill="none" ed:tosuperid="184" stroke-linecap="round" stroke="#696969" ed:parentid="142" stroke-linejoin="round"/><path id="187" d="M-13.5,-65.1C5.4,-65.1,-13.5,65.1,13.5,65.1" transform="matrix(1,0,0,1,650,18312)" fill="none" ed:tosuperid="186" stroke-linecap="round" stroke="#696969" ed:parentid="142" stroke-linejoin="round"/><path id="189" d="M-13.5,42.1C4.9,42.1,-12.4,-42.1,13.5,-42.1" transform="matrix(1,0,0,1,650,18583)" fill="none" ed:tosuperid="188" stroke-linecap="round" stroke="#696969" ed:parentid="144" stroke-linejoin="round"/><path id="191" d="M-13.5,-13.9C0.5,-13.9,-2,13.9,13.5,13.9" transform="matrix(1,0,0,1,650,18639)" fill="none" ed:tosuperid="190" stroke-linecap="round" stroke="#696969" ed:parentid="144" stroke-linejoin="round"/><path id="193" d="M-13.5,-82.4C5.4,-82.4,-13.5,82.4,13.5,82.4" transform="matrix(1,0,0,1,650,18708)" fill="none" ed:tosuperid="192" stroke-linecap="round" stroke="#696969" ed:parentid="144" stroke-linejoin="round"/><path id="195" d="M-13.5,71.9C5.4,71.9,-13.5,-71.9,13.5,-71.9" transform="matrix(1,0,0,1,657,19050)" fill="none" ed:tosuperid="194" stroke-linecap="round" stroke="#696969" ed:parentid="146" stroke-linejoin="round"/><path id="197" d="M-13.5,39.1C4.7,39.1,-11.8,-39.1,13.5,-39.1" transform="matrix(1,0,0,1,657,19083)" fill="none" ed:tosuperid="196" stroke-linecap="round" stroke="#696969" ed:parentid="146" stroke-linejoin="round"/><path id="199" d="M-13.5,14.1C0.5,14.1,-2.1,-14.1,13.5,-14.1" transform="matrix(1,0,0,1,657,19108)" fill="none" ed:tosuperid="198" stroke-linecap="round" stroke="#696969" ed:parentid="146" stroke-linejoin="round"/><path id="201" d="M-13.5,-31.1C3.7,-31.1,-9.5,31.1,13.5,31.1" transform="matrix(1,0,0,1,657,19153)" fill="none" ed:tosuperid="200" stroke-linecap="round" stroke="#696969" ed:parentid="146" stroke-linejoin="round"/><path id="203" d="M-13.5,-76.4C5.4,-76.4,-13.5,76.4,13.5,76.4" transform="matrix(1,0,0,1,657,19199)" fill="none" ed:tosuperid="202" stroke-linecap="round" stroke="#696969" ed:parentid="146" stroke-linejoin="round"/><path id="205" d="M-13.5,-109.1C5.4,-109.1,-13.5,109.1,13.5,109.1" transform="matrix(1,0,0,1,657,19231)" fill="none" ed:tosuperid="204" stroke-linecap="round" stroke="#696969" ed:parentid="146" stroke-linejoin="round"/><path id="207" d="M-13.5,-137.1C5.4,-137.1,-13.5,137.1,13.5,137.1" transform="matrix(1,0,0,1,657,19259)" fill="none" ed:tosuperid="206" stroke-linecap="round" stroke="#696969" ed:parentid="146" stroke-linejoin="round"/><path id="209" d="M-13.5,39.1C4.7,39.1,-11.8,-39.1,13.5,-39.1" transform="matrix(1,0,0,1,714,19668)" fill="none" ed:tosuperid="208" stroke-linecap="round" stroke="#696969" ed:parentid="148" stroke-linejoin="round"/><path id="211" d="M-13.5,6.4C-1.2,6.4,1.9,-6.4,13.5,-6.4" transform="matrix(1,0,0,1,714,19701)" fill="none" ed:tosuperid="210" stroke-linecap="round" stroke="#696969" ed:parentid="148" stroke-linejoin="round"/><path id="213" d="M-13.5,-41.9C4.9,-41.9,-12.3,41.9,13.5,41.9" transform="matrix(1,0,0,1,714,19749)" fill="none" ed:tosuperid="212" stroke-linecap="round" stroke="#696969" ed:parentid="148" stroke-linejoin="round"/><path id="215" d="M-13.5,-94.9C5.4,-94.9,-13.5,94.9,13.5,94.9" transform="matrix(1,0,0,1,714,19802)" fill="none" ed:tosuperid="214" stroke-linecap="round" stroke="#696969" ed:parentid="148" stroke-linejoin="round"/><path id="217" d="M-13.5,-129.4C5.4,-129.4,-13.5,129.4,13.5,129.4" transform="matrix(1,0,0,1,714,19837)" fill="none" ed:tosuperid="216" stroke-linecap="round" stroke="#696969" ed:parentid="148" stroke-linejoin="round"/><path id="219" d="M-13.5,79.1C5.4,79.1,-13.5,-79.1,13.5,-79.1" transform="matrix(1,0,0,1,634,20234)" fill="none" ed:tosuperid="218" stroke-linecap="round" stroke="#696969" ed:parentid="150" stroke-linejoin="round"/><path id="221" d="M-13.5,32.6C3.9,32.6,-10,-32.6,13.5,-32.6" transform="matrix(1,0,0,1,634,20280)" fill="none" ed:tosuperid="220" stroke-linecap="round" stroke="#696969" ed:parentid="150" stroke-linejoin="round"/><path id="223" d="M-13.5,12.4C0.2,12.4,-1.3,-12.4,13.5,-12.4" transform="matrix(1,0,0,1,634,20300)" fill="none" ed:tosuperid="222" stroke-linecap="round" stroke="#696969" ed:parentid="150" stroke-linejoin="round"/><path id="225" d="M-13.5,-7.9C-0.9,-7.9,1.1,7.9,13.5,7.9" transform="matrix(1,0,0,1,634,20321)" fill="none" ed:tosuperid="224" stroke-linecap="round" stroke="#696969" ed:parentid="150" stroke-linejoin="round"/><path id="227" d="M-13.5,-31.1C3.7,-31.1,-9.5,31.1,13.5,31.1" transform="matrix(1,0,0,1,634,20344)" fill="none" ed:tosuperid="226" stroke-linecap="round" stroke="#696969" ed:parentid="150" stroke-linejoin="round"/><path id="229" d="M-13.5,-54.4C5.4,-54.4,-13.5,54.4,13.5,54.4" transform="matrix(1,0,0,1,634,20367)" fill="none" ed:tosuperid="228" stroke-linecap="round" stroke="#696969" ed:parentid="150" stroke-linejoin="round"/><path id="231" d="M-13.5,-69.9C5.4,-69.9,-13.5,69.9,13.5,69.9" transform="matrix(1,0,0,1,634,20383)" fill="none" ed:tosuperid="230" stroke-linecap="round" stroke="#696969" ed:parentid="150" stroke-linejoin="round"/><path id="233" d="M-13.5,-93.1C5.4,-93.1,-13.5,93.1,13.5,93.1" transform="matrix(1,0,0,1,634,20406)" fill="none" ed:tosuperid="232" stroke-linecap="round" stroke="#696969" ed:parentid="150" stroke-linejoin="round"/><path id="235" d="M-13.5,-116.4C5.4,-116.4,-13.5,116.4,13.5,116.4" transform="matrix(1,0,0,1,634,20429)" fill="none" ed:tosuperid="234" stroke-linecap="round" stroke="#696969" ed:parentid="150" stroke-linejoin="round"/><path id="237" d="M-13.5,-131.9C5.4,-131.9,-13.5,131.9,13.5,131.9" transform="matrix(1,0,0,1,634,20445)" fill="none" ed:tosuperid="236" stroke-linecap="round" stroke="#696969" ed:parentid="150" stroke-linejoin="round"/><path id="239" d="M-13.5,-147.4C5.4,-147.4,-13.5,147.4,13.5,147.4" transform="matrix(1,0,0,1,634,20460)" fill="none" ed:tosuperid="238" stroke-linecap="round" stroke="#696969" ed:parentid="150" stroke-linejoin="round"/><path id="241" d="M-13.5,-10.9C-0.2,-10.9,-0.5,10.9,13.5,10.9" transform="matrix(1,0,0,1,789,18048)" fill="none" ed:tosuperid="240" stroke-linecap="round" stroke="#696969" ed:parentid="140" stroke-linejoin="round"/><path id="243" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,747,18124)" fill="none" ed:tosuperid="242" stroke-linecap="round" stroke="#696969" ed:parentid="246" stroke-linejoin="round"/><path id="245" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,747,18140)" fill="none" ed:tosuperid="244" stroke-linecap="round" stroke="#696969" ed:parentid="246" stroke-linejoin="round"/><path id="247" d="M-13.5,57.6C5.4,57.6,-13.5,-57.6,13.5,-57.6" transform="matrix(1,0,0,1,650,18190)" fill="none" ed:tosuperid="246" stroke-linecap="round" stroke="#696969" ed:parentid="142" stroke-linejoin="round"/><path id="249" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,853,18193)" fill="none" ed:tosuperid="248" stroke-linecap="round" stroke="#696969" ed:parentid="180" stroke-linejoin="round"/><path id="251" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,829,18244)" fill="none" ed:tosuperid="250" stroke-linecap="round" stroke="#696969" ed:parentid="182" stroke-linejoin="round"/><path id="253" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,829,18260)" fill="none" ed:tosuperid="252" stroke-linecap="round" stroke="#696969" ed:parentid="182" stroke-linejoin="round"/><path id="255" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,829,18275)" fill="none" ed:tosuperid="254" stroke-linecap="round" stroke="#696969" ed:parentid="182" stroke-linejoin="round"/><path id="257" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,827,18375)" fill="none" ed:tosuperid="256" stroke-linecap="round" stroke="#696969" ed:parentid="186" stroke-linejoin="round"/><path id="259" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,827,18390)" fill="none" ed:tosuperid="258" stroke-linecap="round" stroke="#696969" ed:parentid="186" stroke-linejoin="round"/><path id="261" d="M-13.5,82.6C5.4,82.6,-13.5,-82.6,13.5,-82.6" transform="matrix(1,0,0,1,650,18543)" fill="none" ed:tosuperid="260" stroke-linecap="round" stroke="#696969" ed:parentid="144" stroke-linejoin="round"/><path id="263" d="M-13.5,57.6C5.4,57.6,-13.5,-57.6,13.5,-57.6" transform="matrix(1,0,0,1,650,18568)" fill="none" ed:tosuperid="262" stroke-linecap="round" stroke="#696969" ed:parentid="144" stroke-linejoin="round"/><path id="265" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,842,18541)" fill="none" ed:tosuperid="264" stroke-linecap="round" stroke="#696969" ed:parentid="188" stroke-linejoin="round"/><path id="267" d="M-13.5,40.5C4.8,40.5,-12.1,-40.5,13.5,-40.5" transform="matrix(1,0,0,1,881,18613)" fill="none" ed:tosuperid="266" stroke-linecap="round" stroke="#696969" ed:parentid="190" stroke-linejoin="round"/><path id="269" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,881,18633)" fill="none" ed:tosuperid="268" stroke-linecap="round" stroke="#696969" ed:parentid="190" stroke-linejoin="round"/><path id="271" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,1002,18617)" fill="none" ed:tosuperid="270" stroke-linecap="round" stroke="#696969" ed:parentid="268" stroke-linejoin="round"/><path id="273" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,881,18673)" fill="none" ed:tosuperid="272" stroke-linecap="round" stroke="#696969" ed:parentid="190" stroke-linejoin="round"/><path id="275" d="M-13.5,10.8C-0.2,10.8,-0.4,-10.8,13.5,-10.8" transform="matrix(1,0,0,1,989,18683)" fill="none" ed:tosuperid="274" stroke-linecap="round" stroke="#696969" ed:parentid="272" stroke-linejoin="round"/><path id="277" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,989,18706)" fill="none" ed:tosuperid="276" stroke-linecap="round" stroke="#696969" ed:parentid="272" stroke-linejoin="round"/><path id="279" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,1190,18711)" fill="none" ed:tosuperid="278" stroke-linecap="round" stroke="#696969" ed:parentid="276" stroke-linejoin="round"/><path id="281" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,1190,18726)" fill="none" ed:tosuperid="280" stroke-linecap="round" stroke="#696969" ed:parentid="276" stroke-linejoin="round"/><path id="283" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,894,18787)" fill="none" ed:tosuperid="282" stroke-linecap="round" stroke="#696969" ed:parentid="192" stroke-linejoin="round"/><path id="285" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,894,18803)" fill="none" ed:tosuperid="284" stroke-linecap="round" stroke="#696969" ed:parentid="192" stroke-linejoin="round"/><path id="289" d="M-13.5,112.4C5.4,112.4,-13.5,-112.4,13.5,-112.4" transform="matrix(1,0,0,1,657,19010)" fill="none" ed:tosuperid="288" stroke-linecap="round" stroke="#696969" ed:parentid="146" stroke-linejoin="round"/><path id="291" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,754,18885)" fill="none" ed:tosuperid="290" stroke-linecap="round" stroke="#696969" ed:parentid="288" stroke-linejoin="round"/><path id="293" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,754,18910)" fill="none" ed:tosuperid="292" stroke-linecap="round" stroke="#696969" ed:parentid="288" stroke-linejoin="round"/><path id="295" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,876,18966)" fill="none" ed:tosuperid="294" stroke-linecap="round" stroke="#696969" ed:parentid="194" stroke-linejoin="round"/><path id="297" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,876,18991)" fill="none" ed:tosuperid="296" stroke-linecap="round" stroke="#696969" ed:parentid="194" stroke-linejoin="round"/><path id="299" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,797,19049)" fill="none" ed:tosuperid="298" stroke-linecap="round" stroke="#696969" ed:parentid="196" stroke-linejoin="round"/><path id="301" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,901,19099)" fill="none" ed:tosuperid="300" stroke-linecap="round" stroke="#696969" ed:parentid="198" stroke-linejoin="round"/><path id="303" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,823,19169)" fill="none" ed:tosuperid="302" stroke-linecap="round" stroke="#696969" ed:parentid="200" stroke-linejoin="round"/><path id="305" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,823,19185)" fill="none" ed:tosuperid="304" stroke-linecap="round" stroke="#696969" ed:parentid="200" stroke-linejoin="round"/><path id="307" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,823,19210)" fill="none" ed:tosuperid="306" stroke-linecap="round" stroke="#696969" ed:parentid="200" stroke-linejoin="round"/><path id="309" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,894,19280)" fill="none" ed:tosuperid="308" stroke-linecap="round" stroke="#696969" ed:parentid="202" stroke-linejoin="round"/><path id="311" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,868,19328)" fill="none" ed:tosuperid="310" stroke-linecap="round" stroke="#696969" ed:parentid="204" stroke-linejoin="round"/><path id="313" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,868,19353)" fill="none" ed:tosuperid="312" stroke-linecap="round" stroke="#696969" ed:parentid="204" stroke-linejoin="round"/><path id="315" d="M-13.5,96.9C5.4,96.9,-13.5,-96.9,13.5,-96.9" transform="matrix(1,0,0,1,714,19610)" fill="none" ed:tosuperid="314" stroke-linecap="round" stroke="#696969" ed:parentid="148" stroke-linejoin="round"/><path id="317" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,954,19493)" fill="none" ed:tosuperid="316" stroke-linecap="round" stroke="#696969" ed:parentid="314" stroke-linejoin="round"/><path id="319" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,954,19518)" fill="none" ed:tosuperid="318" stroke-linecap="round" stroke="#696969" ed:parentid="314" stroke-linejoin="round"/><path id="321" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" transform="matrix(1,0,0,1,954,19543)" fill="none" ed:tosuperid="320" stroke-linecap="round" stroke="#696969" ed:parentid="314" stroke-linejoin="round"/><path id="323" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,893,19626)" fill="none" ed:tosuperid="322" stroke-linecap="round" stroke="#696969" ed:parentid="208" stroke-linejoin="round"/><path id="325" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,893,19642)" fill="none" ed:tosuperid="324" stroke-linecap="round" stroke="#696969" ed:parentid="208" stroke-linejoin="round"/><path id="327" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,843,19699)" fill="none" ed:tosuperid="326" stroke-linecap="round" stroke="#696969" ed:parentid="210" stroke-linejoin="round"/><path id="329" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,1035,19771)" fill="none" ed:tosuperid="328" stroke-linecap="round" stroke="#696969" ed:parentid="212" stroke-linejoin="round"/><path id="331" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,1329,19743)" fill="none" ed:tosuperid="330" stroke-linecap="round" stroke="#696969" ed:parentid="328" stroke-linejoin="round"/><path id="333" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,1329,19758)" fill="none" ed:tosuperid="332" stroke-linecap="round" stroke="#696969" ed:parentid="328" stroke-linejoin="round"/><path id="335" d="M-13.5,-3C-2,-3,3.8,3,13.5,3" transform="matrix(1,0,0,1,1035,19794)" fill="none" ed:tosuperid="334" stroke-linecap="round" stroke="#696969" ed:parentid="212" stroke-linejoin="round"/><path id="337" d="M-13.5,-28C3.2,-28,-8.3,28,13.5,28" transform="matrix(1,0,0,1,1035,19819)" fill="none" ed:tosuperid="336" stroke-linecap="round" stroke="#696969" ed:parentid="212" stroke-linejoin="round"/><path id="339" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" transform="matrix(1,0,0,1,932,19907)" fill="none" ed:tosuperid="338" stroke-linecap="round" stroke="#696969" ed:parentid="214" stroke-linejoin="round"/><path id="341" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" transform="matrix(1,0,0,1,1038,19976)" fill="none" ed:tosuperid="340" stroke-linecap="round" stroke="#696969" ed:parentid="216" stroke-linejoin="round"/><path id="343" d="M-13.5,125.6C5.4,125.6,-13.5,-125.6,13.5,-125.6" transform="matrix(1,0,0,1,634,20187)" fill="none" ed:tosuperid="342" stroke-linecap="round" stroke="#696969" ed:parentid="150" stroke-linejoin="round"/><path id="345" d="M-13.5,31C3.7,31,-9.4,-31,13.5,-31" transform="matrix(1,0,0,1,761,20124)" fill="none" ed:tosuperid="344" stroke-linecap="round" stroke="#696969" ed:parentid="218" stroke-linejoin="round"/><path id="347" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,761,20139)" fill="none" ed:tosuperid="346" stroke-linecap="round" stroke="#696969" ed:parentid="218" stroke-linejoin="round"/><path id="349" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,761,20155)" fill="none" ed:tosuperid="348" stroke-linecap="round" stroke="#696969" ed:parentid="218" stroke-linejoin="round"/><path id="351" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,761,20170)" fill="none" ed:tosuperid="350" stroke-linecap="round" stroke="#696969" ed:parentid="218" stroke-linejoin="round"/><path id="353" d="M-13.5,-31C3.7,-31,-9.4,31,13.5,31" transform="matrix(1,0,0,1,761,20186)" fill="none" ed:tosuperid="352" stroke-linecap="round" stroke="#696969" ed:parentid="218" stroke-linejoin="round"/><path id="355" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,826,20248)" fill="none" ed:tosuperid="354" stroke-linecap="round" stroke="#696969" ed:parentid="220" stroke-linejoin="round"/><path id="357" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,865,20293)" fill="none" ed:tosuperid="356" stroke-linecap="round" stroke="#696969" ed:parentid="222" stroke-linejoin="round"/><path id="359" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,787,20329)" fill="none" ed:tosuperid="358" stroke-linecap="round" stroke="#696969" ed:parentid="224" stroke-linejoin="round"/><path id="361" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,904,20367)" fill="none" ed:tosuperid="360" stroke-linecap="round" stroke="#696969" ed:parentid="226" stroke-linejoin="round"/><path id="363" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,904,20383)" fill="none" ed:tosuperid="362" stroke-linecap="round" stroke="#696969" ed:parentid="226" stroke-linejoin="round"/><path id="365" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,904,20422)" fill="none" ed:tosuperid="364" stroke-linecap="round" stroke="#696969" ed:parentid="228" stroke-linejoin="round"/><path id="367" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,810,20453)" fill="none" ed:tosuperid="366" stroke-linecap="round" stroke="#696969" ed:parentid="230" stroke-linejoin="round"/><path id="369" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,800,20491)" fill="none" ed:tosuperid="368" stroke-linecap="round" stroke="#696969" ed:parentid="232" stroke-linejoin="round"/><path id="371" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,800,20507)" fill="none" ed:tosuperid="370" stroke-linecap="round" stroke="#696969" ed:parentid="232" stroke-linejoin="round"/><path id="373" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,813,20546)" fill="none" ed:tosuperid="372" stroke-linecap="round" stroke="#696969" ed:parentid="234" stroke-linejoin="round"/><path id="375" d="M-13.5,438.1C5.4,438.1,-13.5,-438.1,13.5,-438.1" transform="matrix(1,0,0,1,693,573)" fill="none" ed:tosuperid="374" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="377" d="M-13.5,349.4C5.4,349.4,-13.5,-349.4,13.5,-349.4" transform="matrix(1,0,0,1,693,661)" fill="none" ed:tosuperid="376" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="379" d="M-13.5,165.4C5.4,165.4,-13.5,-165.4,13.5,-165.4" transform="matrix(1,0,0,1,693,845)" fill="none" ed:tosuperid="378" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="381" d="M-13.5,-15.6C0.9,-15.6,-2.9,15.6,13.5,15.6" transform="matrix(1,0,0,1,693,1026)" fill="none" ed:tosuperid="380" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="383" d="M-13.5,-280.6C5.4,-280.6,-13.5,280.6,13.5,280.6" transform="matrix(1,0,0,1,693,1291)" fill="none" ed:tosuperid="382" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="385" d="M-13.5,63.8C5.4,63.8,-13.5,-63.8,13.5,-63.8" transform="matrix(1,0,0,1,903,248)" fill="none" ed:tosuperid="384" stroke-linecap="round" stroke="#696969" ed:parentid="376" stroke-linejoin="round"/><path id="387" d="M-13.5,48.3C5.3,48.3,-13.2,-48.3,13.5,-48.3" transform="matrix(1,0,0,1,903,264)" fill="none" ed:tosuperid="386" stroke-linecap="round" stroke="#696969" ed:parentid="376" stroke-linejoin="round"/><path id="389" d="M-13.5,32.8C3.9,32.8,-10,-32.8,13.5,-32.8" transform="matrix(1,0,0,1,903,279)" fill="none" ed:tosuperid="388" stroke-linecap="round" stroke="#696969" ed:parentid="376" stroke-linejoin="round"/><path id="391" d="M-13.5,17.3C1.2,17.3,-3.7,-17.3,13.5,-17.3" transform="matrix(1,0,0,1,903,295)" fill="none" ed:tosuperid="390" stroke-linecap="round" stroke="#696969" ed:parentid="376" stroke-linejoin="round"/><path id="393" d="M-13.5,1.8C-2.3,1.8,4.4,-1.8,13.5,-1.8" transform="matrix(1,0,0,1,903,310)" fill="none" ed:tosuperid="392" stroke-linecap="round" stroke="#696969" ed:parentid="376" stroke-linejoin="round"/><path id="395" d="M-13.5,-13.8C0.5,-13.8,-2,13.8,13.5,13.8" transform="matrix(1,0,0,1,903,326)" fill="none" ed:tosuperid="394" stroke-linecap="round" stroke="#696969" ed:parentid="376" stroke-linejoin="round"/><path id="397" d="M-13.5,-38.8C4.6,-38.8,-11.7,38.8,13.5,38.8" transform="matrix(1,0,0,1,903,351)" fill="none" ed:tosuperid="396" stroke-linecap="round" stroke="#696969" ed:parentid="376" stroke-linejoin="round"/><path id="399" d="M-13.5,-73.3C5.4,-73.3,-13.5,73.3,13.5,73.3" transform="matrix(1,0,0,1,903,385)" fill="none" ed:tosuperid="398" stroke-linecap="round" stroke="#696969" ed:parentid="376" stroke-linejoin="round"/><path id="401" d="M-13.5,76.3C5.4,76.3,-13.5,-76.3,13.5,-76.3" transform="matrix(1,0,0,1,786,604)" fill="none" ed:tosuperid="400" stroke-linecap="round" stroke="#696969" ed:parentid="378" stroke-linejoin="round"/><path id="403" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,1043,573)" fill="none" ed:tosuperid="402" stroke-linecap="round" stroke="#696969" ed:parentid="618" stroke-linejoin="round"/><path id="405" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,955,654)" fill="none" ed:tosuperid="404" stroke-linecap="round" stroke="#696969" ed:parentid="622" stroke-linejoin="round"/><path id="407" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,965,743)" fill="none" ed:tosuperid="406" stroke-linecap="round" stroke="#696969" ed:parentid="626" stroke-linejoin="round"/><path id="409" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,965,758)" fill="none" ed:tosuperid="408" stroke-linecap="round" stroke="#696969" ed:parentid="626" stroke-linejoin="round"/><path id="411" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,1059,816)" fill="none" ed:tosuperid="410" stroke-linecap="round" stroke="#696969" ed:parentid="628" stroke-linejoin="round"/><path id="413" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,955,866)" fill="none" ed:tosuperid="412" stroke-linecap="round" stroke="#696969" ed:parentid="630" stroke-linejoin="round"/><path id="415" d="M-13.5,70.3C5.4,70.3,-13.5,-70.3,13.5,-70.3" transform="matrix(1,0,0,1,786,972)" fill="none" ed:tosuperid="414" stroke-linecap="round" stroke="#696969" ed:parentid="380" stroke-linejoin="round"/><path id="417" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,916,947)" fill="none" ed:tosuperid="416" stroke-linecap="round" stroke="#696969" ed:parentid="634" stroke-linejoin="round"/><path id="419" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,916,1005)" fill="none" ed:tosuperid="418" stroke-linecap="round" stroke="#696969" ed:parentid="636" stroke-linejoin="round"/><path id="421" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,916,1020)" fill="none" ed:tosuperid="420" stroke-linecap="round" stroke="#696969" ed:parentid="636" stroke-linejoin="round"/><path id="423" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,916,1090)" fill="none" ed:tosuperid="422" stroke-linecap="round" stroke="#696969" ed:parentid="638" stroke-linejoin="round"/><path id="425" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,916,1115)" fill="none" ed:tosuperid="424" stroke-linecap="round" stroke="#696969" ed:parentid="638" stroke-linejoin="round"/><path id="427" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,916,1178)" fill="none" ed:tosuperid="426" stroke-linecap="round" stroke="#696969" ed:parentid="640" stroke-linejoin="round"/><path id="429" d="M-13.5,179.3C5.4,179.3,-13.5,-179.3,13.5,-179.3" transform="matrix(1,0,0,1,1004,1393)" fill="none" ed:tosuperid="428" stroke-linecap="round" stroke="#696969" ed:parentid="382" stroke-linejoin="round"/><path id="431" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,1199,1259)" fill="none" ed:tosuperid="430" stroke-linecap="round" stroke="#696969" ed:parentid="642" stroke-linejoin="round"/><path id="433" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,1212,1309)" fill="none" ed:tosuperid="432" stroke-linecap="round" stroke="#696969" ed:parentid="644" stroke-linejoin="round"/><path id="435" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,1146,1367)" fill="none" ed:tosuperid="434" stroke-linecap="round" stroke="#696969" ed:parentid="646" stroke-linejoin="round"/><path id="439" d="M-13.5,43.5C5,43.5,-12.6,-43.5,13.5,-43.5" transform="matrix(1,0,0,1,1225,1469)" fill="none" ed:tosuperid="438" stroke-linecap="round" stroke="#696969" ed:parentid="648" stroke-linejoin="round"/><path id="445" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,1478,1530)" fill="none" ed:tosuperid="444" stroke-linecap="round" stroke="#696969" ed:parentid="442" stroke-linejoin="round"/><path id="447" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,1478,1545)" fill="none" ed:tosuperid="446" stroke-linecap="round" stroke="#696969" ed:parentid="442" stroke-linejoin="round"/><path id="449" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,1478,1561)" fill="none" ed:tosuperid="448" stroke-linecap="round" stroke="#696969" ed:parentid="442" stroke-linejoin="round"/><path id="451" d="M-13.5,-23.3C2.4,-23.3,-6.4,23.3,13.5,23.3" transform="matrix(1,0,0,1,1478,1576)" fill="none" ed:tosuperid="450" stroke-linecap="round" stroke="#696969" ed:parentid="442" stroke-linejoin="round"/><path id="453" d="M-13.5,50C5.3,50,-13.4,-50,13.5,-50" transform="matrix(1,0,0,1,1222,1700)" fill="none" ed:tosuperid="452" stroke-linecap="round" stroke="#696969" ed:parentid="650" stroke-linejoin="round"/><path id="455" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,1222,1734)" fill="none" ed:tosuperid="454" stroke-linecap="round" stroke="#696969" ed:parentid="650" stroke-linejoin="round"/><path id="457" d="M-13.5,-19C1.6,-19,-4.5,19,13.5,19" transform="matrix(1,0,0,1,1222,1769)" fill="none" ed:tosuperid="456" stroke-linecap="round" stroke="#696969" ed:parentid="650" stroke-linejoin="round"/><path id="459" d="M-13.5,-44C5.1,-44,-12.7,44,13.5,44" transform="matrix(1,0,0,1,1222,1794)" fill="none" ed:tosuperid="458" stroke-linecap="round" stroke="#696969" ed:parentid="650" stroke-linejoin="round"/><path id="461" d="M-13.5,-59.5C5.4,-59.5,-13.5,59.5,13.5,59.5" transform="matrix(1,0,0,1,1222,1809)" fill="none" ed:tosuperid="460" stroke-linecap="round" stroke="#696969" ed:parentid="650" stroke-linejoin="round"/><path id="465" d="M-13.5,-179.3C5.4,-179.3,-13.5,179.3,13.5,179.3" transform="matrix(1,0,0,1,1004,1751)" fill="none" ed:tosuperid="464" stroke-linecap="round" stroke="#696969" ed:parentid="382" stroke-linejoin="round"/><path id="467" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,1108,1931)" fill="none" ed:tosuperid="466" stroke-linecap="round" stroke="#696969" ed:parentid="464" stroke-linejoin="round"/><path id="469" d="M-13.5,84.4C5.4,84.4,-13.5,-84.4,13.5,-84.4" transform="matrix(1,0,0,1,663,2290)" fill="none" ed:tosuperid="468" stroke-linecap="round" stroke="#696969" ed:parentid="106" stroke-linejoin="round"/><path id="471" d="M-13.5,-122.9C5.4,-122.9,-13.5,122.9,13.5,122.9" transform="matrix(1,0,0,1,663,2498)" fill="none" ed:tosuperid="470" stroke-linecap="round" stroke="#696969" ed:parentid="106" stroke-linejoin="round"/><path id="473" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,752,2206)" fill="none" ed:tosuperid="472" stroke-linecap="round" stroke="#696969" ed:parentid="468" stroke-linejoin="round"/><path id="475" d="M-13.5,-104.3C5.4,-104.3,-13.5,104.3,13.5,104.3" transform="matrix(1,0,0,1,752,2310)" fill="none" ed:tosuperid="474" stroke-linecap="round" stroke="#696969" ed:parentid="468" stroke-linejoin="round"/><path id="477" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,796,2605)" fill="none" ed:tosuperid="476" stroke-linecap="round" stroke="#696969" ed:parentid="470" stroke-linejoin="round"/><path id="479" d="M-13.5,-62.5C5.4,-62.5,-13.5,62.5,13.5,62.5" transform="matrix(1,0,0,1,796,2683)" fill="none" ed:tosuperid="478" stroke-linecap="round" stroke="#696969" ed:parentid="470" stroke-linejoin="round"/><path id="481" d="M-13.5,99.5C5.4,99.5,-13.5,-99.5,13.5,-99.5" transform="matrix(1,0,0,1,752,2107)" fill="none" ed:tosuperid="480" stroke-linecap="round" stroke="#696969" ed:parentid="468" stroke-linejoin="round"/><path id="483" d="M-13.5,60.8C5.4,60.8,-13.5,-60.8,13.5,-60.8" transform="matrix(1,0,0,1,891,2145)" fill="none" ed:tosuperid="482" stroke-linecap="round" stroke="#696969" ed:parentid="472" stroke-linejoin="round"/><path id="487" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,1122,2061)" fill="none" ed:tosuperid="486" stroke-linecap="round" stroke="#696969" ed:parentid="482" stroke-linejoin="round"/><path id="489" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,1122,2077)" fill="none" ed:tosuperid="488" stroke-linecap="round" stroke="#696969" ed:parentid="482" stroke-linejoin="round"/><path id="491" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,1122,2092)" fill="none" ed:tosuperid="490" stroke-linecap="round" stroke="#696969" ed:parentid="482" stroke-linejoin="round"/><path id="493" d="M-13.5,-23.3C2.4,-23.3,-6.4,23.3,13.5,23.3" transform="matrix(1,0,0,1,1122,2108)" fill="none" ed:tosuperid="492" stroke-linecap="round" stroke="#696969" ed:parentid="482" stroke-linejoin="round"/><path id="495" d="M-13.5,22C2.1,22,-5.9,-22,13.5,-22" transform="matrix(1,0,0,1,891,2184)" fill="none" ed:tosuperid="494" stroke-linecap="round" stroke="#696969" ed:parentid="472" stroke-linejoin="round"/><path id="497" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,1064,2162)" fill="none" ed:tosuperid="496" stroke-linecap="round" stroke="#696969" ed:parentid="494" stroke-linejoin="round"/><path id="499" d="M-13.5,-6C-1.3,-6,2.1,6,13.5,6" transform="matrix(1,0,0,1,891,2212)" fill="none" ed:tosuperid="498" stroke-linecap="round" stroke="#696969" ed:parentid="472" stroke-linejoin="round"/><path id="501" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,1051,2206)" fill="none" ed:tosuperid="500" stroke-linecap="round" stroke="#696969" ed:parentid="498" stroke-linejoin="round"/><path id="503" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,1051,2231)" fill="none" ed:tosuperid="502" stroke-linecap="round" stroke="#696969" ed:parentid="498" stroke-linejoin="round"/><path id="505" d="M-13.5,-38.8C4.6,-38.8,-11.7,38.8,13.5,38.8" transform="matrix(1,0,0,1,891,2245)" fill="none" ed:tosuperid="504" stroke-linecap="round" stroke="#696969" ed:parentid="472" stroke-linejoin="round"/><path id="507" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,1012,2288)" fill="none" ed:tosuperid="506" stroke-linecap="round" stroke="#696969" ed:parentid="504" stroke-linejoin="round"/><path id="509" d="M-13.5,-71.5C5.4,-71.5,-13.5,71.5,13.5,71.5" transform="matrix(1,0,0,1,891,2278)" fill="none" ed:tosuperid="508" stroke-linecap="round" stroke="#696969" ed:parentid="472" stroke-linejoin="round"/><path id="511" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,1281,2337)" fill="none" ed:tosuperid="510" stroke-linecap="round" stroke="#696969" ed:parentid="508" stroke-linejoin="round"/><path id="513" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,1281,2362)" fill="none" ed:tosuperid="512" stroke-linecap="round" stroke="#696969" ed:parentid="508" stroke-linejoin="round"/><path id="515" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,891,2419)" fill="none" ed:tosuperid="514" stroke-linecap="round" stroke="#696969" ed:parentid="474" stroke-linejoin="round"/><path id="517" d="M-13.5,73.3C5.4,73.3,-13.5,-73.3,13.5,-73.3" transform="matrix(1,0,0,1,796,2547)" fill="none" ed:tosuperid="516" stroke-linecap="round" stroke="#696969" ed:parentid="470" stroke-linejoin="round"/><path id="519" d="M-13.5,42.3C4.9,42.3,-12.4,-42.3,13.5,-42.3" transform="matrix(1,0,0,1,979,2547)" fill="none" ed:tosuperid="518" stroke-linecap="round" stroke="#696969" ed:parentid="476" stroke-linejoin="round"/><path id="521" d="M-13.5,17.3C1.2,17.3,-3.7,-17.3,13.5,-17.3" transform="matrix(1,0,0,1,979,2572)" fill="none" ed:tosuperid="520" stroke-linecap="round" stroke="#696969" ed:parentid="476" stroke-linejoin="round"/><path id="523" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,979,2597)" fill="none" ed:tosuperid="522" stroke-linecap="round" stroke="#696969" ed:parentid="476" stroke-linejoin="round"/><path id="525" d="M-13.5,-42.3C4.9,-42.3,-12.4,42.3,13.5,42.3" transform="matrix(1,0,0,1,979,2632)" fill="none" ed:tosuperid="524" stroke-linecap="round" stroke="#696969" ed:parentid="476" stroke-linejoin="round"/><path id="527" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,979,2725)" fill="none" ed:tosuperid="526" stroke-linecap="round" stroke="#696969" ed:parentid="478" stroke-linejoin="round"/><path id="529" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,979,2746)" fill="none" ed:tosuperid="528" stroke-linecap="round" stroke="#696969" ed:parentid="478" stroke-linejoin="round"/><path id="531" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,1109,2705)" fill="none" ed:tosuperid="530" stroke-linecap="round" stroke="#696969" ed:parentid="526" stroke-linejoin="round"/><path id="533" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,1183,2750)" fill="none" ed:tosuperid="532" stroke-linecap="round" stroke="#696969" ed:parentid="528" stroke-linejoin="round"/><path id="535" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,979,2766)" fill="none" ed:tosuperid="534" stroke-linecap="round" stroke="#696969" ed:parentid="478" stroke-linejoin="round"/><path id="537" d="M-13.5,116.6C5.4,116.6,-13.5,-116.6,13.5,-116.6" transform="matrix(1,0,0,1,650,3213)" fill="none" ed:tosuperid="536" stroke-linecap="round" stroke="#696969" ed:parentid="108" stroke-linejoin="round"/><path id="539" d="M-13.5,-127.6C5.4,-127.6,-13.5,127.6,13.5,127.6" transform="matrix(1,0,0,1,650,3457)" fill="none" ed:tosuperid="538" stroke-linecap="round" stroke="#696969" ed:parentid="108" stroke-linejoin="round"/><path id="541" d="M-13.5,85.8C5.4,85.8,-13.5,-85.8,13.5,-85.8" transform="matrix(1,0,0,1,743,3010)" fill="none" ed:tosuperid="540" stroke-linecap="round" stroke="#696969" ed:parentid="536" stroke-linejoin="round"/><path id="543" d="M-13.5,57.8C5.4,57.8,-13.5,-57.8,13.5,-57.8" transform="matrix(1,0,0,1,743,3038)" fill="none" ed:tosuperid="542" stroke-linecap="round" stroke="#696969" ed:parentid="536" stroke-linejoin="round"/><path id="545" d="M-13.5,22C2.1,22,-5.9,-22,13.5,-22" transform="matrix(1,0,0,1,743,3074)" fill="none" ed:tosuperid="544" stroke-linecap="round" stroke="#696969" ed:parentid="536" stroke-linejoin="round"/><path id="547" d="M-13.5,-6C-1.3,-6,2.1,6,13.5,6" transform="matrix(1,0,0,1,743,3102)" fill="none" ed:tosuperid="546" stroke-linecap="round" stroke="#696969" ed:parentid="536" stroke-linejoin="round"/><path id="549" d="M-13.5,-31C3.7,-31,-9.4,31,13.5,31" transform="matrix(1,0,0,1,743,3127)" fill="none" ed:tosuperid="548" stroke-linecap="round" stroke="#696969" ed:parentid="536" stroke-linejoin="round"/><path id="551" d="M-13.5,-76.3C5.4,-76.3,-13.5,76.3,13.5,76.3" transform="matrix(1,0,0,1,743,3172)" fill="none" ed:tosuperid="550" stroke-linecap="round" stroke="#696969" ed:parentid="536" stroke-linejoin="round"/><path id="553" d="M-13.5,84C5.4,84,-13.5,-84,13.5,-84" transform="matrix(1,0,0,1,769,3501)" fill="none" ed:tosuperid="552" stroke-linecap="round" stroke="#696969" ed:parentid="538" stroke-linejoin="round"/><path id="555" d="M-13.5,40.5C4.8,40.5,-12.1,-40.5,13.5,-40.5" transform="matrix(1,0,0,1,769,3544)" fill="none" ed:tosuperid="554" stroke-linecap="round" stroke="#696969" ed:parentid="538" stroke-linejoin="round"/><path id="557" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,769,3605)" fill="none" ed:tosuperid="556" stroke-linecap="round" stroke="#696969" ed:parentid="538" stroke-linejoin="round"/><path id="559" d="M-13.5,-96.5C5.4,-96.5,-13.5,96.5,13.5,96.5" transform="matrix(1,0,0,1,769,3681)" fill="none" ed:tosuperid="558" stroke-linecap="round" stroke="#696969" ed:parentid="538" stroke-linejoin="round"/><path id="561" d="M-13.5,233.4C5.4,233.4,-13.5,-233.4,13.5,-233.4" transform="matrix(1,0,0,1,650,3096)" fill="none" ed:tosuperid="560" stroke-linecap="round" stroke="#696969" ed:parentid="108" stroke-linejoin="round"/><path id="563" d="M-13.5,101.3C5.4,101.3,-13.5,-101.3,13.5,-101.3" transform="matrix(1,0,0,1,743,2995)" fill="none" ed:tosuperid="562" stroke-linecap="round" stroke="#696969" ed:parentid="536" stroke-linejoin="round"/><path id="565" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,899,2925)" fill="none" ed:tosuperid="564" stroke-linecap="round" stroke="#696969" ed:parentid="540" stroke-linejoin="round"/><path id="567" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,912,2968)" fill="none" ed:tosuperid="566" stroke-linecap="round" stroke="#696969" ed:parentid="542" stroke-linejoin="round"/><path id="569" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,912,2993)" fill="none" ed:tosuperid="568" stroke-linecap="round" stroke="#696969" ed:parentid="542" stroke-linejoin="round"/><path id="571" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,912,3044)" fill="none" ed:tosuperid="570" stroke-linecap="round" stroke="#696969" ed:parentid="544" stroke-linejoin="round"/><path id="573" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,912,3060)" fill="none" ed:tosuperid="572" stroke-linecap="round" stroke="#696969" ed:parentid="544" stroke-linejoin="round"/><path id="575" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,1020,3037)" fill="none" ed:tosuperid="574" stroke-linecap="round" stroke="#696969" ed:parentid="570" stroke-linejoin="round"/><path id="577" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,938,3113)" fill="none" ed:tosuperid="576" stroke-linecap="round" stroke="#696969" ed:parentid="546" stroke-linejoin="round"/><path id="579" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,938,3163)" fill="none" ed:tosuperid="578" stroke-linecap="round" stroke="#696969" ed:parentid="548" stroke-linejoin="round"/><path id="581" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" transform="matrix(1,0,0,1,912,3224)" fill="none" ed:tosuperid="580" stroke-linecap="round" stroke="#696969" ed:parentid="550" stroke-linejoin="round"/><path id="583" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,912,3249)" fill="none" ed:tosuperid="582" stroke-linecap="round" stroke="#696969" ed:parentid="550" stroke-linejoin="round"/><path id="585" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,912,3274)" fill="none" ed:tosuperid="584" stroke-linecap="round" stroke="#696969" ed:parentid="550" stroke-linejoin="round"/><path id="587" d="M-13.5,119.8C5.4,119.8,-13.5,-119.8,13.5,-119.8" transform="matrix(1,0,0,1,769,3465)" fill="none" ed:tosuperid="586" stroke-linecap="round" stroke="#696969" ed:parentid="538" stroke-linejoin="round"/><path id="589" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,1061,3337)" fill="none" ed:tosuperid="588" stroke-linecap="round" stroke="#696969" ed:parentid="586" stroke-linejoin="round"/><path id="591" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,1061,3353)" fill="none" ed:tosuperid="590" stroke-linecap="round" stroke="#696969" ed:parentid="586" stroke-linejoin="round"/><path id="593" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,951,3404)" fill="none" ed:tosuperid="592" stroke-linecap="round" stroke="#696969" ed:parentid="552" stroke-linejoin="round"/><path id="595" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,951,3429)" fill="none" ed:tosuperid="594" stroke-linecap="round" stroke="#696969" ed:parentid="552" stroke-linejoin="round"/><path id="597" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,964,3488)" fill="none" ed:tosuperid="596" stroke-linecap="round" stroke="#696969" ed:parentid="554" stroke-linejoin="round"/><path id="599" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,964,3504)" fill="none" ed:tosuperid="598" stroke-linecap="round" stroke="#696969" ed:parentid="554" stroke-linejoin="round"/><path id="601" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,964,3519)" fill="none" ed:tosuperid="600" stroke-linecap="round" stroke="#696969" ed:parentid="554" stroke-linejoin="round"/><path id="603" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,953,3605)" fill="none" ed:tosuperid="602" stroke-linecap="round" stroke="#696969" ed:parentid="556" stroke-linejoin="round"/><path id="605" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,953,3630)" fill="none" ed:tosuperid="604" stroke-linecap="round" stroke="#696969" ed:parentid="556" stroke-linejoin="round"/><path id="607" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" transform="matrix(1,0,0,1,953,3655)" fill="none" ed:tosuperid="606" stroke-linecap="round" stroke="#696969" ed:parentid="556" stroke-linejoin="round"/><path id="609" d="M-13.5,31C3.7,31,-9.4,-31,13.5,-31" transform="matrix(1,0,0,1,964,3747)" fill="none" ed:tosuperid="608" stroke-linecap="round" stroke="#696969" ed:parentid="558" stroke-linejoin="round"/><path id="611" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,964,3762)" fill="none" ed:tosuperid="610" stroke-linecap="round" stroke="#696969" ed:parentid="558" stroke-linejoin="round"/><path id="613" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,964,3778)" fill="none" ed:tosuperid="612" stroke-linecap="round" stroke="#696969" ed:parentid="558" stroke-linejoin="round"/><path id="615" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,964,3793)" fill="none" ed:tosuperid="614" stroke-linecap="round" stroke="#696969" ed:parentid="558" stroke-linejoin="round"/><path id="617" d="M-13.5,-31C3.7,-31,-9.4,31,13.5,31" transform="matrix(1,0,0,1,964,3809)" fill="none" ed:tosuperid="616" stroke-linecap="round" stroke="#696969" ed:parentid="558" stroke-linejoin="round"/><path id="619" d="M-13.5,56C5.4,56,-13.5,-56,13.5,-56" transform="matrix(1,0,0,1,786,624)" fill="none" ed:tosuperid="618" stroke-linecap="round" stroke="#696969" ed:parentid="378" stroke-linejoin="round"/><path id="621" d="M-13.5,35.8C4.3,35.8,-10.9,-35.8,13.5,-35.8" transform="matrix(1,0,0,1,786,644)" fill="none" ed:tosuperid="620" stroke-linecap="round" stroke="#696969" ed:parentid="378" stroke-linejoin="round"/><path id="623" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,786,665)" fill="none" ed:tosuperid="622" stroke-linecap="round" stroke="#696969" ed:parentid="378" stroke-linejoin="round"/><path id="625" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,786,685)" fill="none" ed:tosuperid="624" stroke-linecap="round" stroke="#696969" ed:parentid="378" stroke-linejoin="round"/><path id="627" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,786,713)" fill="none" ed:tosuperid="626" stroke-linecap="round" stroke="#696969" ed:parentid="378" stroke-linejoin="round"/><path id="629" d="M-13.5,-65.5C5.4,-65.5,-13.5,65.5,13.5,65.5" transform="matrix(1,0,0,1,786,746)" fill="none" ed:tosuperid="628" stroke-linecap="round" stroke="#696969" ed:parentid="378" stroke-linejoin="round"/><path id="631" d="M-13.5,-90.5C5.4,-90.5,-13.5,90.5,13.5,90.5" transform="matrix(1,0,0,1,786,771)" fill="none" ed:tosuperid="630" stroke-linecap="round" stroke="#696969" ed:parentid="378" stroke-linejoin="round"/><path id="635" d="M-13.5,50C5.3,50,-13.4,-50,13.5,-50" transform="matrix(1,0,0,1,786,992)" fill="none" ed:tosuperid="634" stroke-linecap="round" stroke="#696969" ed:parentid="380" stroke-linejoin="round"/><path id="637" d="M-13.5,17.3C1.2,17.3,-3.7,-17.3,13.5,-17.3" transform="matrix(1,0,0,1,786,1025)" fill="none" ed:tosuperid="636" stroke-linecap="round" stroke="#696969" ed:parentid="380" stroke-linejoin="round"/><path id="639" d="M-13.5,-28C3.2,-28,-8.3,28,13.5,28" transform="matrix(1,0,0,1,786,1070)" fill="none" ed:tosuperid="638" stroke-linecap="round" stroke="#696969" ed:parentid="380" stroke-linejoin="round"/><path id="641" d="M-13.5,-65.5C5.4,-65.5,-13.5,65.5,13.5,65.5" transform="matrix(1,0,0,1,786,1108)" fill="none" ed:tosuperid="640" stroke-linecap="round" stroke="#696969" ed:parentid="380" stroke-linejoin="round"/><path id="643" d="M-13.5,159C5.4,159,-13.5,-159,13.5,-159" transform="matrix(1,0,0,1,1004,1413)" fill="none" ed:tosuperid="642" stroke-linecap="round" stroke="#696969" ed:parentid="382" stroke-linejoin="round"/><path id="645" d="M-13.5,134C5.4,134,-13.5,-134,13.5,-134" transform="matrix(1,0,0,1,1004,1438)" fill="none" ed:tosuperid="644" stroke-linecap="round" stroke="#696969" ed:parentid="382" stroke-linejoin="round"/><path id="647" d="M-13.5,101.3C5.4,101.3,-13.5,-101.3,13.5,-101.3" transform="matrix(1,0,0,1,1004,1471)" fill="none" ed:tosuperid="646" stroke-linecap="round" stroke="#696969" ed:parentid="382" stroke-linejoin="round"/><path id="649" d="M-13.5,29.8C3.5,29.8,-9,-29.8,13.5,-29.8" transform="matrix(1,0,0,1,1004,1542)" fill="none" ed:tosuperid="648" stroke-linecap="round" stroke="#696969" ed:parentid="382" stroke-linejoin="round"/><path id="651" d="M-13.5,-88.8C5.4,-88.8,-13.5,88.8,13.5,88.8" transform="matrix(1,0,0,1,1004,1661)" fill="none" ed:tosuperid="650" stroke-linecap="round" stroke="#696969" ed:parentid="382" stroke-linejoin="round"/><path id="653" d="M-13.5,-163.8C5.4,-163.8,-13.5,163.8,13.5,163.8" transform="matrix(1,0,0,1,1004,1736)" fill="none" ed:tosuperid="652" stroke-linecap="round" stroke="#696969" ed:parentid="382" stroke-linejoin="round"/><path id="654" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,1146,1382)" fill="none" ed:tosuperid="436" stroke-linecap="round" stroke="#696969" ed:parentid="646" stroke-linejoin="round"/><path id="655" d="M-13.5,18.5C1.5,18.5,-4.3,-18.5,13.5,-18.5" transform="matrix(1,0,0,1,1225,1494)" fill="none" ed:tosuperid="440" stroke-linecap="round" stroke="#696969" ed:parentid="648" stroke-linejoin="round"/><path id="656" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,1225,1533)" fill="none" ed:tosuperid="442" stroke-linecap="round" stroke="#696969" ed:parentid="648" stroke-linejoin="round"/><path id="658" d="M-13.5,80.9C5.4,80.9,-13.5,-80.9,13.5,-80.9" transform="matrix(1,0,0,1,602,4188)" fill="none" ed:tosuperid="657" stroke-linecap="round" stroke="#696969" ed:parentid="112" stroke-linejoin="round"/><path id="660" d="M-13.5,60.6C5.4,60.6,-13.5,-60.6,13.5,-60.6" transform="matrix(1,0,0,1,602,4209)" fill="none" ed:tosuperid="659" stroke-linecap="round" stroke="#696969" ed:parentid="112" stroke-linejoin="round"/><path id="662" d="M-13.5,9.4C-0.5,9.4,0.3,-9.4,13.5,-9.4" transform="matrix(1,0,0,1,602,4260)" fill="none" ed:tosuperid="661" stroke-linecap="round" stroke="#696969" ed:parentid="112" stroke-linejoin="round"/><path id="664" d="M-13.5,-49.6C5.3,-49.6,-13.3,49.6,13.5,49.6" transform="matrix(1,0,0,1,602,4319)" fill="none" ed:tosuperid="663" stroke-linecap="round" stroke="#696969" ed:parentid="112" stroke-linejoin="round"/><path id="666" d="M-13.5,-93.1C5.4,-93.1,-13.5,93.1,13.5,93.1" transform="matrix(1,0,0,1,602,4362)" fill="none" ed:tosuperid="665" stroke-linecap="round" stroke="#696969" ed:parentid="112" stroke-linejoin="round"/><path id="668" d="M-13.5,-146.1C5.4,-146.1,-13.5,146.1,13.5,146.1" transform="matrix(1,0,0,1,602,4415)" fill="none" ed:tosuperid="667" stroke-linecap="round" stroke="#696969" ed:parentid="112" stroke-linejoin="round"/><path id="670" d="M-13.5,168.4C5.4,168.4,-13.5,-168.4,13.5,-168.4" transform="matrix(1,0,0,1,602,4972)" fill="none" ed:tosuperid="669" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="672" d="M-13.5,98.1C5.4,98.1,-13.5,-98.1,13.5,-98.1" transform="matrix(1,0,0,1,602,5042)" fill="none" ed:tosuperid="671" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="674" d="M-13.5,77.9C5.4,77.9,-13.5,-77.9,13.5,-77.9" transform="matrix(1,0,0,1,602,5062)" fill="none" ed:tosuperid="673" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="676" d="M-13.5,34.4C4.1,34.4,-10.5,-34.4,13.5,-34.4" transform="matrix(1,0,0,1,602,5106)" fill="none" ed:tosuperid="675" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="678" d="M-13.5,-26.4C2.9,-26.4,-7.7,26.4,13.5,26.4" transform="matrix(1,0,0,1,602,5167)" fill="none" ed:tosuperid="677" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="680" d="M-13.5,-79.4C5.4,-79.4,-13.5,79.4,13.5,79.4" transform="matrix(1,0,0,1,602,5220)" fill="none" ed:tosuperid="679" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="682" d="M-13.5,-160.4C5.4,-160.4,-13.5,160.4,13.5,160.4" transform="matrix(1,0,0,1,602,5301)" fill="none" ed:tosuperid="681" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="684" d="M-13.5,-225.9C5.4,-225.9,-13.5,225.9,13.5,225.9" transform="matrix(1,0,0,1,602,5366)" fill="none" ed:tosuperid="683" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="686" d="M-13.5,-250.9C5.4,-250.9,-13.5,250.9,13.5,250.9" transform="matrix(1,0,0,1,602,5391)" fill="none" ed:tosuperid="685" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="688" d="M-13.5,204.1C5.4,204.1,-13.5,-204.1,13.5,-204.1" transform="matrix(1,0,0,1,602,6013)" fill="none" ed:tosuperid="687" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="690" d="M-13.5,176.1C5.4,176.1,-13.5,-176.1,13.5,-176.1" transform="matrix(1,0,0,1,602,6041)" fill="none" ed:tosuperid="689" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="692" d="M-13.5,143.4C5.4,143.4,-13.5,-143.4,13.5,-143.4" transform="matrix(1,0,0,1,602,6074)" fill="none" ed:tosuperid="691" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="694" d="M-13.5,110.6C5.4,110.6,-13.5,-110.6,13.5,-110.6" transform="matrix(1,0,0,1,602,6107)" fill="none" ed:tosuperid="693" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="696" d="M-13.5,43.4C5,43.4,-12.6,-43.4,13.5,-43.4" transform="matrix(1,0,0,1,602,6174)" fill="none" ed:tosuperid="695" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="698" d="M-13.5,-23.9C2.5,-23.9,-6.7,23.9,13.5,23.9" transform="matrix(1,0,0,1,602,6241)" fill="none" ed:tosuperid="697" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="702" d="M-13.5,-51.9C5.4,-51.9,-13.5,51.9,13.5,51.9" transform="matrix(1,0,0,1,602,6269)" fill="none" ed:tosuperid="701" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="704" d="M-13.5,-100.1C5.4,-100.1,-13.5,100.1,13.5,100.1" transform="matrix(1,0,0,1,602,6317)" fill="none" ed:tosuperid="703" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="706" d="M-13.5,-148.4C5.4,-148.4,-13.5,148.4,13.5,148.4" transform="matrix(1,0,0,1,602,6366)" fill="none" ed:tosuperid="705" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="708" d="M-13.5,-194.9C5.4,-194.9,-13.5,194.9,13.5,194.9" transform="matrix(1,0,0,1,602,6412)" fill="none" ed:tosuperid="707" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="710" d="M-13.5,-253.9C5.4,-253.9,-13.5,253.9,13.5,253.9" transform="matrix(1,0,0,1,602,6471)" fill="none" ed:tosuperid="709" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="712" d="M-13.5,151.1C5.4,151.1,-13.5,-151.1,13.5,-151.1" transform="matrix(1,0,0,1,602,4118)" fill="none" ed:tosuperid="711" stroke-linecap="round" stroke="#696969" ed:parentid="112" stroke-linejoin="round"/><path id="714" d="M-13.5,126.1C5.4,126.1,-13.5,-126.1,13.5,-126.1" transform="matrix(1,0,0,1,602,4143)" fill="none" ed:tosuperid="713" stroke-linecap="round" stroke="#696969" ed:parentid="112" stroke-linejoin="round"/><path id="716" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,747,4062)" fill="none" ed:tosuperid="715" stroke-linecap="round" stroke="#696969" ed:parentid="177" stroke-linejoin="round"/><path id="718" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,760,4112)" fill="none" ed:tosuperid="717" stroke-linecap="round" stroke="#696969" ed:parentid="657" stroke-linejoin="round"/><path id="720" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,786,4148)" fill="none" ed:tosuperid="719" stroke-linecap="round" stroke="#696969" ed:parentid="659" stroke-linejoin="round"/><path id="722" d="M-13.5,35.8C4.3,35.8,-10.9,-35.8,13.5,-35.8" transform="matrix(1,0,0,1,809,4215)" fill="none" ed:tosuperid="721" stroke-linecap="round" stroke="#696969" ed:parentid="661" stroke-linejoin="round"/><path id="724" d="M-13.5,10.8C-0.2,10.8,-0.4,-10.8,13.5,-10.8" transform="matrix(1,0,0,1,809,4240)" fill="none" ed:tosuperid="723" stroke-linecap="round" stroke="#696969" ed:parentid="661" stroke-linejoin="round"/><path id="726" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,809,4255)" fill="none" ed:tosuperid="725" stroke-linecap="round" stroke="#696969" ed:parentid="661" stroke-linejoin="round"/><path id="730" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,809,4271)" fill="none" ed:tosuperid="729" stroke-linecap="round" stroke="#696969" ed:parentid="661" stroke-linejoin="round"/><path id="732" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,943,4291)" fill="none" ed:tosuperid="731" stroke-linecap="round" stroke="#696969" ed:parentid="729" stroke-linejoin="round"/><path id="736" d="M-13.5,-35.8C4.3,-35.8,-10.9,35.8,13.5,35.8" transform="matrix(1,0,0,1,809,4286)" fill="none" ed:tosuperid="735" stroke-linecap="round" stroke="#696969" ed:parentid="661" stroke-linejoin="round"/><path id="738" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,995,4322)" fill="none" ed:tosuperid="737" stroke-linecap="round" stroke="#696969" ed:parentid="735" stroke-linejoin="round"/><path id="740" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,721,4361)" fill="none" ed:tosuperid="739" stroke-linecap="round" stroke="#696969" ed:parentid="663" stroke-linejoin="round"/><path id="742" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,721,4376)" fill="none" ed:tosuperid="741" stroke-linecap="round" stroke="#696969" ed:parentid="663" stroke-linejoin="round"/><path id="744" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,920,4384)" fill="none" ed:tosuperid="743" stroke-linecap="round" stroke="#696969" ed:parentid="741" stroke-linejoin="round"/><path id="748" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,760,4448)" fill="none" ed:tosuperid="747" stroke-linecap="round" stroke="#696969" ed:parentid="665" stroke-linejoin="round"/><path id="750" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,922,4428)" fill="none" ed:tosuperid="749" stroke-linecap="round" stroke="#696969" ed:parentid="747" stroke-linejoin="round"/><path id="752" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,922,4453)" fill="none" ed:tosuperid="751" stroke-linecap="round" stroke="#696969" ed:parentid="747" stroke-linejoin="round"/><path id="754" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,760,4476)" fill="none" ed:tosuperid="753" stroke-linecap="round" stroke="#696969" ed:parentid="665" stroke-linejoin="round"/><path id="756" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,695,4554)" fill="none" ed:tosuperid="755" stroke-linecap="round" stroke="#696969" ed:parentid="667" stroke-linejoin="round"/><path id="758" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,695,4579)" fill="none" ed:tosuperid="757" stroke-linecap="round" stroke="#696969" ed:parentid="667" stroke-linejoin="round"/><path id="760" d="M-13.5,233.9C5.4,233.9,-13.5,-233.9,13.5,-233.9" transform="matrix(1,0,0,1,602,4906)" fill="none" ed:tosuperid="759" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="762" d="M-13.5,34.5C4.1,34.5,-10.5,-34.5,13.5,-34.5" transform="matrix(1,0,0,1,799,4769)" fill="none" ed:tosuperid="761" stroke-linecap="round" stroke="#696969" ed:parentid="669" stroke-linejoin="round"/><path id="764" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,961,4719)" fill="none" ed:tosuperid="763" stroke-linecap="round" stroke="#696969" ed:parentid="761" stroke-linejoin="round"/><path id="766" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,961,4735)" fill="none" ed:tosuperid="765" stroke-linecap="round" stroke="#696969" ed:parentid="761" stroke-linejoin="round"/><path id="768" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,961,4750)" fill="none" ed:tosuperid="767" stroke-linecap="round" stroke="#696969" ed:parentid="761" stroke-linejoin="round"/><path id="770" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,799,4819)" fill="none" ed:tosuperid="769" stroke-linecap="round" stroke="#696969" ed:parentid="669" stroke-linejoin="round"/><path id="772" d="M-13.5,-50C5.3,-50,-13.4,50,13.5,50" transform="matrix(1,0,0,1,799,4854)" fill="none" ed:tosuperid="771" stroke-linecap="round" stroke="#696969" ed:parentid="669" stroke-linejoin="round"/><path id="774" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,822,4949)" fill="none" ed:tosuperid="773" stroke-linecap="round" stroke="#696969" ed:parentid="671" stroke-linejoin="round"/><path id="778" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,825,5056)" fill="none" ed:tosuperid="777" stroke-linecap="round" stroke="#696969" ed:parentid="675" stroke-linejoin="round"/><path id="780" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,1020,5028)" fill="none" ed:tosuperid="779" stroke-linecap="round" stroke="#696969" ed:parentid="777" stroke-linejoin="round"/><path id="782" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,1020,5053)" fill="none" ed:tosuperid="781" stroke-linecap="round" stroke="#696969" ed:parentid="777" stroke-linejoin="round"/><path id="784" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,825,5084)" fill="none" ed:tosuperid="783" stroke-linecap="round" stroke="#696969" ed:parentid="675" stroke-linejoin="round"/><path id="786" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,1020,5097)" fill="none" ed:tosuperid="785" stroke-linecap="round" stroke="#696969" ed:parentid="783" stroke-linejoin="round"/><path id="788" d="M-13.5,-28C3.2,-28,-8.3,28,13.5,28" transform="matrix(1,0,0,1,825,5100)" fill="none" ed:tosuperid="787" stroke-linecap="round" stroke="#696969" ed:parentid="675" stroke-linejoin="round"/><path id="790" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,994,5128)" fill="none" ed:tosuperid="789" stroke-linecap="round" stroke="#696969" ed:parentid="787" stroke-linejoin="round"/><path id="792" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,773,5185)" fill="none" ed:tosuperid="791" stroke-linecap="round" stroke="#696969" ed:parentid="677" stroke-linejoin="round"/><path id="794" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,773,5210)" fill="none" ed:tosuperid="793" stroke-linecap="round" stroke="#696969" ed:parentid="677" stroke-linejoin="round"/><path id="796" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,721,5279)" fill="none" ed:tosuperid="795" stroke-linecap="round" stroke="#696969" ed:parentid="679" stroke-linejoin="round"/><path id="798" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,721,5299)" fill="none" ed:tosuperid="797" stroke-linecap="round" stroke="#696969" ed:parentid="679" stroke-linejoin="round"/><path id="800" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,721,5319)" fill="none" ed:tosuperid="799" stroke-linecap="round" stroke="#696969" ed:parentid="679" stroke-linejoin="round"/><path id="802" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,929,5259)" fill="none" ed:tosuperid="801" stroke-linecap="round" stroke="#696969" ed:parentid="795" stroke-linejoin="round"/><path id="804" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,942,5304)" fill="none" ed:tosuperid="803" stroke-linecap="round" stroke="#696969" ed:parentid="797" stroke-linejoin="round"/><path id="806" d="M-13.5,35.8C4.3,35.8,-10.9,-35.8,13.5,-35.8" transform="matrix(1,0,0,1,773,5425)" fill="none" ed:tosuperid="805" stroke-linecap="round" stroke="#696969" ed:parentid="681" stroke-linejoin="round"/><path id="808" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,773,5474)" fill="none" ed:tosuperid="807" stroke-linecap="round" stroke="#696969" ed:parentid="681" stroke-linejoin="round"/><path id="810" d="M-13.5,32.8C3.9,32.8,-10,-32.8,13.5,-32.8" transform="matrix(1,0,0,1,961,5453)" fill="none" ed:tosuperid="809" stroke-linecap="round" stroke="#696969" ed:parentid="807" stroke-linejoin="round"/><path id="812" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,961,5478)" fill="none" ed:tosuperid="811" stroke-linecap="round" stroke="#696969" ed:parentid="807" stroke-linejoin="round"/><path id="814" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,961,5494)" fill="none" ed:tosuperid="813" stroke-linecap="round" stroke="#696969" ed:parentid="807" stroke-linejoin="round"/><path id="816" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,961,5519)" fill="none" ed:tosuperid="815" stroke-linecap="round" stroke="#696969" ed:parentid="807" stroke-linejoin="round"/><path id="818" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,812,5597)" fill="none" ed:tosuperid="817" stroke-linecap="round" stroke="#696969" ed:parentid="683" stroke-linejoin="round"/><path id="820" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,695,5647)" fill="none" ed:tosuperid="819" stroke-linecap="round" stroke="#696969" ed:parentid="685" stroke-linejoin="round"/><path id="822" d="M-13.5,254.1C5.4,254.1,-13.5,-254.1,13.5,-254.1" transform="matrix(1,0,0,1,602,5963)" fill="none" ed:tosuperid="821" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="824" d="M-13.5,219.6C5.4,219.6,-13.5,-219.6,13.5,-219.6" transform="matrix(1,0,0,1,602,5998)" fill="none" ed:tosuperid="823" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="826" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,844,5809)" fill="none" ed:tosuperid="825" stroke-linecap="round" stroke="#696969" ed:parentid="687" stroke-linejoin="round"/><path id="828" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,786,5862)" fill="none" ed:tosuperid="827" stroke-linecap="round" stroke="#696969" ed:parentid="689" stroke-linejoin="round"/><path id="830" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,786,5878)" fill="none" ed:tosuperid="829" stroke-linecap="round" stroke="#696969" ed:parentid="689" stroke-linejoin="round"/><path id="832" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,812,5935)" fill="none" ed:tosuperid="831" stroke-linecap="round" stroke="#696969" ed:parentid="691" stroke-linejoin="round"/><path id="834" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,734,5984)" fill="none" ed:tosuperid="833" stroke-linecap="round" stroke="#696969" ed:parentid="693" stroke-linejoin="round"/><path id="836" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,734,6009)" fill="none" ed:tosuperid="835" stroke-linecap="round" stroke="#696969" ed:parentid="693" stroke-linejoin="round"/><path id="838" d="M-13.5,29.8C3.5,29.8,-9,-29.8,13.5,-29.8" transform="matrix(1,0,0,1,812,6101)" fill="none" ed:tosuperid="837" stroke-linecap="round" stroke="#696969" ed:parentid="695" stroke-linejoin="round"/><path id="840" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,812,6135)" fill="none" ed:tosuperid="839" stroke-linecap="round" stroke="#696969" ed:parentid="695" stroke-linejoin="round"/><path id="842" d="M-13.5,-39.3C4.7,-39.3,-11.8,39.3,13.5,39.3" transform="matrix(1,0,0,1,812,6170)" fill="none" ed:tosuperid="841" stroke-linecap="round" stroke="#696969" ed:parentid="695" stroke-linejoin="round"/><path id="844" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,805,6253)" fill="none" ed:tosuperid="843" stroke-linecap="round" stroke="#696969" ed:parentid="697" stroke-linejoin="round"/><path id="846" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,805,6278)" fill="none" ed:tosuperid="845" stroke-linecap="round" stroke="#696969" ed:parentid="697" stroke-linejoin="round"/><path id="848" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,838,6321)" fill="none" ed:tosuperid="847" stroke-linecap="round" stroke="#696969" ed:parentid="701" stroke-linejoin="round"/><path id="850" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,721,6394)" fill="none" ed:tosuperid="849" stroke-linecap="round" stroke="#696969" ed:parentid="703" stroke-linejoin="round"/><path id="852" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,721,6410)" fill="none" ed:tosuperid="851" stroke-linecap="round" stroke="#696969" ed:parentid="703" stroke-linejoin="round"/><path id="854" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,721,6425)" fill="none" ed:tosuperid="853" stroke-linecap="round" stroke="#696969" ed:parentid="703" stroke-linejoin="round"/><path id="856" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,721,6450)" fill="none" ed:tosuperid="855" stroke-linecap="round" stroke="#696969" ed:parentid="703" stroke-linejoin="round"/><path id="858" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,812,6514)" fill="none" ed:tosuperid="857" stroke-linecap="round" stroke="#696969" ed:parentid="705" stroke-linejoin="round"/><path id="860" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,752,6607)" fill="none" ed:tosuperid="859" stroke-linecap="round" stroke="#696969" ed:parentid="707" stroke-linejoin="round"/><path id="862" d="M-13.5,31C3.7,31,-9.4,-31,13.5,-31" transform="matrix(1,0,0,1,953,6576)" fill="none" ed:tosuperid="861" stroke-linecap="round" stroke="#696969" ed:parentid="859" stroke-linejoin="round"/><path id="864" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,953,6592)" fill="none" ed:tosuperid="863" stroke-linecap="round" stroke="#696969" ed:parentid="859" stroke-linejoin="round"/><path id="866" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,953,6607)" fill="none" ed:tosuperid="865" stroke-linecap="round" stroke="#696969" ed:parentid="859" stroke-linejoin="round"/><path id="868" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,953,6623)" fill="none" ed:tosuperid="867" stroke-linecap="round" stroke="#696969" ed:parentid="859" stroke-linejoin="round"/><path id="870" d="M-13.5,-31C3.7,-31,-9.4,31,13.5,31" transform="matrix(1,0,0,1,953,6638)" fill="none" ed:tosuperid="869" stroke-linecap="round" stroke="#696969" ed:parentid="859" stroke-linejoin="round"/><path id="872" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,703,6713)" fill="none" ed:tosuperid="871" stroke-linecap="round" stroke="#696969" ed:parentid="709" stroke-linejoin="round"/><path id="874" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,703,6738)" fill="none" ed:tosuperid="873" stroke-linecap="round" stroke="#696969" ed:parentid="709" stroke-linejoin="round"/><path id="876" d="M-13.5,63.6C5.4,63.6,-13.5,-63.6,13.5,-63.6" transform="matrix(1,0,0,1,618,6921)" fill="none" ed:tosuperid="875" stroke-linecap="round" stroke="#696969" ed:parentid="118" stroke-linejoin="round"/><path id="878" d="M-13.5,48.1C5.3,48.1,-13.2,-48.1,13.5,-48.1" transform="matrix(1,0,0,1,618,6937)" fill="none" ed:tosuperid="877" stroke-linecap="round" stroke="#696969" ed:parentid="118" stroke-linejoin="round"/><path id="880" d="M-13.5,9.4C-0.5,9.4,0.3,-9.4,13.5,-9.4" transform="matrix(1,0,0,1,618,6975)" fill="none" ed:tosuperid="879" stroke-linecap="round" stroke="#696969" ed:parentid="118" stroke-linejoin="round"/><path id="882" d="M-13.5,-29.4C3.4,-29.4,-8.9,29.4,13.5,29.4" transform="matrix(1,0,0,1,618,7014)" fill="none" ed:tosuperid="881" stroke-linecap="round" stroke="#696969" ed:parentid="118" stroke-linejoin="round"/><path id="884" d="M-13.5,-49.6C5.3,-49.6,-13.3,49.6,13.5,49.6" transform="matrix(1,0,0,1,618,7034)" fill="none" ed:tosuperid="883" stroke-linecap="round" stroke="#696969" ed:parentid="118" stroke-linejoin="round"/><path id="886" d="M-13.5,-69.9C5.4,-69.9,-13.5,69.9,13.5,69.9" transform="matrix(1,0,0,1,618,7055)" fill="none" ed:tosuperid="885" stroke-linecap="round" stroke="#696969" ed:parentid="118" stroke-linejoin="round"/><path id="888" d="M-13.5,-85.4C5.4,-85.4,-13.5,85.4,13.5,85.4" transform="matrix(1,0,0,1,618,7070)" fill="none" ed:tosuperid="887" stroke-linecap="round" stroke="#696969" ed:parentid="118" stroke-linejoin="round"/><path id="890" d="M-13.5,-100.9C5.4,-100.9,-13.5,100.9,13.5,100.9" transform="matrix(1,0,0,1,618,7086)" fill="none" ed:tosuperid="889" stroke-linecap="round" stroke="#696969" ed:parentid="118" stroke-linejoin="round"/><path id="892" d="M-13.5,302.1C5.4,302.1,-13.5,-302.1,13.5,-302.1" transform="matrix(1,0,0,1,634,7637)" fill="none" ed:tosuperid="891" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="894" d="M-13.5,269.4C5.4,269.4,-13.5,-269.4,13.5,-269.4" transform="matrix(1,0,0,1,634,7669)" fill="none" ed:tosuperid="893" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="896" d="M-13.5,228.9C5.4,228.9,-13.5,-228.9,13.5,-228.9" transform="matrix(1,0,0,1,634,7710)" fill="none" ed:tosuperid="895" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="898" d="M-13.5,175.9C5.4,175.9,-13.5,-175.9,13.5,-175.9" transform="matrix(1,0,0,1,634,7763)" fill="none" ed:tosuperid="897" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="900" d="M-13.5,135.4C5.4,135.4,-13.5,-135.4,13.5,-135.4" transform="matrix(1,0,0,1,634,7803)" fill="none" ed:tosuperid="899" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="902" d="M-13.5,119.9C5.4,119.9,-13.5,-119.9,13.5,-119.9" transform="matrix(1,0,0,1,634,7819)" fill="none" ed:tosuperid="901" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="904" d="M-13.5,65.1C5.4,65.1,-13.5,-65.1,13.5,-65.1" transform="matrix(1,0,0,1,634,7874)" fill="none" ed:tosuperid="903" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="906" d="M-13.5,-16.4C1,-16.4,-3.3,16.4,13.5,16.4" transform="matrix(1,0,0,1,634,7955)" fill="none" ed:tosuperid="905" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="908" d="M-13.5,-72.9C5.4,-72.9,-13.5,72.9,13.5,72.9" transform="matrix(1,0,0,1,634,8012)" fill="none" ed:tosuperid="907" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="910" d="M-13.5,-134.1C5.4,-134.1,-13.5,134.1,13.5,134.1" transform="matrix(1,0,0,1,634,8073)" fill="none" ed:tosuperid="909" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="912" d="M-13.5,-181.1C5.4,-181.1,-13.5,181.1,13.5,181.1" transform="matrix(1,0,0,1,634,8120)" fill="none" ed:tosuperid="911" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="914" d="M-13.5,-240.6C5.4,-240.6,-13.5,240.6,13.5,240.6" transform="matrix(1,0,0,1,634,8179)" fill="none" ed:tosuperid="913" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="916" d="M-13.5,-329.9C5.4,-329.9,-13.5,329.9,13.5,329.9" transform="matrix(1,0,0,1,634,8269)" fill="none" ed:tosuperid="915" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="918" d="M-13.5,79.1C5.4,79.1,-13.5,-79.1,13.5,-79.1" transform="matrix(1,0,0,1,618,6906)" fill="none" ed:tosuperid="917" stroke-linecap="round" stroke="#696969" ed:parentid="118" stroke-linejoin="round"/><path id="920" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,791,6858)" fill="none" ed:tosuperid="919" stroke-linecap="round" stroke="#696969" ed:parentid="875" stroke-linejoin="round"/><path id="922" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,828,6943)" fill="none" ed:tosuperid="921" stroke-linecap="round" stroke="#696969" ed:parentid="879" stroke-linejoin="round"/><path id="924" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,828,6958)" fill="none" ed:tosuperid="923" stroke-linecap="round" stroke="#696969" ed:parentid="879" stroke-linejoin="round"/><path id="926" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,828,6974)" fill="none" ed:tosuperid="925" stroke-linecap="round" stroke="#696969" ed:parentid="879" stroke-linejoin="round"/><path id="928" d="M-13.5,-23.3C2.4,-23.3,-6.4,23.3,13.5,23.3" transform="matrix(1,0,0,1,828,6989)" fill="none" ed:tosuperid="927" stroke-linecap="round" stroke="#696969" ed:parentid="879" stroke-linejoin="round"/><path id="930" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,750,7089)" fill="none" ed:tosuperid="929" stroke-linecap="round" stroke="#696969" ed:parentid="883" stroke-linejoin="round"/><path id="932" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,750,7125)" fill="none" ed:tosuperid="931" stroke-linecap="round" stroke="#696969" ed:parentid="885" stroke-linejoin="round"/><path id="934" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,815,7156)" fill="none" ed:tosuperid="933" stroke-linecap="round" stroke="#696969" ed:parentid="887" stroke-linejoin="round"/><path id="936" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,711,7187)" fill="none" ed:tosuperid="935" stroke-linecap="round" stroke="#696969" ed:parentid="889" stroke-linejoin="round"/><path id="938" d="M-13.5,337.9C5.4,337.9,-13.5,-337.9,13.5,-337.9" transform="matrix(1,0,0,1,634,7601)" fill="none" ed:tosuperid="937" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="940" d="M-13.5,322.4C5.4,322.4,-13.5,-322.4,13.5,-322.4" transform="matrix(1,0,0,1,634,7616)" fill="none" ed:tosuperid="939" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="942" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,837,7339)" fill="none" ed:tosuperid="941" stroke-linecap="round" stroke="#696969" ed:parentid="891" stroke-linejoin="round"/><path id="944" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,824,7388)" fill="none" ed:tosuperid="943" stroke-linecap="round" stroke="#696969" ed:parentid="893" stroke-linejoin="round"/><path id="946" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,824,7413)" fill="none" ed:tosuperid="945" stroke-linecap="round" stroke="#696969" ed:parentid="893" stroke-linejoin="round"/><path id="948" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,761,7478)" fill="none" ed:tosuperid="947" stroke-linecap="round" stroke="#696969" ed:parentid="895" stroke-linejoin="round"/><path id="950" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,761,7494)" fill="none" ed:tosuperid="949" stroke-linecap="round" stroke="#696969" ed:parentid="895" stroke-linejoin="round"/><path id="952" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,766,7587)" fill="none" ed:tosuperid="951" stroke-linecap="round" stroke="#696969" ed:parentid="897" stroke-linejoin="round"/><path id="954" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" transform="matrix(1,0,0,1,986,7562)" fill="none" ed:tosuperid="953" stroke-linecap="round" stroke="#696969" ed:parentid="951" stroke-linejoin="round"/><path id="956" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,986,7587)" fill="none" ed:tosuperid="955" stroke-linecap="round" stroke="#696969" ed:parentid="951" stroke-linejoin="round"/><path id="958" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,986,7612)" fill="none" ed:tosuperid="957" stroke-linecap="round" stroke="#696969" ed:parentid="951" stroke-linejoin="round"/><path id="960" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,850,7668)" fill="none" ed:tosuperid="959" stroke-linecap="round" stroke="#696969" ed:parentid="899" stroke-linejoin="round"/><path id="962" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,792,7699)" fill="none" ed:tosuperid="961" stroke-linecap="round" stroke="#696969" ed:parentid="901" stroke-linejoin="round"/><path id="964" d="M-13.5,29.8C3.5,29.8,-9,-29.8,13.5,-29.8" transform="matrix(1,0,0,1,824,7779)" fill="none" ed:tosuperid="963" stroke-linecap="round" stroke="#696969" ed:parentid="903" stroke-linejoin="round"/><path id="966" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" transform="matrix(1,0,0,1,824,7804)" fill="none" ed:tosuperid="965" stroke-linecap="round" stroke="#696969" ed:parentid="903" stroke-linejoin="round"/><path id="968" d="M-13.5,-39.3C4.7,-39.3,-11.8,39.3,13.5,39.3" transform="matrix(1,0,0,1,824,7848)" fill="none" ed:tosuperid="967" stroke-linecap="round" stroke="#696969" ed:parentid="903" stroke-linejoin="round"/><path id="970" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,824,7964)" fill="none" ed:tosuperid="969" stroke-linecap="round" stroke="#696969" ed:parentid="905" stroke-linejoin="round"/><path id="972" d="M-13.5,-26.8C3,-26.8,-7.9,26.8,13.5,26.8" transform="matrix(1,0,0,1,824,7998)" fill="none" ed:tosuperid="971" stroke-linecap="round" stroke="#696969" ed:parentid="905" stroke-linejoin="round"/><path id="974" d="M-13.5,-14.3C0.6,-14.3,-2.2,14.3,13.5,14.3" transform="matrix(1,0,0,1,766,8099)" fill="none" ed:tosuperid="973" stroke-linecap="round" stroke="#696969" ed:parentid="907" stroke-linejoin="round"/><path id="976" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,826,8195)" fill="none" ed:tosuperid="975" stroke-linecap="round" stroke="#696969" ed:parentid="909" stroke-linejoin="round"/><path id="978" d="M-13.5,-31.5C3.7,-31.5,-9.6,31.5,13.5,31.5" transform="matrix(1,0,0,1,826,8239)" fill="none" ed:tosuperid="977" stroke-linecap="round" stroke="#696969" ed:parentid="909" stroke-linejoin="round"/><path id="980" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" transform="matrix(1,0,0,1,933,8395)" fill="none" ed:tosuperid="979" stroke-linecap="round" stroke="#696969" ed:parentid="913" stroke-linejoin="round"/><path id="982" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,933,8420)" fill="none" ed:tosuperid="981" stroke-linecap="round" stroke="#696969" ed:parentid="913" stroke-linejoin="round"/><path id="984" d="M-13.5,-44C5.1,-44,-12.7,44,13.5,44" transform="matrix(1,0,0,1,933,8464)" fill="none" ed:tosuperid="983" stroke-linecap="round" stroke="#696969" ed:parentid="913" stroke-linejoin="round"/><path id="986" d="M-13.5,29.8C3.5,29.8,-9,-29.8,13.5,-29.8" transform="matrix(1,0,0,1,735,8569)" fill="none" ed:tosuperid="985" stroke-linecap="round" stroke="#696969" ed:parentid="915" stroke-linejoin="round"/><path id="988" d="M-13.5,14.3C0.6,14.3,-2.2,-14.3,13.5,-14.3" transform="matrix(1,0,0,1,735,8584)" fill="none" ed:tosuperid="987" stroke-linecap="round" stroke="#696969" ed:parentid="915" stroke-linejoin="round"/><path id="990" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" transform="matrix(1,0,0,1,735,8628)" fill="none" ed:tosuperid="989" stroke-linecap="round" stroke="#696969" ed:parentid="915" stroke-linejoin="round"/><path id="992" d="M-13.5,102.9C5.4,102.9,-13.5,-102.9,13.5,-102.9" transform="matrix(1,0,0,1,602,8862)" fill="none" ed:tosuperid="991" stroke-linecap="round" stroke="#696969" ed:parentid="122" stroke-linejoin="round"/><path id="994" d="M-13.5,52.9C5.4,52.9,-13.5,-52.9,13.5,-52.9" transform="matrix(1,0,0,1,602,8912)" fill="none" ed:tosuperid="993" stroke-linecap="round" stroke="#696969" ed:parentid="122" stroke-linejoin="round"/><path id="996" d="M-13.5,20.1C1.8,20.1,-5,-20.1,13.5,-20.1" transform="matrix(1,0,0,1,602,8945)" fill="none" ed:tosuperid="995" stroke-linecap="round" stroke="#696969" ed:parentid="122" stroke-linejoin="round"/><path id="998" d="M-13.5,-12.6C0.2,-12.6,-1.4,12.6,13.5,12.6" transform="matrix(1,0,0,1,602,8978)" fill="none" ed:tosuperid="997" stroke-linecap="round" stroke="#696969" ed:parentid="122" stroke-linejoin="round"/><path id="1000" d="M-13.5,-40.6C4.8,-40.6,-12.1,40.6,13.5,40.6" transform="matrix(1,0,0,1,602,9006)" fill="none" ed:tosuperid="999" stroke-linecap="round" stroke="#696969" ed:parentid="122" stroke-linejoin="round"/><path id="1002" d="M-13.5,-65.6C5.4,-65.6,-13.5,65.6,13.5,65.6" transform="matrix(1,0,0,1,602,9031)" fill="none" ed:tosuperid="1001" stroke-linecap="round" stroke="#696969" ed:parentid="122" stroke-linejoin="round"/><path id="1004" d="M-13.5,-90.6C5.4,-90.6,-13.5,90.6,13.5,90.6" transform="matrix(1,0,0,1,602,9056)" fill="none" ed:tosuperid="1003" stroke-linecap="round" stroke="#696969" ed:parentid="122" stroke-linejoin="round"/><path id="1006" d="M-13.5,-106.1C5.4,-106.1,-13.5,106.1,13.5,106.1" transform="matrix(1,0,0,1,602,9071)" fill="none" ed:tosuperid="1005" stroke-linecap="round" stroke="#696969" ed:parentid="122" stroke-linejoin="round"/><path id="1008" d="M-13.5,-129.4C5.4,-129.4,-13.5,129.4,13.5,129.4" transform="matrix(1,0,0,1,602,9095)" fill="none" ed:tosuperid="1007" stroke-linecap="round" stroke="#696969" ed:parentid="122" stroke-linejoin="round"/><path id="1010" d="M-13.5,204.6C5.4,204.6,-13.5,-204.6,13.5,-204.6" transform="matrix(1,0,0,1,602,9586)" fill="none" ed:tosuperid="1009" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="1012" d="M-13.5,162.4C5.4,162.4,-13.5,-162.4,13.5,-162.4" transform="matrix(1,0,0,1,602,9628)" fill="none" ed:tosuperid="1011" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="1014" d="M-13.5,124.9C5.4,124.9,-13.5,-124.9,13.5,-124.9" transform="matrix(1,0,0,1,602,9666)" fill="none" ed:tosuperid="1013" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="1016" d="M-13.5,92.1C5.4,92.1,-13.5,-92.1,13.5,-92.1" transform="matrix(1,0,0,1,602,9699)" fill="none" ed:tosuperid="1015" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="1018" d="M-13.5,27.9C3.2,27.9,-8.3,-27.9,13.5,-27.9" transform="matrix(1,0,0,1,602,9763)" fill="none" ed:tosuperid="1017" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="1020" d="M-13.5,-36.4C4.4,-36.4,-11.1,36.4,13.5,36.4" transform="matrix(1,0,0,1,602,9827)" fill="none" ed:tosuperid="1019" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="1022" d="M-13.5,-73.9C5.4,-73.9,-13.5,73.9,13.5,73.9" transform="matrix(1,0,0,1,602,9865)" fill="none" ed:tosuperid="1021" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="1024" d="M-13.5,-134.6C5.4,-134.6,-13.5,134.6,13.5,134.6" transform="matrix(1,0,0,1,602,9925)" fill="none" ed:tosuperid="1023" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="1026" d="M-13.5,-178.1C5.4,-178.1,-13.5,178.1,13.5,178.1" transform="matrix(1,0,0,1,602,9969)" fill="none" ed:tosuperid="1025" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="1028" d="M-13.5,-201.4C5.4,-201.4,-13.5,201.4,13.5,201.4" transform="matrix(1,0,0,1,602,9992)" fill="none" ed:tosuperid="1027" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="1030" d="M-13.5,-241.9C5.4,-241.9,-13.5,241.9,13.5,241.9" transform="matrix(1,0,0,1,602,10033)" fill="none" ed:tosuperid="1029" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="1032" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,760,8747)" fill="none" ed:tosuperid="1031" stroke-linecap="round" stroke="#696969" ed:parentid="991" stroke-linejoin="round"/><path id="1034" d="M-13.5,-22C2.1,-22,-5.9,22,13.5,22" transform="matrix(1,0,0,1,760,8782)" fill="none" ed:tosuperid="1033" stroke-linecap="round" stroke="#696969" ed:parentid="991" stroke-linejoin="round"/><path id="1038" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,818,8857)" fill="none" ed:tosuperid="1037" stroke-linecap="round" stroke="#696969" ed:parentid="993" stroke-linejoin="round"/><path id="1040" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,818,8872)" fill="none" ed:tosuperid="1039" stroke-linecap="round" stroke="#696969" ed:parentid="993" stroke-linejoin="round"/><path id="1042" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,809,8930)" fill="none" ed:tosuperid="1041" stroke-linecap="round" stroke="#696969" ed:parentid="995" stroke-linejoin="round"/><path id="1044" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,721,8978)" fill="none" ed:tosuperid="1043" stroke-linecap="round" stroke="#696969" ed:parentid="997" stroke-linejoin="round"/><path id="1046" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,721,9003)" fill="none" ed:tosuperid="1045" stroke-linecap="round" stroke="#696969" ed:parentid="997" stroke-linejoin="round"/><path id="1048" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" transform="matrix(1,0,0,1,721,9106)" fill="none" ed:tosuperid="1047" stroke-linecap="round" stroke="#696969" ed:parentid="1001" stroke-linejoin="round"/><path id="1050" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,708,9147)" fill="none" ed:tosuperid="1049" stroke-linecap="round" stroke="#696969" ed:parentid="1003" stroke-linejoin="round"/><path id="1052" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,695,9216)" fill="none" ed:tosuperid="1051" stroke-linecap="round" stroke="#696969" ed:parentid="1007" stroke-linejoin="round"/><path id="1054" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,695,9232)" fill="none" ed:tosuperid="1053" stroke-linecap="round" stroke="#696969" ed:parentid="1007" stroke-linejoin="round"/><path id="1056" d="M-13.5,237.4C5.4,237.4,-13.5,-237.4,13.5,-237.4" transform="matrix(1,0,0,1,602,9553)" fill="none" ed:tosuperid="1055" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="1058" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,742,9374)" fill="none" ed:tosuperid="1057" stroke-linecap="round" stroke="#696969" ed:parentid="1009" stroke-linejoin="round"/><path id="1060" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,742,9399)" fill="none" ed:tosuperid="1059" stroke-linecap="round" stroke="#696969" ed:parentid="1009" stroke-linejoin="round"/><path id="1062" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" transform="matrix(1,0,0,1,768,9476)" fill="none" ed:tosuperid="1061" stroke-linecap="round" stroke="#696969" ed:parentid="1011" stroke-linejoin="round"/><path id="1064" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,807,9529)" fill="none" ed:tosuperid="1063" stroke-linecap="round" stroke="#696969" ed:parentid="1013" stroke-linejoin="round"/><path id="1066" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,807,9554)" fill="none" ed:tosuperid="1065" stroke-linecap="round" stroke="#696969" ed:parentid="1013" stroke-linejoin="round"/><path id="1068" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,768,9611)" fill="none" ed:tosuperid="1067" stroke-linecap="round" stroke="#696969" ed:parentid="1015" stroke-linejoin="round"/><path id="1070" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" transform="matrix(1,0,0,1,833,9710)" fill="none" ed:tosuperid="1069" stroke-linecap="round" stroke="#696969" ed:parentid="1017" stroke-linejoin="round"/><path id="1072" d="M-13.5,-19C1.6,-19,-4.5,19,13.5,19" transform="matrix(1,0,0,1,833,9754)" fill="none" ed:tosuperid="1071" stroke-linecap="round" stroke="#696969" ed:parentid="1017" stroke-linejoin="round"/><path id="1074" d="M-13.5,-44C5.1,-44,-12.7,44,13.5,44" transform="matrix(1,0,0,1,833,9779)" fill="none" ed:tosuperid="1073" stroke-linecap="round" stroke="#696969" ed:parentid="1017" stroke-linejoin="round"/><path id="1076" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,807,9868)" fill="none" ed:tosuperid="1075" stroke-linecap="round" stroke="#696969" ed:parentid="1019" stroke-linejoin="round"/><path id="1078" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,839,9931)" fill="none" ed:tosuperid="1077" stroke-linecap="round" stroke="#696969" ed:parentid="1021" stroke-linejoin="round"/><path id="1080" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,839,9956)" fill="none" ed:tosuperid="1079" stroke-linecap="round" stroke="#696969" ed:parentid="1021" stroke-linejoin="round"/><path id="1082" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,794,10032)" fill="none" ed:tosuperid="1081" stroke-linecap="round" stroke="#696969" ed:parentid="1023" stroke-linejoin="round"/><path id="1084" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,980,10004)" fill="none" ed:tosuperid="1083" stroke-linecap="round" stroke="#696969" ed:parentid="1081" stroke-linejoin="round"/><path id="1086" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,794,10052)" fill="none" ed:tosuperid="1085" stroke-linecap="round" stroke="#696969" ed:parentid="1023" stroke-linejoin="round"/><path id="1088" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,980,10049)" fill="none" ed:tosuperid="1087" stroke-linecap="round" stroke="#696969" ed:parentid="1085" stroke-linejoin="round"/><path id="1090" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,794,10073)" fill="none" ed:tosuperid="1089" stroke-linecap="round" stroke="#696969" ed:parentid="1023" stroke-linejoin="round"/><path id="1092" d="M-13.5,-28C3.2,-28,-8.3,28,13.5,28" transform="matrix(1,0,0,1,794,10088)" fill="none" ed:tosuperid="1091" stroke-linecap="round" stroke="#696969" ed:parentid="1023" stroke-linejoin="round"/><path id="1094" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,789,10194)" fill="none" ed:tosuperid="1093" stroke-linecap="round" stroke="#696969" ed:parentid="1027" stroke-linejoin="round"/><path id="1096" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,951,10186)" fill="none" ed:tosuperid="1095" stroke-linecap="round" stroke="#696969" ed:parentid="1093" stroke-linejoin="round"/><path id="1098" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,951,10201)" fill="none" ed:tosuperid="1097" stroke-linecap="round" stroke="#696969" ed:parentid="1093" stroke-linejoin="round"/><path id="1100" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,711,10267)" fill="none" ed:tosuperid="1099" stroke-linecap="round" stroke="#696969" ed:parentid="1029" stroke-linejoin="round"/><path id="1102" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,711,10292)" fill="none" ed:tosuperid="1101" stroke-linecap="round" stroke="#696969" ed:parentid="1029" stroke-linejoin="round"/><path id="1104" d="M-13.5,289.1C5.4,289.1,-13.5,-289.1,13.5,-289.1" transform="matrix(1,0,0,1,650,10737)" fill="none" ed:tosuperid="1103" stroke-linecap="round" stroke="#696969" ed:parentid="126" stroke-linejoin="round"/><path id="1106" d="M-13.5,220.6C5.4,220.6,-13.5,-220.6,13.5,-220.6" transform="matrix(1,0,0,1,650,10805)" fill="none" ed:tosuperid="1105" stroke-linecap="round" stroke="#696969" ed:parentid="126" stroke-linejoin="round"/><path id="1108" d="M-13.5,52.1C5.4,52.1,-13.5,-52.1,13.5,-52.1" transform="matrix(1,0,0,1,650,10974)" fill="none" ed:tosuperid="1107" stroke-linecap="round" stroke="#696969" ed:parentid="126" stroke-linejoin="round"/><path id="1110" d="M-13.5,-93.1C5.4,-93.1,-13.5,93.1,13.5,93.1" transform="matrix(1,0,0,1,650,11119)" fill="none" ed:tosuperid="1109" stroke-linecap="round" stroke="#696969" ed:parentid="126" stroke-linejoin="round"/><path id="1112" d="M-13.5,-132.4C5.4,-132.4,-13.5,132.4,13.5,132.4" transform="matrix(1,0,0,1,650,11158)" fill="none" ed:tosuperid="1111" stroke-linecap="round" stroke="#696969" ed:parentid="126" stroke-linejoin="round"/><path id="1114" d="M-13.5,-204.4C5.4,-204.4,-13.5,204.4,13.5,204.4" transform="matrix(1,0,0,1,650,11230)" fill="none" ed:tosuperid="1113" stroke-linecap="round" stroke="#696969" ed:parentid="126" stroke-linejoin="round"/><path id="1116" d="M-13.5,-262.1C5.4,-262.1,-13.5,262.1,13.5,262.1" transform="matrix(1,0,0,1,650,11288)" fill="none" ed:tosuperid="1115" stroke-linecap="round" stroke="#696969" ed:parentid="126" stroke-linejoin="round"/><path id="1118" d="M-13.5,-312.1C5.4,-312.1,-13.5,312.1,13.5,312.1" transform="matrix(1,0,0,1,650,11338)" fill="none" ed:tosuperid="1117" stroke-linecap="round" stroke="#696969" ed:parentid="126" stroke-linejoin="round"/><path id="1120" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,879,10557)" fill="none" ed:tosuperid="1119" stroke-linecap="round" stroke="#696969" ed:parentid="1105" stroke-linejoin="round"/><path id="1122" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,879,10572)" fill="none" ed:tosuperid="1121" stroke-linecap="round" stroke="#696969" ed:parentid="1105" stroke-linejoin="round"/><path id="1124" d="M-13.5,-3C-2,-3,3.8,3,13.5,3" transform="matrix(1,0,0,1,879,10588)" fill="none" ed:tosuperid="1123" stroke-linecap="round" stroke="#696969" ed:parentid="1105" stroke-linejoin="round"/><path id="1126" d="M-13.5,-23.3C2.4,-23.3,-6.4,23.3,13.5,23.3" transform="matrix(1,0,0,1,879,10608)" fill="none" ed:tosuperid="1125" stroke-linecap="round" stroke="#696969" ed:parentid="1105" stroke-linejoin="round"/><path id="1128" d="M-13.5,70.3C5.4,70.3,-13.5,-70.3,13.5,-70.3" transform="matrix(1,0,0,1,764,10851)" fill="none" ed:tosuperid="1127" stroke-linecap="round" stroke="#696969" ed:parentid="1107" stroke-linejoin="round"/><path id="1130" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,764,10906)" fill="none" ed:tosuperid="1129" stroke-linecap="round" stroke="#696969" ed:parentid="1107" stroke-linejoin="round"/><path id="1132" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,764,10922)" fill="none" ed:tosuperid="1131" stroke-linecap="round" stroke="#696969" ed:parentid="1107" stroke-linejoin="round"/><path id="1134" d="M-13.5,-70.3C5.4,-70.3,-13.5,70.3,13.5,70.3" transform="matrix(1,0,0,1,764,10992)" fill="none" ed:tosuperid="1133" stroke-linecap="round" stroke="#696969" ed:parentid="1107" stroke-linejoin="round"/><path id="1136" d="M-13.5,278.6C5.4,278.6,-13.5,-278.6,13.5,-278.6" transform="matrix(1,0,0,1,618,12139)" fill="none" ed:tosuperid="1135" stroke-linecap="round" stroke="#696969" ed:parentid="128" stroke-linejoin="round"/><path id="1138" d="M-13.5,171.4C5.4,171.4,-13.5,-171.4,13.5,-171.4" transform="matrix(1,0,0,1,618,12246)" fill="none" ed:tosuperid="1137" stroke-linecap="round" stroke="#696969" ed:parentid="128" stroke-linejoin="round"/><path id="1140" d="M-13.5,64.1C5.4,64.1,-13.5,-64.1,13.5,-64.1" transform="matrix(1,0,0,1,618,12353)" fill="none" ed:tosuperid="1139" stroke-linecap="round" stroke="#696969" ed:parentid="128" stroke-linejoin="round"/><path id="1142" d="M-13.5,-16.9C1.1,-16.9,-3.5,16.9,13.5,16.9" transform="matrix(1,0,0,1,618,12434)" fill="none" ed:tosuperid="1141" stroke-linecap="round" stroke="#696969" ed:parentid="128" stroke-linejoin="round"/><path id="1144" d="M-13.5,-128.9C5.4,-128.9,-13.5,128.9,13.5,128.9" transform="matrix(1,0,0,1,618,12546)" fill="none" ed:tosuperid="1143" stroke-linecap="round" stroke="#696969" ed:parentid="128" stroke-linejoin="round"/><path id="1146" d="M-13.5,-205.1C5.4,-205.1,-13.5,205.1,13.5,205.1" transform="matrix(1,0,0,1,618,12622)" fill="none" ed:tosuperid="1145" stroke-linecap="round" stroke="#696969" ed:parentid="128" stroke-linejoin="round"/><path id="1148" d="M-13.5,-278.4C5.4,-278.4,-13.5,278.4,13.5,278.4" transform="matrix(1,0,0,1,618,12696)" fill="none" ed:tosuperid="1147" stroke-linecap="round" stroke="#696969" ed:parentid="128" stroke-linejoin="round"/><path id="1150" d="M-13.5,42.3C4.9,42.3,-12.4,-42.3,13.5,-42.3" transform="matrix(1,0,0,1,784,12409)" fill="none" ed:tosuperid="1149" stroke-linecap="round" stroke="#696969" ed:parentid="1141" stroke-linejoin="round"/><path id="1152" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" transform="matrix(1,0,0,1,784,12446)" fill="none" ed:tosuperid="1151" stroke-linecap="round" stroke="#696969" ed:parentid="1141" stroke-linejoin="round"/><path id="1154" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" transform="matrix(1,0,0,1,784,12481)" fill="none" ed:tosuperid="1153" stroke-linecap="round" stroke="#696969" ed:parentid="1141" stroke-linejoin="round"/><path id="1156" d="M-13.5,-50C5.3,-50,-13.4,50,13.5,50" transform="matrix(1,0,0,1,784,12501)" fill="none" ed:tosuperid="1155" stroke-linecap="round" stroke="#696969" ed:parentid="1141" stroke-linejoin="round"/><path id="1158" d="M-13.5,-65.5C5.4,-65.5,-13.5,65.5,13.5,65.5" transform="matrix(1,0,0,1,784,12517)" fill="none" ed:tosuperid="1157" stroke-linecap="round" stroke="#696969" ed:parentid="1141" stroke-linejoin="round"/><path id="1160" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,836,12828)" fill="none" ed:tosuperid="1159" stroke-linecap="round" stroke="#696969" ed:parentid="1145" stroke-linejoin="round"/><path id="1162" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,836,12853)" fill="none" ed:tosuperid="1161" stroke-linecap="round" stroke="#696969" ed:parentid="1145" stroke-linejoin="round"/><path id="1164" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,732,12962)" fill="none" ed:tosuperid="1163" stroke-linecap="round" stroke="#696969" ed:parentid="1147" stroke-linejoin="round"/><path id="1166" d="M-13.5,-3C-2,-3,3.8,3,13.5,3" transform="matrix(1,0,0,1,732,12977)" fill="none" ed:tosuperid="1165" stroke-linecap="round" stroke="#696969" ed:parentid="1147" stroke-linejoin="round"/><path id="1168" d="M-13.5,-329.6C5.4,-329.6,-13.5,329.6,13.5,329.6" transform="matrix(1,0,0,1,618,12747)" fill="none" ed:tosuperid="1167" stroke-linecap="round" stroke="#696969" ed:parentid="128" stroke-linejoin="round"/><path id="1170" d="M-13.5,170.1C5.4,170.1,-13.5,-170.1,13.5,-170.1" transform="matrix(1,0,0,1,634,13414)" fill="none" ed:tosuperid="1169" stroke-linecap="round" stroke="#696969" ed:parentid="130" stroke-linejoin="round"/><path id="1172" d="M-13.5,142.1C5.4,142.1,-13.5,-142.1,13.5,-142.1" transform="matrix(1,0,0,1,634,13442)" fill="none" ed:tosuperid="1171" stroke-linecap="round" stroke="#696969" ed:parentid="130" stroke-linejoin="round"/><path id="1174" d="M-13.5,126.6C5.4,126.6,-13.5,-126.6,13.5,-126.6" transform="matrix(1,0,0,1,634,13457)" fill="none" ed:tosuperid="1173" stroke-linecap="round" stroke="#696969" ed:parentid="130" stroke-linejoin="round"/><path id="1176" d="M-13.5,111.1C5.4,111.1,-13.5,-111.1,13.5,-111.1" transform="matrix(1,0,0,1,634,13473)" fill="none" ed:tosuperid="1175" stroke-linecap="round" stroke="#696969" ed:parentid="130" stroke-linejoin="round"/><path id="1178" d="M-13.5,78.4C5.4,78.4,-13.5,-78.4,13.5,-78.4" transform="matrix(1,0,0,1,634,13505)" fill="none" ed:tosuperid="1177" stroke-linecap="round" stroke="#696969" ed:parentid="130" stroke-linejoin="round"/><path id="1182" d="M-13.5,-9.1C-0.6,-9.1,0.4,9.1,13.5,9.1" transform="matrix(1,0,0,1,634,13593)" fill="none" ed:tosuperid="1181" stroke-linecap="round" stroke="#696969" ed:parentid="130" stroke-linejoin="round"/><path id="1184" d="M-13.5,-91.9C5.4,-91.9,-13.5,91.9,13.5,91.9" transform="matrix(1,0,0,1,634,13676)" fill="none" ed:tosuperid="1183" stroke-linecap="round" stroke="#696969" ed:parentid="130" stroke-linejoin="round"/><path id="1186" d="M-13.5,-124.6C5.4,-124.6,-13.5,124.6,13.5,124.6" transform="matrix(1,0,0,1,634,13708)" fill="none" ed:tosuperid="1185" stroke-linecap="round" stroke="#696969" ed:parentid="130" stroke-linejoin="round"/><path id="1190" d="M-13.5,-187.1C5.4,-187.1,-13.5,187.1,13.5,187.1" transform="matrix(1,0,0,1,634,13771)" fill="none" ed:tosuperid="1189" stroke-linecap="round" stroke="#696969" ed:parentid="130" stroke-linejoin="round"/><path id="1192" d="M-13.5,109.4C5.4,109.4,-13.5,-109.4,13.5,-109.4" transform="matrix(1,0,0,1,634,14413)" fill="none" ed:tosuperid="1191" stroke-linecap="round" stroke="#696969" ed:parentid="132" stroke-linejoin="round"/><path id="1194" d="M-13.5,34.4C4.1,34.4,-10.5,-34.4,13.5,-34.4" transform="matrix(1,0,0,1,634,14488)" fill="none" ed:tosuperid="1193" stroke-linecap="round" stroke="#696969" ed:parentid="132" stroke-linejoin="round"/><path id="1196" d="M-13.5,-56.1C5.4,-56.1,-13.5,56.1,13.5,56.1" transform="matrix(1,0,0,1,634,14578)" fill="none" ed:tosuperid="1195" stroke-linecap="round" stroke="#696969" ed:parentid="132" stroke-linejoin="round"/><path id="1198" d="M-13.5,-159.1C5.4,-159.1,-13.5,159.1,13.5,159.1" transform="matrix(1,0,0,1,634,14681)" fill="none" ed:tosuperid="1197" stroke-linecap="round" stroke="#696969" ed:parentid="132" stroke-linejoin="round"/><path id="1200" d="M-13.5,47C5.2,47,-13.1,-47,13.5,-47" transform="matrix(1,0,0,1,890,14407)" fill="none" ed:tosuperid="1199" stroke-linecap="round" stroke="#696969" ed:parentid="1193" stroke-linejoin="round"/><path id="1202" d="M-13.5,22C2.1,22,-5.9,-22,13.5,-22" transform="matrix(1,0,0,1,890,14432)" fill="none" ed:tosuperid="1201" stroke-linecap="round" stroke="#696969" ed:parentid="1193" stroke-linejoin="round"/><path id="1204" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,890,14479)" fill="none" ed:tosuperid="1203" stroke-linecap="round" stroke="#696969" ed:parentid="1193" stroke-linejoin="round"/><path id="1206" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,851,14611)" fill="none" ed:tosuperid="1205" stroke-linecap="round" stroke="#696969" ed:parentid="1195" stroke-linejoin="round"/><path id="1208" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,851,14627)" fill="none" ed:tosuperid="1207" stroke-linecap="round" stroke="#696969" ed:parentid="1195" stroke-linejoin="round"/><path id="1210" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,851,14642)" fill="none" ed:tosuperid="1209" stroke-linecap="round" stroke="#696969" ed:parentid="1195" stroke-linejoin="round"/><path id="1212" d="M-13.5,-23.3C2.4,-23.3,-6.4,23.3,13.5,23.3" transform="matrix(1,0,0,1,851,14658)" fill="none" ed:tosuperid="1211" stroke-linecap="round" stroke="#696969" ed:parentid="1195" stroke-linejoin="round"/><path id="1214" d="M-13.5,184.4C5.4,184.4,-13.5,-184.4,13.5,-184.4" transform="matrix(1,0,0,1,634,15332)" fill="none" ed:tosuperid="1213" stroke-linecap="round" stroke="#696969" ed:parentid="134" stroke-linejoin="round"/><path id="1216" d="M-13.5,142.1C5.4,142.1,-13.5,-142.1,13.5,-142.1" transform="matrix(1,0,0,1,634,15375)" fill="none" ed:tosuperid="1215" stroke-linecap="round" stroke="#696969" ed:parentid="134" stroke-linejoin="round"/><path id="1218" d="M-13.5,104.6C5.4,104.6,-13.5,-104.6,13.5,-104.6" transform="matrix(1,0,0,1,634,15412)" fill="none" ed:tosuperid="1217" stroke-linecap="round" stroke="#696969" ed:parentid="134" stroke-linejoin="round"/><path id="1220" d="M-13.5,59.4C5.4,59.4,-13.5,-59.4,13.5,-59.4" transform="matrix(1,0,0,1,634,15457)" fill="none" ed:tosuperid="1219" stroke-linecap="round" stroke="#696969" ed:parentid="134" stroke-linejoin="round"/><path id="1222" d="M-13.5,-20.4C1.8,-20.4,-5.2,20.4,13.5,20.4" transform="matrix(1,0,0,1,634,15537)" fill="none" ed:tosuperid="1221" stroke-linecap="round" stroke="#696969" ed:parentid="134" stroke-linejoin="round"/><path id="1224" d="M-13.5,-110.9C5.4,-110.9,-13.5,110.9,13.5,110.9" transform="matrix(1,0,0,1,634,15628)" fill="none" ed:tosuperid="1223" stroke-linecap="round" stroke="#696969" ed:parentid="134" stroke-linejoin="round"/><path id="1226" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,802,15723)" fill="none" ed:tosuperid="1225" stroke-linecap="round" stroke="#696969" ed:parentid="1223" stroke-linejoin="round"/><path id="1228" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,802,15739)" fill="none" ed:tosuperid="1227" stroke-linecap="round" stroke="#696969" ed:parentid="1223" stroke-linejoin="round"/><path id="1230" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,802,15759)" fill="none" ed:tosuperid="1229" stroke-linecap="round" stroke="#696969" ed:parentid="1223" stroke-linejoin="round"/><path id="1232" d="M-13.5,-204.4C5.4,-204.4,-13.5,204.4,13.5,204.4" transform="matrix(1,0,0,1,634,15721)" fill="none" ed:tosuperid="1231" stroke-linecap="round" stroke="#696969" ed:parentid="134" stroke-linejoin="round"/><path id="1234" d="M-13.5,-257.4C5.4,-257.4,-13.5,257.4,13.5,257.4" transform="matrix(1,0,0,1,634,15774)" fill="none" ed:tosuperid="1233" stroke-linecap="round" stroke="#696969" ed:parentid="134" stroke-linejoin="round"/><path id="1236" d="M-13.5,292.1C5.4,292.1,-13.5,-292.1,13.5,-292.1" transform="matrix(1,0,0,1,618,16516)" fill="none" ed:tosuperid="1235" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="1238" d="M-13.5,204.6C5.4,204.6,-13.5,-204.6,13.5,-204.6" transform="matrix(1,0,0,1,618,16603)" fill="none" ed:tosuperid="1237" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="1240" d="M-13.5,159.4C5.4,159.4,-13.5,-159.4,13.5,-159.4" transform="matrix(1,0,0,1,618,16648)" fill="none" ed:tosuperid="1239" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="1242" d="M-13.5,139.1C5.4,139.1,-13.5,-139.1,13.5,-139.1" transform="matrix(1,0,0,1,618,16669)" fill="none" ed:tosuperid="1241" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="1244" d="M-13.5,78.4C5.4,78.4,-13.5,-78.4,13.5,-78.4" transform="matrix(1,0,0,1,618,16729)" fill="none" ed:tosuperid="1243" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="1246" d="M-13.5,-35.4C4.2,-35.4,-10.8,35.4,13.5,35.4" transform="matrix(1,0,0,1,618,16843)" fill="none" ed:tosuperid="1245" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="1248" d="M-13.5,-125.9C5.4,-125.9,-13.5,125.9,13.5,125.9" transform="matrix(1,0,0,1,618,16934)" fill="none" ed:tosuperid="1247" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="1250" d="M-13.5,-197.9C5.4,-197.9,-13.5,197.9,13.5,197.9" transform="matrix(1,0,0,1,618,17006)" fill="none" ed:tosuperid="1249" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="1252" d="M-13.5,-262.1C5.4,-262.1,-13.5,262.1,13.5,262.1" transform="matrix(1,0,0,1,618,17070)" fill="none" ed:tosuperid="1251" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="1254" d="M-13.5,-296.6C5.4,-296.6,-13.5,296.6,13.5,296.6" transform="matrix(1,0,0,1,618,17104)" fill="none" ed:tosuperid="1253" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="1256" d="M-13.5,-331.1C5.4,-331.1,-13.5,331.1,13.5,331.1" transform="matrix(1,0,0,1,618,17139)" fill="none" ed:tosuperid="1255" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="1258" d="M-13.5,-363.9C5.4,-363.9,-13.5,363.9,13.5,363.9" transform="matrix(1,0,0,1,618,17172)" fill="none" ed:tosuperid="1257" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="1260" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,874,16636)" fill="none" ed:tosuperid="1259" stroke-linecap="round" stroke="#696969" ed:parentid="1243" stroke-linejoin="round"/><path id="1262" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,874,16651)" fill="none" ed:tosuperid="1261" stroke-linecap="round" stroke="#696969" ed:parentid="1243" stroke-linejoin="round"/><path id="1264" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,874,16671)" fill="none" ed:tosuperid="1263" stroke-linecap="round" stroke="#696969" ed:parentid="1243" stroke-linejoin="round"/><path id="1266" d="M-13.5,-40.5C4.8,-40.5,-12.1,40.5,13.5,40.5" transform="matrix(1,0,0,1,874,16692)" fill="none" ed:tosuperid="1265" stroke-linecap="round" stroke="#696969" ed:parentid="1243" stroke-linejoin="round"/><path id="1268" d="M-13.5,21.9C2.1,21.9,-5.8,-21.9,13.5,-21.9" transform="matrix(1,0,0,1,634,17761)" fill="none" ed:tosuperid="1267" stroke-linecap="round" stroke="#696969" ed:parentid="138" stroke-linejoin="round"/><path id="1270" d="M-13.5,6.4C-1.2,6.4,1.9,-6.4,13.5,-6.4" transform="matrix(1,0,0,1,634,17777)" fill="none" ed:tosuperid="1269" stroke-linecap="round" stroke="#696969" ed:parentid="138" stroke-linejoin="round"/><path id="1272" d="M-13.5,-54.4C5.4,-54.4,-13.5,54.4,13.5,54.4" transform="matrix(1,0,0,1,634,17838)" fill="none" ed:tosuperid="1271" stroke-linecap="round" stroke="#696969" ed:parentid="138" stroke-linejoin="round"/><path id="1274" d="M-13.5,329.6C5.4,329.6,-13.5,-329.6,13.5,-329.6" transform="matrix(1,0,0,1,650,10696)" fill="none" ed:tosuperid="1273" stroke-linecap="round" stroke="#696969" ed:parentid="126" stroke-linejoin="round"/><path id="1276" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" transform="matrix(1,0,0,1,881,10423)" fill="none" ed:tosuperid="1275" stroke-linecap="round" stroke="#696969" ed:parentid="1103" stroke-linejoin="round"/><path id="1278" d="M-13.5,9.5C-0.5,9.5,0.2,-9.5,13.5,-9.5" transform="matrix(1,0,0,1,881,10438)" fill="none" ed:tosuperid="1277" stroke-linecap="round" stroke="#696969" ed:parentid="1103" stroke-linejoin="round"/><path id="1280" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,881,10473)" fill="none" ed:tosuperid="1279" stroke-linecap="round" stroke="#696969" ed:parentid="1103" stroke-linejoin="round"/><path id="1282" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,1043,10591)" fill="none" ed:tosuperid="1281" stroke-linecap="round" stroke="#696969" ed:parentid="1123" stroke-linejoin="round"/><path id="1284" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,1118,10636)" fill="none" ed:tosuperid="1283" stroke-linecap="round" stroke="#696969" ed:parentid="1125" stroke-linejoin="round"/><path id="1286" d="M-13.5,125C5.4,125,-13.5,-125,13.5,-125" transform="matrix(1,0,0,1,764,10797)" fill="none" ed:tosuperid="1285" stroke-linecap="round" stroke="#696969" ed:parentid="1107" stroke-linejoin="round"/><path id="1288" d="M-13.5,29.8C3.5,29.8,-9,-29.8,13.5,-29.8" transform="matrix(1,0,0,1,928,10751)" fill="none" ed:tosuperid="1287" stroke-linecap="round" stroke="#696969" ed:parentid="1127" stroke-linejoin="round"/><path id="1290" d="M-13.5,-14.3C0.6,-14.3,-2.2,14.3,13.5,14.3" transform="matrix(1,0,0,1,928,10795)" fill="none" ed:tosuperid="1289" stroke-linecap="round" stroke="#696969" ed:parentid="1127" stroke-linejoin="round"/><path id="1292" d="M-13.5,-39.3C4.7,-39.3,-11.8,39.3,13.5,39.3" transform="matrix(1,0,0,1,928,10820)" fill="none" ed:tosuperid="1291" stroke-linecap="round" stroke="#696969" ed:parentid="1127" stroke-linejoin="round"/><path id="1294" d="M-13.5,35.8C4.3,35.8,-10.9,-35.8,13.5,-35.8" transform="matrix(1,0,0,1,1081,11026)" fill="none" ed:tosuperid="1293" stroke-linecap="round" stroke="#696969" ed:parentid="1133" stroke-linejoin="round"/><path id="1296" d="M-13.5,1.3C-2.7,1.3,5.4,-1.3,13.5,-1.3" transform="matrix(1,0,0,1,1081,11061)" fill="none" ed:tosuperid="1295" stroke-linecap="round" stroke="#696969" ed:parentid="1133" stroke-linejoin="round"/><path id="1298" d="M-13.5,-23.8C2.5,-23.8,-6.6,23.8,13.5,23.8" transform="matrix(1,0,0,1,1081,11086)" fill="none" ed:tosuperid="1297" stroke-linecap="round" stroke="#696969" ed:parentid="1133" stroke-linejoin="round"/><path id="1300" d="M-13.5,-47C5.2,-47,-13.1,47,13.5,47" transform="matrix(1,0,0,1,1081,11109)" fill="none" ed:tosuperid="1299" stroke-linecap="round" stroke="#696969" ed:parentid="1133" stroke-linejoin="round"/><path id="1302" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,1243,11148)" fill="none" ed:tosuperid="1301" stroke-linecap="round" stroke="#696969" ed:parentid="1299" stroke-linejoin="round"/><path id="1304" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,1243,11164)" fill="none" ed:tosuperid="1303" stroke-linecap="round" stroke="#696969" ed:parentid="1299" stroke-linejoin="round"/><path id="1306" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,868,11217)" fill="none" ed:tosuperid="1305" stroke-linecap="round" stroke="#696969" ed:parentid="1109" stroke-linejoin="round"/><path id="1308" d="M-13.5,-19C1.6,-19,-4.5,19,13.5,19" transform="matrix(1,0,0,1,777,11310)" fill="none" ed:tosuperid="1307" stroke-linecap="round" stroke="#696969" ed:parentid="1111" stroke-linejoin="round"/><path id="1310" d="M-13.5,37.5C4.5,37.5,-11.4,-37.5,13.5,-37.5" transform="matrix(1,0,0,1,790,11397)" fill="none" ed:tosuperid="1309" stroke-linecap="round" stroke="#696969" ed:parentid="1113" stroke-linejoin="round"/><path id="1312" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,790,11432)" fill="none" ed:tosuperid="1311" stroke-linecap="round" stroke="#696969" ed:parentid="1113" stroke-linejoin="round"/><path id="1314" d="M-13.5,-22C2.1,-22,-5.9,22,13.5,22" transform="matrix(1,0,0,1,790,11457)" fill="none" ed:tosuperid="1313" stroke-linecap="round" stroke="#696969" ed:parentid="1113" stroke-linejoin="round"/><path id="1316" d="M-13.5,-37.5C4.5,-37.5,-11.4,37.5,13.5,37.5" transform="matrix(1,0,0,1,790,11472)" fill="none" ed:tosuperid="1315" stroke-linecap="round" stroke="#696969" ed:parentid="1113" stroke-linejoin="round"/><path id="1318" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,842,11555)" fill="none" ed:tosuperid="1317" stroke-linecap="round" stroke="#696969" ed:parentid="1115" stroke-linejoin="round"/><path id="1320" d="M-13.5,29.8C3.5,29.8,-9,-29.8,13.5,-29.8" transform="matrix(1,0,0,1,751,11620)" fill="none" ed:tosuperid="1319" stroke-linecap="round" stroke="#696969" ed:parentid="1117" stroke-linejoin="round"/><path id="1322" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" transform="matrix(1,0,0,1,751,11645)" fill="none" ed:tosuperid="1321" stroke-linecap="round" stroke="#696969" ed:parentid="1117" stroke-linejoin="round"/><path id="1324" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" transform="matrix(1,0,0,1,751,11680)" fill="none" ed:tosuperid="1323" stroke-linecap="round" stroke="#696969" ed:parentid="1117" stroke-linejoin="round"/><path id="1326" d="M-13.5,62.4C5.4,62.4,-13.5,-62.4,13.5,-62.4" transform="matrix(1,0,0,1,634,17721)" fill="none" ed:tosuperid="1325" stroke-linecap="round" stroke="#696969" ed:parentid="138" stroke-linejoin="round"/><path id="1328" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" transform="matrix(1,0,0,1,731,17634)" fill="none" ed:tosuperid="1327" stroke-linecap="round" stroke="#696969" ed:parentid="1325" stroke-linejoin="round"/><path id="1330" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,731,17659)" fill="none" ed:tosuperid="1329" stroke-linecap="round" stroke="#696969" ed:parentid="1325" stroke-linejoin="round"/><path id="1332" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,731,17684)" fill="none" ed:tosuperid="1331" stroke-linecap="round" stroke="#696969" ed:parentid="1325" stroke-linejoin="round"/><path id="1334" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,800,17740)" fill="none" ed:tosuperid="1333" stroke-linecap="round" stroke="#696969" ed:parentid="1267" stroke-linejoin="round"/><path id="1336" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,813,17771)" fill="none" ed:tosuperid="1335" stroke-linecap="round" stroke="#696969" ed:parentid="1269" stroke-linejoin="round"/><path id="1338" d="M-13.5,45.3C5.1,45.3,-12.9,-45.3,13.5,-45.3" transform="matrix(1,0,0,1,735,17847)" fill="none" ed:tosuperid="1337" stroke-linecap="round" stroke="#696969" ed:parentid="1271" stroke-linejoin="round"/><path id="1340" d="M-13.5,29.8C3.5,29.8,-9,-29.8,13.5,-29.8" transform="matrix(1,0,0,1,735,17862)" fill="none" ed:tosuperid="1339" stroke-linecap="round" stroke="#696969" ed:parentid="1271" stroke-linejoin="round"/><path id="1342" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" transform="matrix(1,0,0,1,735,17887)" fill="none" ed:tosuperid="1341" stroke-linecap="round" stroke="#696969" ed:parentid="1271" stroke-linejoin="round"/><path id="1344" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,735,17912)" fill="none" ed:tosuperid="1343" stroke-linecap="round" stroke="#696969" ed:parentid="1271" stroke-linejoin="round"/><path id="1346" d="M-13.5,-45.3C5.1,-45.3,-12.9,45.3,13.5,45.3" transform="matrix(1,0,0,1,735,17937)" fill="none" ed:tosuperid="1345" stroke-linecap="round" stroke="#696969" ed:parentid="1271" stroke-linejoin="round"/><path id="1348" d="M-13.5,309.6C5.4,309.6,-13.5,-309.6,13.5,-309.6" transform="matrix(1,0,0,1,618,12108)" fill="none" ed:tosuperid="1347" stroke-linecap="round" stroke="#696969" ed:parentid="128" stroke-linejoin="round"/><path id="1350" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,715,11783)" fill="none" ed:tosuperid="1349" stroke-linecap="round" stroke="#696969" ed:parentid="1347" stroke-linejoin="round"/><path id="1352" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,715,11798)" fill="none" ed:tosuperid="1351" stroke-linecap="round" stroke="#696969" ed:parentid="1347" stroke-linejoin="round"/><path id="1354" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,715,11814)" fill="none" ed:tosuperid="1353" stroke-linecap="round" stroke="#696969" ed:parentid="1347" stroke-linejoin="round"/><path id="1356" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,771,11860)" fill="none" ed:tosuperid="1355" stroke-linecap="round" stroke="#696969" ed:parentid="1135" stroke-linejoin="round"/><path id="1358" d="M-13.5,91.8C5.4,91.8,-13.5,-91.8,13.5,-91.8" transform="matrix(1,0,0,1,810,11983)" fill="none" ed:tosuperid="1357" stroke-linecap="round" stroke="#696969" ed:parentid="1137" stroke-linejoin="round"/><path id="1360" d="M-13.5,76.3C5.4,76.3,-13.5,-76.3,13.5,-76.3" transform="matrix(1,0,0,1,810,11998)" fill="none" ed:tosuperid="1359" stroke-linecap="round" stroke="#696969" ed:parentid="1137" stroke-linejoin="round"/><path id="1362" d="M-13.5,37.5C4.5,37.5,-11.4,-37.5,13.5,-37.5" transform="matrix(1,0,0,1,810,12037)" fill="none" ed:tosuperid="1361" stroke-linecap="round" stroke="#696969" ed:parentid="1137" stroke-linejoin="round"/><path id="1364" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,1115,11976)" fill="none" ed:tosuperid="1363" stroke-linecap="round" stroke="#696969" ed:parentid="1361" stroke-linejoin="round"/><path id="1366" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,1115,11992)" fill="none" ed:tosuperid="1365" stroke-linecap="round" stroke="#696969" ed:parentid="1361" stroke-linejoin="round"/><path id="1368" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,1115,12007)" fill="none" ed:tosuperid="1367" stroke-linecap="round" stroke="#696969" ed:parentid="1361" stroke-linejoin="round"/><path id="1370" d="M-13.5,-23.3C2.4,-23.3,-6.4,23.3,13.5,23.3" transform="matrix(1,0,0,1,1115,12023)" fill="none" ed:tosuperid="1369" stroke-linecap="round" stroke="#696969" ed:parentid="1361" stroke-linejoin="round"/><path id="1372" d="M-13.5,-1.3C-2.7,-1.3,5.4,1.3,13.5,1.3" transform="matrix(1,0,0,1,810,12076)" fill="none" ed:tosuperid="1371" stroke-linecap="round" stroke="#696969" ed:parentid="1137" stroke-linejoin="round"/><path id="1374" d="M-13.5,-16.8C1.1,-16.8,-3.4,16.8,13.5,16.8" transform="matrix(1,0,0,1,810,12091)" fill="none" ed:tosuperid="1373" stroke-linecap="round" stroke="#696969" ed:parentid="1137" stroke-linejoin="round"/><path id="1376" d="M-13.5,-32.3C3.8,-32.3,-9.8,32.3,13.5,32.3" transform="matrix(1,0,0,1,810,12107)" fill="none" ed:tosuperid="1375" stroke-linecap="round" stroke="#696969" ed:parentid="1137" stroke-linejoin="round"/><path id="1378" d="M-13.5,-66.8C5.4,-66.8,-13.5,66.8,13.5,66.8" transform="matrix(1,0,0,1,810,12141)" fill="none" ed:tosuperid="1377" stroke-linecap="round" stroke="#696969" ed:parentid="1137" stroke-linejoin="round"/><path id="1380" d="M-13.5,-91.8C5.4,-91.8,-13.5,91.8,13.5,91.8" transform="matrix(1,0,0,1,810,12166)" fill="none" ed:tosuperid="1379" stroke-linecap="round" stroke="#696969" ed:parentid="1137" stroke-linejoin="round"/><path id="1382" d="M-13.5,65.5C5.4,65.5,-13.5,-65.5,13.5,-65.5" transform="matrix(1,0,0,1,784,12386)" fill="none" ed:tosuperid="1381" stroke-linecap="round" stroke="#696969" ed:parentid="1141" stroke-linejoin="round"/><path id="1384" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,892,12359)" fill="none" ed:tosuperid="1383" stroke-linecap="round" stroke="#696969" ed:parentid="1149" stroke-linejoin="round"/><path id="1386" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,892,12374)" fill="none" ed:tosuperid="1385" stroke-linecap="round" stroke="#696969" ed:parentid="1149" stroke-linejoin="round"/><path id="1388" d="M-13.5,-14.3C0.6,-14.3,-2.2,14.3,13.5,14.3" transform="matrix(1,0,0,1,970,12456)" fill="none" ed:tosuperid="1387" stroke-linecap="round" stroke="#696969" ed:parentid="1151" stroke-linejoin="round"/><path id="1390" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,918,12515)" fill="none" ed:tosuperid="1389" stroke-linecap="round" stroke="#696969" ed:parentid="1153" stroke-linejoin="round"/><path id="1392" d="M-13.5,31C3.7,31,-9.4,-31,13.5,-31" transform="matrix(1,0,0,1,797,12644)" fill="none" ed:tosuperid="1391" stroke-linecap="round" stroke="#696969" ed:parentid="1143" stroke-linejoin="round"/><path id="1394" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,797,12660)" fill="none" ed:tosuperid="1393" stroke-linecap="round" stroke="#696969" ed:parentid="1143" stroke-linejoin="round"/><path id="1396" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,797,12675)" fill="none" ed:tosuperid="1395" stroke-linecap="round" stroke="#696969" ed:parentid="1143" stroke-linejoin="round"/><path id="1398" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,797,12691)" fill="none" ed:tosuperid="1397" stroke-linecap="round" stroke="#696969" ed:parentid="1143" stroke-linejoin="round"/><path id="1400" d="M-13.5,-31C3.7,-31,-9.4,31,13.5,31" transform="matrix(1,0,0,1,797,12706)" fill="none" ed:tosuperid="1399" stroke-linecap="round" stroke="#696969" ed:parentid="1143" stroke-linejoin="round"/><path id="1402" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,836,12807)" fill="none" ed:tosuperid="1401" stroke-linecap="round" stroke="#696969" ed:parentid="1145" stroke-linejoin="round"/><path id="1404" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,1009,12832)" fill="none" ed:tosuperid="1403" stroke-linecap="round" stroke="#696969" ed:parentid="1159" stroke-linejoin="round"/><path id="1406" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,1009,12882)" fill="none" ed:tosuperid="1405" stroke-linecap="round" stroke="#696969" ed:parentid="1161" stroke-linejoin="round"/><path id="1408" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,732,12946)" fill="none" ed:tosuperid="1407" stroke-linecap="round" stroke="#696969" ed:parentid="1147" stroke-linejoin="round"/><path id="1412" d="M-13.5,-28C3.2,-28,-8.3,28,13.5,28" transform="matrix(1,0,0,1,732,13002)" fill="none" ed:tosuperid="1411" stroke-linecap="round" stroke="#696969" ed:parentid="1147" stroke-linejoin="round"/><path id="1414" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,719,13069)" fill="none" ed:tosuperid="1413" stroke-linecap="round" stroke="#696969" ed:parentid="1167" stroke-linejoin="round"/><path id="1416" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,719,13084)" fill="none" ed:tosuperid="1415" stroke-linecap="round" stroke="#696969" ed:parentid="1167" stroke-linejoin="round"/><path id="1418" d="M-13.5,198.1C5.4,198.1,-13.5,-198.1,13.5,-198.1" transform="matrix(1,0,0,1,634,13386)" fill="none" ed:tosuperid="1417" stroke-linecap="round" stroke="#696969" ed:parentid="130" stroke-linejoin="round"/><path id="1420" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,826,13231)" fill="none" ed:tosuperid="1419" stroke-linecap="round" stroke="#696969" ed:parentid="1169" stroke-linejoin="round"/><path id="1422" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,826,13256)" fill="none" ed:tosuperid="1421" stroke-linecap="round" stroke="#696969" ed:parentid="1169" stroke-linejoin="round"/><path id="1424" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,852,13300)" fill="none" ed:tosuperid="1423" stroke-linecap="round" stroke="#696969" ed:parentid="1171" stroke-linejoin="round"/><path id="1426" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,839,13331)" fill="none" ed:tosuperid="1425" stroke-linecap="round" stroke="#696969" ed:parentid="1173" stroke-linejoin="round"/><path id="1432" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,787,13419)" fill="none" ed:tosuperid="1431" stroke-linecap="round" stroke="#696969" ed:parentid="1177" stroke-linejoin="round"/><path id="1434" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,787,13444)" fill="none" ed:tosuperid="1433" stroke-linecap="round" stroke="#696969" ed:parentid="1177" stroke-linejoin="round"/><path id="1436" d="M-13.5,45.3C5.1,45.3,-12.9,-45.3,13.5,-45.3" transform="matrix(1,0,0,1,826,13557)" fill="none" ed:tosuperid="1435" stroke-linecap="round" stroke="#696969" ed:parentid="1181" stroke-linejoin="round"/><path id="1438" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,826,13582)" fill="none" ed:tosuperid="1437" stroke-linecap="round" stroke="#696969" ed:parentid="1181" stroke-linejoin="round"/><path id="1440" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,826,13607)" fill="none" ed:tosuperid="1439" stroke-linecap="round" stroke="#696969" ed:parentid="1181" stroke-linejoin="round"/><path id="1442" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,826,13622)" fill="none" ed:tosuperid="1441" stroke-linecap="round" stroke="#696969" ed:parentid="1181" stroke-linejoin="round"/><path id="1444" d="M-13.5,-54.8C5.4,-54.8,-13.5,54.8,13.5,54.8" transform="matrix(1,0,0,1,826,13657)" fill="none" ed:tosuperid="1443" stroke-linecap="round" stroke="#696969" ed:parentid="1181" stroke-linejoin="round"/><path id="1446" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,815,13755)" fill="none" ed:tosuperid="1445" stroke-linecap="round" stroke="#696969" ed:parentid="1183" stroke-linejoin="round"/><path id="1448" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,815,13780)" fill="none" ed:tosuperid="1447" stroke-linecap="round" stroke="#696969" ed:parentid="1183" stroke-linejoin="round"/><path id="1450" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,891,13838)" fill="none" ed:tosuperid="1449" stroke-linecap="round" stroke="#696969" ed:parentid="1185" stroke-linejoin="round"/><path id="1452" d="M-13.5,42.3C4.9,42.3,-12.4,-42.3,13.5,-42.3" transform="matrix(1,0,0,1,735,13916)" fill="none" ed:tosuperid="1451" stroke-linecap="round" stroke="#696969" ed:parentid="1189" stroke-linejoin="round"/><path id="1454" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,735,13950)" fill="none" ed:tosuperid="1453" stroke-linecap="round" stroke="#696969" ed:parentid="1189" stroke-linejoin="round"/><path id="1456" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,735,13975)" fill="none" ed:tosuperid="1455" stroke-linecap="round" stroke="#696969" ed:parentid="1189" stroke-linejoin="round"/><path id="1458" d="M-13.5,-42.3C4.9,-42.3,-12.4,42.3,13.5,42.3" transform="matrix(1,0,0,1,735,14000)" fill="none" ed:tosuperid="1457" stroke-linecap="round" stroke="#696969" ed:parentid="1189" stroke-linejoin="round"/><path id="1460" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,731,14158)" fill="none" ed:tosuperid="1459" stroke-linecap="round" stroke="#696969" ed:parentid="1461" stroke-linejoin="round"/><path id="1462" d="M-13.5,171.9C5.4,171.9,-13.5,-171.9,13.5,-171.9" transform="matrix(1,0,0,1,634,14350)" fill="none" ed:tosuperid="1461" stroke-linecap="round" stroke="#696969" ed:parentid="132" stroke-linejoin="round"/><path id="1464" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" transform="matrix(1,0,0,1,731,14174)" fill="none" ed:tosuperid="1463" stroke-linecap="round" stroke="#696969" ed:parentid="1461" stroke-linejoin="round"/><path id="1466" d="M-13.5,-39.3C4.7,-39.3,-11.8,39.3,13.5,39.3" transform="matrix(1,0,0,1,731,14218)" fill="none" ed:tosuperid="1465" stroke-linecap="round" stroke="#696969" ed:parentid="1461" stroke-linejoin="round"/><path id="1468" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,800,14296)" fill="none" ed:tosuperid="1467" stroke-linecap="round" stroke="#696969" ed:parentid="1191" stroke-linejoin="round"/><path id="1470" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,800,14311)" fill="none" ed:tosuperid="1469" stroke-linecap="round" stroke="#696969" ed:parentid="1191" stroke-linejoin="round"/><path id="1472" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,1037,14364)" fill="none" ed:tosuperid="1471" stroke-linecap="round" stroke="#696969" ed:parentid="1199" stroke-linejoin="round"/><path id="1474" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,1063,14414)" fill="none" ed:tosuperid="1473" stroke-linecap="round" stroke="#696969" ed:parentid="1201" stroke-linejoin="round"/><path id="1476" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,1089,14496)" fill="none" ed:tosuperid="1475" stroke-linecap="round" stroke="#696969" ed:parentid="1203" stroke-linejoin="round"/><path id="1478" d="M-13.5,-26.8C3,-26.8,-7.9,26.8,13.5,26.8" transform="matrix(1,0,0,1,1089,14530)" fill="none" ed:tosuperid="1477" stroke-linecap="round" stroke="#696969" ed:parentid="1203" stroke-linejoin="round"/><path id="1480" d="M-13.5,54.8C5.4,54.8,-13.5,-54.8,13.5,-54.8" transform="matrix(1,0,0,1,735,14786)" fill="none" ed:tosuperid="1479" stroke-linecap="round" stroke="#696969" ed:parentid="1197" stroke-linejoin="round"/><path id="1482" d="M-13.5,29.8C3.5,29.8,-9,-29.8,13.5,-29.8" transform="matrix(1,0,0,1,735,14811)" fill="none" ed:tosuperid="1481" stroke-linecap="round" stroke="#696969" ed:parentid="1197" stroke-linejoin="round"/><path id="1484" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,735,14845)" fill="none" ed:tosuperid="1483" stroke-linecap="round" stroke="#696969" ed:parentid="1197" stroke-linejoin="round"/><path id="1486" d="M-13.5,-39.3C4.7,-39.3,-11.8,39.3,13.5,39.3" transform="matrix(1,0,0,1,735,14880)" fill="none" ed:tosuperid="1485" stroke-linecap="round" stroke="#696969" ed:parentid="1197" stroke-linejoin="round"/><path id="1488" d="M-13.5,-64.3C5.4,-64.3,-13.5,64.3,13.5,64.3" transform="matrix(1,0,0,1,735,14905)" fill="none" ed:tosuperid="1487" stroke-linecap="round" stroke="#696969" ed:parentid="1197" stroke-linejoin="round"/><path id="1490" d="M-13.5,224.9C5.4,224.9,-13.5,-224.9,13.5,-224.9" transform="matrix(1,0,0,1,634,15292)" fill="none" ed:tosuperid="1489" stroke-linecap="round" stroke="#696969" ed:parentid="134" stroke-linejoin="round"/><path id="1492" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,731,15047)" fill="none" ed:tosuperid="1491" stroke-linecap="round" stroke="#696969" ed:parentid="1489" stroke-linejoin="round"/><path id="1494" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,731,15072)" fill="none" ed:tosuperid="1493" stroke-linecap="round" stroke="#696969" ed:parentid="1489" stroke-linejoin="round"/><path id="1496" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,731,15087)" fill="none" ed:tosuperid="1495" stroke-linecap="round" stroke="#696969" ed:parentid="1489" stroke-linejoin="round"/><path id="1498" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,917,15153)" fill="none" ed:tosuperid="1497" stroke-linecap="round" stroke="#696969" ed:parentid="1213" stroke-linejoin="round"/><path id="1500" d="M-13.5,22C2.1,22,-5.9,-22,13.5,-22" transform="matrix(1,0,0,1,813,15211)" fill="none" ed:tosuperid="1499" stroke-linecap="round" stroke="#696969" ed:parentid="1215" stroke-linejoin="round"/><path id="1502" d="M-13.5,-22C2.1,-22,-5.9,22,13.5,22" transform="matrix(1,0,0,1,813,15255)" fill="none" ed:tosuperid="1501" stroke-linecap="round" stroke="#696969" ed:parentid="1215" stroke-linejoin="round"/><path id="1504" d="M-13.5,10.8C-0.2,10.8,-0.4,-10.8,13.5,-10.8" transform="matrix(1,0,0,1,761,15387)" fill="none" ed:tosuperid="1503" stroke-linecap="round" stroke="#696969" ed:parentid="1219" stroke-linejoin="round"/><path id="1506" d="M-13.5,-14.3C0.6,-14.3,-2.2,14.3,13.5,14.3" transform="matrix(1,0,0,1,761,15412)" fill="none" ed:tosuperid="1505" stroke-linecap="round" stroke="#696969" ed:parentid="1219" stroke-linejoin="round"/><path id="1508" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" transform="matrix(1,0,0,1,761,15428)" fill="none" ed:tosuperid="1507" stroke-linecap="round" stroke="#696969" ed:parentid="1219" stroke-linejoin="round"/><path id="1512" d="M-13.5,34.5C4.1,34.5,-10.5,-34.5,13.5,-34.5" transform="matrix(1,0,0,1,802,15523)" fill="none" ed:tosuperid="1511" stroke-linecap="round" stroke="#696969" ed:parentid="1221" stroke-linejoin="round"/><path id="1514" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" transform="matrix(1,0,0,1,802,15567)" fill="none" ed:tosuperid="1513" stroke-linecap="round" stroke="#696969" ed:parentid="1221" stroke-linejoin="round"/><path id="1516" d="M-13.5,-34.5C4.1,-34.5,-10.5,34.5,13.5,34.5" transform="matrix(1,0,0,1,802,15592)" fill="none" ed:tosuperid="1515" stroke-linecap="round" stroke="#696969" ed:parentid="1221" stroke-linejoin="round"/><path id="1518" d="M-13.5,31C3.7,31,-9.4,-31,13.5,-31" transform="matrix(1,0,0,1,802,15708)" fill="none" ed:tosuperid="1517" stroke-linecap="round" stroke="#696969" ed:parentid="1223" stroke-linejoin="round"/><path id="1520" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,936,15708)" fill="none" ed:tosuperid="1519" stroke-linecap="round" stroke="#696969" ed:parentid="1225" stroke-linejoin="round"/><path id="1522" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,1016,15739)" fill="none" ed:tosuperid="1521" stroke-linecap="round" stroke="#696969" ed:parentid="1227" stroke-linejoin="round"/><path id="1524" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,962,15784)" fill="none" ed:tosuperid="1523" stroke-linecap="round" stroke="#696969" ed:parentid="1229" stroke-linejoin="round"/><path id="1526" d="M-13.5,-40.5C4.8,-40.5,-12.1,40.5,13.5,40.5" transform="matrix(1,0,0,1,802,15779)" fill="none" ed:tosuperid="1525" stroke-linecap="round" stroke="#696969" ed:parentid="1223" stroke-linejoin="round"/><path id="1528" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,839,15898)" fill="none" ed:tosuperid="1527" stroke-linecap="round" stroke="#696969" ed:parentid="1231" stroke-linejoin="round"/><path id="1530" d="M-13.5,-6.5C-1.2,-6.5,1.8,6.5,13.5,6.5" transform="matrix(1,0,0,1,839,15932)" fill="none" ed:tosuperid="1529" stroke-linecap="round" stroke="#696969" ed:parentid="1231" stroke-linejoin="round"/><path id="1532" d="M-13.5,-22C2.1,-22,-5.9,22,13.5,22" transform="matrix(1,0,0,1,839,15948)" fill="none" ed:tosuperid="1531" stroke-linecap="round" stroke="#696969" ed:parentid="1231" stroke-linejoin="round"/><path id="1534" d="M-13.5,-37.5C4.5,-37.5,-11.4,37.5,13.5,37.5" transform="matrix(1,0,0,1,839,15963)" fill="none" ed:tosuperid="1533" stroke-linecap="round" stroke="#696969" ed:parentid="1231" stroke-linejoin="round"/><path id="1536" d="M-13.5,349.9C5.4,349.9,-13.5,-349.9,13.5,-349.9" transform="matrix(1,0,0,1,618,16458)" fill="none" ed:tosuperid="1535" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="1538" d="M-13.5,42.3C4.9,42.3,-12.4,-42.3,13.5,-42.3" transform="matrix(1,0,0,1,771,16181)" fill="none" ed:tosuperid="1537" stroke-linecap="round" stroke="#696969" ed:parentid="1235" stroke-linejoin="round"/><path id="1540" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,771,16216)" fill="none" ed:tosuperid="1539" stroke-linecap="round" stroke="#696969" ed:parentid="1235" stroke-linejoin="round"/><path id="1542" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,771,16241)" fill="none" ed:tosuperid="1541" stroke-linecap="round" stroke="#696969" ed:parentid="1235" stroke-linejoin="round"/><path id="1544" d="M-13.5,-42.3C4.9,-42.3,-12.4,42.3,13.5,42.3" transform="matrix(1,0,0,1,771,16266)" fill="none" ed:tosuperid="1543" stroke-linecap="round" stroke="#696969" ed:parentid="1235" stroke-linejoin="round"/><path id="1546" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,784,16378)" fill="none" ed:tosuperid="1545" stroke-linecap="round" stroke="#696969" ed:parentid="1237" stroke-linejoin="round"/><path id="1548" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,784,16403)" fill="none" ed:tosuperid="1547" stroke-linecap="round" stroke="#696969" ed:parentid="1237" stroke-linejoin="round"/><path id="1550" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" transform="matrix(1,0,0,1,784,16428)" fill="none" ed:tosuperid="1549" stroke-linecap="round" stroke="#696969" ed:parentid="1237" stroke-linejoin="round"/><path id="1552" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,823,16534)" fill="none" ed:tosuperid="1551" stroke-linecap="round" stroke="#696969" ed:parentid="1241" stroke-linejoin="round"/><path id="1554" d="M-13.5,31C3.7,31,-9.4,-31,13.5,-31" transform="matrix(1,0,0,1,874,16620)" fill="none" ed:tosuperid="1553" stroke-linecap="round" stroke="#696969" ed:parentid="1243" stroke-linejoin="round"/><path id="1556" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,1008,16696)" fill="none" ed:tosuperid="1555" stroke-linecap="round" stroke="#696969" ed:parentid="1263" stroke-linejoin="round"/><path id="1558" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" transform="matrix(1,0,0,1,797,16854)" fill="none" ed:tosuperid="1557" stroke-linecap="round" stroke="#696969" ed:parentid="1245" stroke-linejoin="round"/><path id="1560" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,959,16805)" fill="none" ed:tosuperid="1559" stroke-linecap="round" stroke="#696969" ed:parentid="1557" stroke-linejoin="round"/><path id="1562" d="M-13.5,-1.8C-2.3,-1.8,4.4,1.8,13.5,1.8" transform="matrix(1,0,0,1,959,16830)" fill="none" ed:tosuperid="1561" stroke-linecap="round" stroke="#696969" ed:parentid="1557" stroke-linejoin="round"/><path id="1564" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,959,16846)" fill="none" ed:tosuperid="1563" stroke-linecap="round" stroke="#696969" ed:parentid="1557" stroke-linejoin="round"/><path id="1566" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,959,16861)" fill="none" ed:tosuperid="1565" stroke-linecap="round" stroke="#696969" ed:parentid="1557" stroke-linejoin="round"/><path id="1570" d="M-13.5,-40.5C4.8,-40.5,-12.1,40.5,13.5,40.5" transform="matrix(1,0,0,1,797,16919)" fill="none" ed:tosuperid="1569" stroke-linecap="round" stroke="#696969" ed:parentid="1245" stroke-linejoin="round"/><path id="1572" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,933,16952)" fill="none" ed:tosuperid="1571" stroke-linecap="round" stroke="#696969" ed:parentid="1569" stroke-linejoin="round"/><path id="1574" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,933,16977)" fill="none" ed:tosuperid="1573" stroke-linecap="round" stroke="#696969" ed:parentid="1569" stroke-linejoin="round"/><path id="1576" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,836,17060)" fill="none" ed:tosuperid="1575" stroke-linecap="round" stroke="#696969" ed:parentid="1247" stroke-linejoin="round"/><path id="1578" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,998,17052)" fill="none" ed:tosuperid="1577" stroke-linecap="round" stroke="#696969" ed:parentid="1575" stroke-linejoin="round"/><path id="1580" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,998,17077)" fill="none" ed:tosuperid="1579" stroke-linecap="round" stroke="#696969" ed:parentid="1575" stroke-linejoin="round"/><path id="1584" d="M-13.5,29.8C3.5,29.8,-9,-29.8,13.5,-29.8" transform="matrix(1,0,0,1,849,17174)" fill="none" ed:tosuperid="1583" stroke-linecap="round" stroke="#696969" ed:parentid="1249" stroke-linejoin="round"/><path id="1586" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" transform="matrix(1,0,0,1,849,17199)" fill="none" ed:tosuperid="1585" stroke-linecap="round" stroke="#696969" ed:parentid="1249" stroke-linejoin="round"/><path id="1588" d="M-13.5,-39.3C4.7,-39.3,-11.8,39.3,13.5,39.3" transform="matrix(1,0,0,1,849,17243)" fill="none" ed:tosuperid="1587" stroke-linecap="round" stroke="#696969" ed:parentid="1249" stroke-linejoin="round"/><path id="1590" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" transform="matrix(1,0,0,1,833,17342)" fill="none" ed:tosuperid="1589" stroke-linecap="round" stroke="#696969" ed:parentid="1251" stroke-linejoin="round"/><path id="1592" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" transform="matrix(1,0,0,1,818,17411)" fill="none" ed:tosuperid="1591" stroke-linecap="round" stroke="#696969" ed:parentid="1253" stroke-linejoin="round"/><path id="1594" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" transform="matrix(1,0,0,1,844,17480)" fill="none" ed:tosuperid="1593" stroke-linecap="round" stroke="#696969" ed:parentid="1255" stroke-linejoin="round"/><path id="1596" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,727,17528)" fill="none" ed:tosuperid="1595" stroke-linecap="round" stroke="#696969" ed:parentid="1257" stroke-linejoin="round"/><path id="1598" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,727,17543)" fill="none" ed:tosuperid="1597" stroke-linecap="round" stroke="#696969" ed:parentid="1257" stroke-linejoin="round"/><g id="101" transform="matrix(1,0,0,1,23,10286)" ed:width="346" ed:topictype="mainidea" ed:height="57" ed:layout="rightmap"><path stroke-width="3" d="M4,0L342,0C344.7,0,346,1.3,346,4L346,53C346,55.7,344.7,57,342,57L4,57C1.3,57,0,55.7,0,53L0,4C0,1.3,1.3,0,4,0z" fill="#435fbc" stroke="#435fbc" stroke-linejoin="round"/><text class="st1"><tspan x="21" style="white-space:pre" y="34.5">《JavaScript设计模式与开发实践》</tspan></text></g><g id="102" transform="matrix(1,0,0,1,432,21)" ed:width="245" ed:parentid="101" ed:height="37"><path d="M4,0L241,0C243.7,0,245,1.3,245,4L245,33C245,35.7,243.7,37,241,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第一部分 基础知识（1-3章）</tspan></text></g><g id="104" transform="matrix(1,0,0,1,432,992)" ed:width="247" ed:parentid="101" ed:height="37"><path d="M4,0L243,0C245.7,0,247,1.3,247,4L247,33C247,35.7,245.7,37,243,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第一章 面向对象的JavaScript</tspan></text></g><g id="106" transform="matrix(1,0,0,1,432,2356)" ed:width="217" ed:parentid="101" ed:height="37"><path d="M4,0L213,0C215.7,0,217,1.3,217,4L217,33C217,35.7,215.7,37,213,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第二章 this、call、apply</tspan></text></g><g id="108" transform="matrix(1,0,0,1,432,3311)" ed:width="204" ed:parentid="101" ed:height="37"><path d="M4,0L200,0C202.7,0,204,1.3,204,4L204,33C204,35.7,202.7,37,200,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第三章 闭包和高阶函数</tspan></text></g><g id="110" transform="matrix(1,0,0,1,432,3873)" ed:width="254" ed:parentid="101" ed:height="37"><path d="M4,0L250,0C252.7,0,254,1.3,254,4L254,33C254,35.7,252.7,37,250,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第二部分 设计模式（4-17章）</tspan></text></g><g id="112" transform="matrix(1,0,0,1,432,4251)" ed:width="156" ed:parentid="101" ed:height="37"><path d="M4,0L152,0C154.7,0,156,1.3,156,4L156,33C156,35.7,154.7,37,152,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第四章 单例模式</tspan></text></g><g id="114" transform="matrix(1,0,0,1,432,5122)" ed:width="156" ed:parentid="101" ed:height="37"><path d="M4,0L152,0C154.7,0,156,1.3,156,4L156,33C156,35.7,154.7,37,152,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第五章 策略模式</tspan></text></g><g id="116" transform="matrix(1,0,0,1,432,6199)" ed:width="156" ed:parentid="101" ed:height="37"><path d="M4,0L152,0C154.7,0,156,1.3,156,4L156,33C156,35.7,154.7,37,152,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第六章 代理模式</tspan></text></g><g id="118" transform="matrix(1,0,0,1,432,6966)" ed:width="172" ed:parentid="101" ed:height="37"><path d="M4,0L168,0C170.7,0,172,1.3,172,4L172,33C172,35.7,170.7,37,168,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第七章 迭代器模式</tspan></text></g><g id="120" transform="matrix(1,0,0,1,432,7920)" ed:width="188" ed:parentid="101" ed:height="37"><path d="M4,0L184,0C186.7,0,188,1.3,188,4L188,33C188,35.7,186.7,37,184,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第八章 发布订阅模式</tspan></text></g><g id="122" transform="matrix(1,0,0,1,432,8947)" ed:width="156" ed:parentid="101" ed:height="37"><path d="M4,0L152,0C154.7,0,156,1.3,156,4L156,33C156,35.7,154.7,37,152,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第九章 命令模式</tspan></text></g><g id="124" transform="matrix(1,0,0,1,432,9772)" ed:width="156" ed:parentid="101" ed:height="37"><path d="M4,0L152,0C154.7,0,156,1.3,156,4L156,33C156,35.7,154.7,37,152,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第十章 组合模式</tspan></text></g><g id="126" transform="matrix(1,0,0,1,432,11007)" ed:width="204" ed:parentid="101" ed:height="37"><path d="M4,0L200,0C202.7,0,204,1.3,204,4L204,33C204,35.7,202.7,37,200,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第十一章 模板方法模式</tspan></text></g><g id="128" transform="matrix(1,0,0,1,432,12399)" ed:width="172" ed:parentid="101" ed:height="37"><path d="M4,0L168,0C170.7,0,172,1.3,172,4L172,33C172,35.7,170.7,37,168,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第十二章 享元模式</tspan></text></g><g id="130" transform="matrix(1,0,0,1,432,13565)" ed:width="188" ed:parentid="101" ed:height="37"><path d="M4,0L184,0C186.7,0,188,1.3,188,4L188,33C188,35.7,186.7,37,184,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第十三章 职责链模式</tspan></text></g><g id="132" transform="matrix(1,0,0,1,432,14504)" ed:width="188" ed:parentid="101" ed:height="37"><path d="M4,0L184,0C186.7,0,188,1.3,188,4L188,33C188,35.7,186.7,37,184,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第十四章 中介者模式</tspan></text></g><g id="134" transform="matrix(1,0,0,1,432,15498)" ed:width="188" ed:parentid="101" ed:height="37"><path d="M4,0L184,0C186.7,0,188,1.3,188,4L188,33C188,35.7,186.7,37,184,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第十五章 装饰者模式</tspan></text></g><g id="136" transform="matrix(1,0,0,1,432,16789)" ed:width="172" ed:parentid="101" ed:height="37"><path d="M4,0L168,0C170.7,0,172,1.3,172,4L172,33C172,35.7,170.7,37,168,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第十六章 状态模式</tspan></text></g><g id="138" transform="matrix(1,0,0,1,432,17765)" ed:width="188" ed:parentid="101" ed:height="37"><path d="M4,0L184,0C186.7,0,188,1.3,188,4L188,33C188,35.7,186.7,37,184,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第十七章 适配器模式</tspan></text></g><g id="140" transform="matrix(1,0,0,1,432,18019)" ed:width="343" ed:parentid="101" ed:height="37"><path d="M4,0L339,0C341.7,0,343,1.3,343,4L343,33C343,35.7,341.7,37,339,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第三部分 设计原则和编程技巧（18-22章）</tspan></text></g><g id="142" transform="matrix(1,0,0,1,432,18229)" ed:width="204" ed:parentid="101" ed:height="37"><path d="M4,0L200,0C202.7,0,204,1.3,204,4L204,33C204,35.7,202.7,37,200,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第十八章 单一职责原则</tspan></text></g><g id="144" transform="matrix(1,0,0,1,432,18607)" ed:width="204" ed:parentid="101" ed:height="37"><path d="M4,0L200,0C202.7,0,204,1.3,204,4L204,33C204,35.7,202.7,37,200,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第十九章 最少知识原则</tspan></text></g><g id="146" transform="matrix(1,0,0,1,432,19104)" ed:width="211" ed:parentid="101" ed:height="37"><path d="M4,0L207,0C209.7,0,211,1.3,211,4L211,33C211,35.7,209.7,37,207,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第二十章 开放-封闭原则</tspan></text></g><g id="148" transform="matrix(1,0,0,1,432,19689)" ed:width="268" ed:parentid="101" ed:height="37"><path d="M4,0L264,0C266.7,0,268,1.3,268,4L268,33C268,35.7,266.7,37,264,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第二十一章 接口和面向接口编程</tspan></text></g><g id="150" transform="matrix(1,0,0,1,432,20294)" ed:width="188" ed:parentid="101" ed:height="37"><path d="M4,0L184,0C186.7,0,188,1.3,188,4L188,33C188,35.7,186.7,37,184,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第二十二章 代码重构</tspan></text></g><g id="177" transform="matrix(1,0,0,1,615,4033)" ed:width="118" ed:parentid="112" ed:height="24.5"><path d="M0,24.5L118,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.1.实现单例模式</tspan></text></g><g id="180" transform="matrix(1,0,0,1,663,18164)" ed:width="176" ed:parentid="142" ed:height="24.5"><path d="M0,24.5L176,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">18.1.设计模式中的SRP原则</tspan></text></g><g id="182" transform="matrix(1,0,0,1,663,18235)" ed:width="152" ed:parentid="142" ed:height="24.5"><path d="M0,24.5L152,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">18.2.何时应该分离职责</tspan></text></g><g id="184" transform="matrix(1,0,0,1,663,18297)" ed:width="124" ed:parentid="142" ed:height="24.5"><path d="M0,24.5L124,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">18.3.违反SRP原则</tspan></text></g><g id="186" transform="matrix(1,0,0,1,663,18353)" ed:width="150" ed:parentid="142" ed:height="24.5"><path d="M0,24.5L150,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">18.4.SRP原则的优缺点</tspan></text></g><g id="188" transform="matrix(1,0,0,1,663,18517)" ed:width="165" ed:parentid="144" ed:height="24.5"><path d="M0,24.5L165,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">19.1.减少对象之间的联系</tspan></text></g><g id="190" transform="matrix(1,0,0,1,663,18629)" ed:width="204" ed:parentid="144" ed:height="24.5"><path d="M0,24.5L204,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">19.2.设计模式中的最少知识原则</tspan></text></g><g id="192" transform="matrix(1,0,0,1,663,18766)" ed:width="217" ed:parentid="144" ed:height="24.5"><path d="M0,24.5L217,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">19.3.封装在最少知识原则中的体现</tspan></text></g><g id="194" transform="matrix(1,0,0,1,670,18954)" ed:width="192" ed:parentid="146" ed:height="24.5"><path d="M0,24.5L192,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">20.1.扩展window.onload函数</tspan></text></g><g id="196" transform="matrix(1,0,0,1,670,19020)" ed:width="113" ed:parentid="146" ed:height="24.5"><path d="M0,24.5L113,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">20.2.开放和封闭</tspan></text></g><g id="198" transform="matrix(1,0,0,1,670,19070)" ed:width="217" ed:parentid="146" ed:height="24.5"><path d="M0,24.5L217,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">20.3.用对象的多态性消除条件分支</tspan></text></g><g id="200" transform="matrix(1,0,0,1,670,19160)" ed:width="139" ed:parentid="146" ed:height="24.5"><path d="M0,24.5L139,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">20.4.找出变化的地方</tspan></text></g><g id="202" transform="matrix(1,0,0,1,670,19251)" ed:width="210" ed:parentid="146" ed:height="24.5"><path d="M0,24.5L210,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">20.5.设计模式中的开放-封闭原则</tspan></text></g><g id="204" transform="matrix(1,0,0,1,670,19316)" ed:width="184" ed:parentid="146" ed:height="24.5"><path d="M0,24.5L184,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">20.6.开放-封闭原则的相对性</tspan></text></g><g id="206" transform="matrix(1,0,0,1,670,19372)" ed:width="139" ed:parentid="146" ed:height="24.5"><path d="M0,24.5L139,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">20.7.接受第一次愚弄</tspan></text></g><g id="208" transform="matrix(1,0,0,1,727,19605)" ed:width="152" ed:parentid="148" ed:height="24.5"><path d="M0,24.5L152,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">21.1.回到Java的抽象类</tspan></text></g><g id="210" transform="matrix(1,0,0,1,727,19670)" ed:width="102" ed:parentid="148" ed:height="24.5"><path d="M0,24.5L102,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">21.2.interface</tspan></text></g><g id="212" transform="matrix(1,0,0,1,727,19767)" ed:width="294" ed:parentid="148" ed:height="24.5"><path d="M0,24.5L294,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">21.3.JavaScript语言是否需要抽象类和interface</tspan></text></g><g id="214" transform="matrix(1,0,0,1,727,19873)" ed:width="191" ed:parentid="148" ed:height="24.5"><path d="M0,24.5L191,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">21.4.用鸭子类型进行接口检查</tspan></text></g><g id="216" transform="matrix(1,0,0,1,727,19942)" ed:width="297" ed:parentid="148" ed:height="24.5"><path d="M0,24.5L297,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">21.5.用TypeScript编写基于interface的命令模式</tspan></text></g><g id="218" transform="matrix(1,0,0,1,647,20130)" ed:width="100" ed:parentid="150" ed:height="24.5"><path d="M0,24.5L100,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">22.1.提炼函数</tspan></text></g><g id="220" transform="matrix(1,0,0,1,647,20223)" ed:width="165" ed:parentid="150" ed:height="24.5"><path d="M0,24.5L165,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">22.2.合并重复的条件片段</tspan></text></g><g id="222" transform="matrix(1,0,0,1,647,20264)" ed:width="204" ed:parentid="150" ed:height="24.5"><path d="M0,24.5L204,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">22.3.把条件分支语句提炼成函数</tspan></text></g><g id="224" transform="matrix(1,0,0,1,647,20304)" ed:width="126" ed:parentid="150" ed:height="24.5"><path d="M0,24.5L126,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">22.4.合理使用循环</tspan></text></g><g id="226" transform="matrix(1,0,0,1,647,20351)" ed:width="243" ed:parentid="150" ed:height="24.5"><path d="M0,24.5L243,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">22.5.提前让函数退出代替嵌套条件分支</tspan></text></g><g id="228" transform="matrix(1,0,0,1,647,20397)" ed:width="243" ed:parentid="150" ed:height="24.5"><path d="M0,24.5L243,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">22.6.传递对象参数代替过长的参数列表</tspan></text></g><g id="230" transform="matrix(1,0,0,1,647,20428)" ed:width="149" ed:parentid="150" ed:height="24.5"><path d="M0,24.5L149,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">22.7尽量减少参数数量</tspan></text></g><g id="232" transform="matrix(1,0,0,1,647,20475)" ed:width="139" ed:parentid="150" ed:height="24.5"><path d="M0,24.5L139,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">22.8.少用三目运算符</tspan></text></g><g id="234" transform="matrix(1,0,0,1,647,20521)" ed:width="152" ed:parentid="150" ed:height="24.5"><path d="M0,24.5L152,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">22.9.合理使用链式调用</tspan></text></g><g id="236" transform="matrix(1,0,0,1,647,20552)" ed:width="121" ed:parentid="150" ed:height="24.5"><path d="M0,24.5L121,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">22.10.分解大型类</tspan></text></g><g id="238" transform="matrix(1,0,0,1,647,20583)" ed:width="185" ed:parentid="150" ed:height="24.5"><path d="M0,24.5L185,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">22.11.用return退出多重循环</tspan></text></g><g id="240" transform="matrix(1,0,0,1,802,18016)" ed:width="514" ed:parentid="140" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">前辈总结的这些设计原则通常指的是单一职责原则、里氏替换原则、依赖倒置原则、接</tspan><tspan x="8" style="white-space:pre" y="35.1">口隔离原则、合成复用原则和最少知识原则</tspan></text></g><g id="242" transform="matrix(1,0,0,1,760,18092)" ed:width="354" ed:parentid="246" ed:height="24.5"><path d="M0,24.5L354,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">单一职责原则（SRP）的职责被定义为“引起变化的原因”</tspan></text></g><g id="244" transform="matrix(1,0,0,1,760,18123)" ed:width="302" ed:parentid="246" ed:height="24.5"><path d="M0,24.5L302,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">SRP原则体现为：一个对象（方法）只做一件事情</tspan></text></g><g id="246" transform="matrix(1,0,0,1,663,18108)" ed:width="70" ed:parentid="142" ed:height="24.5"><path d="M0,24.5L70,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">写在前面</tspan></text></g><g id="248" transform="matrix(1,0,0,1,866,18154)" ed:width="514" ed:parentid="180" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">SRP原则在很多设计模式中都有着广泛的运用，例如代理模式、迭代器模式、单例模式</tspan><tspan x="8" style="white-space:pre" y="35.1">和装饰者模式</tspan></text></g><g id="250" transform="matrix(1,0,0,1,842,18204)" ed:width="354" ed:parentid="182" ed:height="24.5"><path d="M0,24.5L354,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">SRP原则是所有原则中最简单也是最难正确运用的原则之一</tspan></text></g><g id="252" transform="matrix(1,0,0,1,842,18235)" ed:width="460" ed:parentid="182" ed:height="24.5"><path d="M0,24.5L460,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一方面，如果随着需求的变化，有两个职责总是同时变化，那就不必分离他们</tspan></text></g><g id="254" transform="matrix(1,0,0,1,842,18266)" ed:width="395" ed:parentid="182" ed:height="24.5"><path d="M0,24.5L395,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">另一方面，职责的变化轴线仅当它们确定会发生变化时才具有意义</tspan></text></g><g id="256" transform="matrix(1,0,0,1,840,18328)" ed:width="514" ed:parentid="186" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">SRP原则的优点时降低单个类或者对象的复杂度，按照职责把对象分解成更小的粒度，</tspan><tspan x="8" style="white-space:pre" y="35.1">这有助于代码的复用，也有利于进行单元测试</tspan></text></g><g id="258" transform="matrix(1,0,0,1,840,18378)" ed:width="354" ed:parentid="186" ed:height="24.5"><path d="M0,24.5L354,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">SRP原则的一些缺点，最明显的是会增加编写代码的复杂度</tspan></text></g><g id="260" transform="matrix(1,0,0,1,663,18436)" ed:width="509" ed:parentid="144" ed:height="24.5"><path d="M0,24.5L509,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">最少知识原则（LKP）说的是一个软件实体应当尽可能少地与其他实体发生相互作用。</tspan></text></g><g id="262" transform="matrix(1,0,0,1,663,18467)" ed:width="514" ed:parentid="144" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">这里的软件实体是一个广义的概念，不仅包括对象，还包括系统、类、模块、函数、变</tspan><tspan x="8" style="white-space:pre" y="35.1">量等</tspan></text></g><g id="264" transform="matrix(1,0,0,1,855,18517)" ed:width="408" ed:parentid="188" ed:height="24.5"><path d="M0,24.5L408,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">最少知识原则要求我们在设计程序时，应当尽量减少对象之间的交互</tspan></text></g><g id="266" transform="matrix(1,0,0,1,894,18548)" ed:width="421" ed:parentid="190" ed:height="24.5"><path d="M0,24.5L421,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">最少知识原则在设计模式中体现得最多的地方是中介者模式和外观模式</tspan></text></g><g id="268" transform="matrix(1,0,0,1,894,18588)" ed:width="94" ed:parentid="190" ed:height="24.5"><path d="M0,24.5L94,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.中介者模式</tspan></text></g><g id="270" transform="matrix(1,0,0,1,1015,18579)" ed:width="514" ed:parentid="268" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">通过增加一个中介者对象，让所有的相关对象都通过中介者对象来通信，而不是互相引</tspan><tspan x="8" style="white-space:pre" y="35.1">用</tspan></text></g><g id="272" transform="matrix(1,0,0,1,894,18669)" ed:width="81" ed:parentid="190" ed:height="24.5"><path d="M0,24.5L81,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.外观模式</tspan></text></g><g id="274" transform="matrix(1,0,0,1,1002,18629)" ed:width="514" ed:parentid="272" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">外观模式的作用是对客户屏蔽一组子系统的复杂性。外观模式对客户提供一个简单易用</tspan><tspan x="8" style="white-space:pre" y="35.1">的高层接口，高层接口会把客户的请求转发给子系统来完成具体的功能实现</tspan></text></g><g id="276" transform="matrix(1,0,0,1,1002,18694)" ed:width="174" ed:parentid="272" ed:height="24.5"><path d="M0,24.5L174,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">外观模式的作用主要有两点</tspan></text></g><g id="278" transform="matrix(1,0,0,1,1203,18679)" ed:width="265" ed:parentid="276" ed:height="24.5"><path d="M0,24.5L265,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">为一组子系统提供一个简单便利的访问入口</tspan></text></g><g id="280" transform="matrix(1,0,0,1,1203,18710)" ed:width="395" ed:parentid="276" ed:height="24.5"><path d="M0,24.5L395,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">隔离客户与复杂子系统之间的联系，客户不用去了解子系统的细节</tspan></text></g><g id="282" transform="matrix(1,0,0,1,907,18741)" ed:width="514" ed:parentid="192" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">封装在很大程度上表达的是数据的隐藏。一个模块或者对象可以将内部的数据或者实现</tspan><tspan x="8" style="white-space:pre" y="35.1">细节隐藏起来，只暴露必要的接口API供外界访问</tspan></text></g><g id="284" transform="matrix(1,0,0,1,907,18791)" ed:width="362" ed:parentid="192" ed:height="24.5"><path d="M0,24.5L362,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">最少知识原则也叫做迪米特法则（Law of Demeter，LoD）</tspan></text></g><g id="288" transform="matrix(1,0,0,1,670,18873)" ed:width="70" ed:parentid="146" ed:height="24.5"><path d="M0,24.5L70,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">写在前面</tspan></text></g><g id="290" transform="matrix(1,0,0,1,767,18848)" ed:width="429" ed:parentid="288" ed:height="24.5"><path d="M0,24.5L429,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在面向对象的程序设计中，开放-封闭原则（OCP）是最重要的一条原则</tspan></text></g><g id="292" transform="matrix(1,0,0,1,767,18879)" ed:width="514" ed:parentid="288" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">开放-封闭原则定义如下：软件实体（类、模块、函数）等应该是可以扩展的，但是不</tspan><tspan x="8" style="white-space:pre" y="35.1">可修改</tspan></text></g><g id="294" transform="matrix(1,0,0,1,889,18929)" ed:width="474" ed:parentid="194" ed:height="24.5"><path d="M0,24.5L474,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">通过增加代码，而不是修改代码的方式，来给window.onload函数添加新的功能</tspan></text></g><g id="296" transform="matrix(1,0,0,1,889,18960)" ed:width="514" ed:parentid="194" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">通过动态装饰函数的方式，我们完全不用理会从前window.onload函数的内部实现，无</tspan><tspan x="8" style="white-space:pre" y="35.1">论它的实现优雅或是丑陋</tspan></text></g><g id="298" transform="matrix(1,0,0,1,810,19010)" ed:width="514" ed:parentid="196" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">引出开放-封闭原则的思想-当需要改变一个程序的功能或者给这个程序增加新功能的时</tspan><tspan x="8" style="white-space:pre" y="35.1">候，可以使用增加代码的方式，但是不允许改动程序的源代码</tspan></text></g><g id="300" transform="matrix(1,0,0,1,914,19060)" ed:width="514" ed:parentid="198" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">利用多态的思想，我们把程序中不变的部分隔离出来（动物都会叫），然后把可变的部</tspan><tspan x="8" style="white-space:pre" y="35.1">分封装起来（不同类型的动物发出不同的叫声），这样一来程序就具有了可扩展性</tspan></text></g><g id="302" transform="matrix(1,0,0,1,836,19110)" ed:width="514" ed:parentid="200" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">我们还是能找到一些让程序尽量遵守开放-封闭原则的规律，最明显的就是找出程序中</tspan><tspan x="8" style="white-space:pre" y="35.1">将要发生变化的地方，然后把变化封装起来</tspan></text></g><g id="304" transform="matrix(1,0,0,1,836,19160)" ed:width="473" ed:parentid="200" ed:height="24.5"><path d="M0,24.5L473,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">通过封装变化的方式，可以把系统中稳定不变的部分和容易变化的部分隔离出来</tspan></text></g><g id="306" transform="matrix(1,0,0,1,836,19191)" ed:width="514" ed:parentid="200" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">除了利用对象的多态性之外，还有其他方式可以帮助我们编写遵守开放-封闭原则的代</tspan><tspan x="8" style="white-space:pre" y="35.1">码：1.放置挂钩(hook)；2.使用回调函数</tspan></text></g><g id="308" transform="matrix(1,0,0,1,907,19241)" ed:width="514" ed:parentid="202" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">几乎所有的设计模式都是遵守开放-封闭原则的，我们见到的好设计，通常都经得起开</tspan><tspan x="8" style="white-space:pre" y="35.1">放-封闭原则的考验</tspan></text></g><g id="310" transform="matrix(1,0,0,1,881,19291)" ed:width="278" ed:parentid="204" ed:height="24.5"><path d="M0,24.5L278,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">实际上，让程序保持完全封闭是不容易做到的</tspan></text></g><g id="312" transform="matrix(1,0,0,1,881,19322)" ed:width="514" ed:parentid="204" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">而且让程序符合开放-封闭原则的代价是引入更多的抽象层次，更多的抽象有可能会增</tspan><tspan x="8" style="white-space:pre" y="35.1">大代码的复杂度</tspan></text></g><g id="314" transform="matrix(1,0,0,1,727,19489)" ed:width="213" ed:parentid="148" ed:height="24.5"><path d="M0,24.5L213,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">谈到接口时通常涉及以下几种含义</tspan></text></g><g id="316" transform="matrix(1,0,0,1,967,19430)" ed:width="514" ed:parentid="314" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">通过主动暴露的接口来通信，可以隐藏软件系统内部的工作细节。这也是我们最熟悉的</tspan><tspan x="8" style="white-space:pre" y="35.1">第一种接口含义</tspan></text></g><g id="318" transform="matrix(1,0,0,1,967,19480)" ed:width="514" ed:parentid="314" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">第二种接口是一些语言提供的关键字，比如Java的interface。interface关键字可以产</tspan><tspan x="8" style="white-space:pre" y="35.1">生一个完全抽象的类</tspan></text></g><g id="320" transform="matrix(1,0,0,1,967,19530)" ed:width="514" ed:parentid="314" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">第三种接口即是我们谈论的”面向接口编程“中的接口，接口的含义在这里体现得更为</tspan><tspan x="8" style="white-space:pre" y="35.1">抽象</tspan></text></g><g id="322" transform="matrix(1,0,0,1,906,19580)" ed:width="514" ed:parentid="208" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">静态类型语言通常设计为可以”向上转型“。当给一个类变量赋值时，这个变量的类型</tspan><tspan x="8" style="white-space:pre" y="35.1">既可以使用这个类本身，也可以使用这个类的超类</tspan></text></g><g id="324" transform="matrix(1,0,0,1,906,19630)" ed:width="369" ed:parentid="208" ed:height="24.5"><path d="M0,24.5L369,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">从过程上来看，”面向接口编程“其实是”面向超类型编程“</tspan></text></g><g id="326" transform="matrix(1,0,0,1,856,19661)" ed:width="514" ed:parentid="210" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">虽然很多人在实际使用中刻意区分抽象类和interface，但使用interface实际上也是继</tspan><tspan x="8" style="white-space:pre" y="35.1">承的一种方式，叫做接口继承</tspan></text></g><g id="328" transform="matrix(1,0,0,1,1048,19726)" ed:width="267" ed:parentid="212" ed:height="24.5"><path d="M0,24.5L267,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">抽象类和interface的作用主要都是以下两点</tspan></text></g><g id="330" transform="matrix(1,0,0,1,1342,19711)" ed:width="367" ed:parentid="328" ed:height="24.5"><path d="M0,24.5L367,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.通过向上转型来隐藏对象的真正类型，以表现对象的多态性</tspan></text></g><g id="332" transform="matrix(1,0,0,1,1342,19742)" ed:width="211" ed:parentid="328" ed:height="24.5"><path d="M0,24.5L211,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.约定类与类之间的一些契约行为</tspan></text></g><g id="334" transform="matrix(1,0,0,1,1048,19773)" ed:width="301" ed:parentid="212" ed:height="24.5"><path d="M0,24.5L301,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">很少人在JavaScript开发中去关心对象的真正类型</tspan></text></g><g id="336" transform="matrix(1,0,0,1,1048,19804)" ed:width="514" ed:parentid="212" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">因为不需要进行向上转型，接口在JavaScript中的最大作用就退化到了检查代码的规范</tspan><tspan x="8" style="white-space:pre" y="35.1">性</tspan></text></g><g id="338" transform="matrix(1,0,0,1,945,19854)" ed:width="514" ed:parentid="214" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">鸭子类型是动态语言面向对象设计中德一个重要概念。利用鸭子类型的思想，不必借助</tspan><tspan x="8" style="white-space:pre" y="35.1">超类型的帮助，就能在动态类型语言中轻松地实现本章提到的设计原则：面向接口编</tspan><tspan x="8" style="white-space:pre" y="54.1">程，而不是面向实现编程</tspan></text></g><g id="340" transform="matrix(1,0,0,1,1051,19923)" ed:width="514" ed:parentid="216" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Typescript是微软开发的一种编程语言，是JavaScript的一个超集。Typescript代码最</tspan><tspan x="8" style="white-space:pre" y="35.1">终会被编译成原生的JavaScript代码执行。通过Typescript，我们可以使用静态语言的</tspan><tspan x="8" style="white-space:pre" y="54.1">方式来编写JavaScript程序</tspan></text></g><g id="342" transform="matrix(1,0,0,1,647,20018)" ed:width="514" ed:parentid="150" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">模式和重构之间有着一种与生俱来的关系。从某种角度来看，设计模式的目的即使为许</tspan><tspan x="8" style="white-space:pre" y="35.1">多重构行为提供目标</tspan></text></g><g id="344" transform="matrix(1,0,0,1,774,20068)" ed:width="356" ed:parentid="218" ed:height="24.5"><path d="M0,24.5L356,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">这是一种很常见的优化工作，这样做的好处主要有以下几点</tspan></text></g><g id="346" transform="matrix(1,0,0,1,774,20099)" ed:width="133" ed:parentid="218" ed:height="24.5"><path d="M0,24.5L133,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.避免出现超大函数</tspan></text></g><g id="348" transform="matrix(1,0,0,1,774,20130)" ed:width="211" ed:parentid="218" ed:height="24.5"><path d="M0,24.5L211,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.独立出来的函数有助于代码复用</tspan></text></g><g id="350" transform="matrix(1,0,0,1,774,20161)" ed:width="198" ed:parentid="218" ed:height="24.5"><path d="M0,24.5L198,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.独立出来的函数更容易被覆写</tspan></text></g><g id="352" transform="matrix(1,0,0,1,774,20192)" ed:width="406" ed:parentid="218" ed:height="24.5"><path d="M0,24.5L406,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.独立出来的函数如果拥有一个良好的命名，本身就起到注释的作用</tspan></text></g><g id="354" transform="matrix(1,0,0,1,839,20223)" ed:width="447" ed:parentid="220" ed:height="24.5"><path d="M0,24.5L447,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">条件分支语句内部散布了一些重复的代码，那么就有必要进行合并去重工作</tspan></text></g><g id="356" transform="matrix(1,0,0,1,878,20254)" ed:width="514" ed:parentid="222" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">复杂的条件分支语句是导致程序难以阅读和理解的重要原因，而且容易导致一个庞大的</tspan><tspan x="8" style="white-space:pre" y="35.1">函数</tspan></text></g><g id="358" transform="matrix(1,0,0,1,800,20304)" ed:width="369" ed:parentid="224" ed:height="24.5"><path d="M0,24.5L369,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">合理利用循环不仅可以完成同样的功能，还可以使代码量更少</tspan></text></g><g id="360" transform="matrix(1,0,0,1,917,20335)" ed:width="330" ed:parentid="226" ed:height="24.5"><path d="M0,24.5L330,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">关于”函数只有一个出口“，往往会有一些不同的看法</tspan></text></g><g id="362" transform="matrix(1,0,0,1,917,20366)" ed:width="502" ed:parentid="226" ed:height="24.5"><path d="M0,24.5L502,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">有一个常见的技巧，即在面对一个嵌套的if分支时，我们可以把外层if表达式进行反转</tspan></text></g><g id="364" transform="matrix(1,0,0,1,917,20397)" ed:width="486" ed:parentid="228" ed:height="24.5"><path d="M0,24.5L486,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">有时候一个函数可能接受多个参数，而参数的数量越多，函数就越难以理解和使用</tspan></text></g><g id="366" transform="matrix(1,0,0,1,823,20428)" ed:width="499" ed:parentid="230" ed:height="24.5"><path d="M0,24.5L499,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在实际开发中，向函数传递参数不可避免，但我们应该尽量减少函数接收的参数数量</tspan></text></g><g id="368" transform="matrix(1,0,0,1,813,20459)" ed:width="304" ed:parentid="232" ed:height="24.5"><path d="M0,24.5L304,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">三目运算符性能高，代码量少，这理由很难站住脚</tspan></text></g><g id="370" transform="matrix(1,0,0,1,813,20490)" ed:width="460" ed:parentid="232" ed:height="24.5"><path d="M0,24.5L460,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">相比损失的代码可读性和可维护性，三目运算符节省的代码量也可以忽略不计</tspan></text></g><g id="372" transform="matrix(1,0,0,1,826,20521)" ed:width="278" ed:parentid="234" ed:height="24.5"><path d="M0,24.5L278,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">链式调用带来的坏处是调试的时候非常不方便</tspan></text></g><g id="374" transform="matrix(1,0,0,1,706,91)" ed:width="514" ed:parentid="104" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript没有提供传统面向对象语言中的类式继承，而是通过原型委托的方式来实现</tspan><tspan x="8" style="white-space:pre" y="35.1">对象与对象之间的继承。JavaScript也没有在语言层面提供对抽象类和接口的支持</tspan></text></g><g id="376" transform="matrix(1,0,0,1,706,288)" ed:width="183" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L183,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.1.动态类型语言和鸭子类型</tspan></text></g><g id="378" transform="matrix(1,0,0,1,706,656)" ed:width="66" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.2.多态</tspan></text></g><g id="380" transform="matrix(1,0,0,1,706,1018)" ed:width="66" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.3.封装</tspan></text></g><g id="382" transform="matrix(1,0,0,1,706,1548)" ed:width="284" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L284,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.4.原型模式和基于原型继承的JavaScript对象</tspan></text></g><g id="384" transform="matrix(1,0,0,1,916,141)" ed:width="514" ed:parentid="376" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">静态类型语言在编译时便确定变量的类型，而动态类型语言的变量类型要到程序运行的</tspan><tspan x="8" style="white-space:pre" y="35.1">时候，待变量被赋予某个值之后，才会具有某种类型</tspan></text></g><g id="386" transform="matrix(1,0,0,1,916,191)" ed:width="135" ed:parentid="376" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">静态类型语言的优点</tspan></text></g><g id="388" transform="matrix(1,0,0,1,916,222)" ed:width="135" ed:parentid="376" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">静态类型语言的缺点</tspan></text></g><g id="390" transform="matrix(1,0,0,1,916,253)" ed:width="135" ed:parentid="376" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">动态类型语言的优点</tspan></text></g><g id="392" transform="matrix(1,0,0,1,916,284)" ed:width="135" ed:parentid="376" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">动态类型语言的缺点</tspan></text></g><g id="394" transform="matrix(1,0,0,1,916,315)" ed:width="499" ed:parentid="376" ed:height="24.5"><path d="M0,24.5L499,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">鸭子类型的通俗说法是：如果它走起路来像鸭子，叫起来也是鸭子，那么它就是鸭子</tspan></text></g><g id="396" transform="matrix(1,0,0,1,916,346)" ed:width="514" ed:parentid="376" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">鸭子类型指导我们只关注对象的行为，而不关注对象本身，也就是关注HAS-A，而不</tspan><tspan x="8" style="white-space:pre" y="35.1">是IS-A</tspan></text></g><g id="398" transform="matrix(1,0,0,1,916,396)" ed:width="514" ed:parentid="376" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在动态类型语言的面向对象设计中，鸭子类型的概念至关重要。利用鸭子类型的思想，</tspan><tspan x="8" style="white-space:pre" y="35.1">我们不必借助超类型的帮助，就能轻松地在动态类型语言中实现一个原则：面向接口编</tspan><tspan x="8" style="white-space:pre" y="54.1">程，而不是面向实现编程</tspan></text></g><g id="400" transform="matrix(1,0,0,1,799,465)" ed:width="514" ed:parentid="378" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">多态的实际含义是：同一操作作用于不同的对象上面，可以产生不同的解释和不同的执</tspan><tspan x="8" style="white-space:pre" y="35.1">行结果。换句话说，给不同的对象发送同一个消息的时候，这些对象会根据这个消息分</tspan><tspan x="8" style="white-space:pre" y="54.1">别给出不同的反馈</tspan></text></g><g id="402" transform="matrix(1,0,0,1,1056,534)" ed:width="514" ed:parentid="618" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">多态背后的思想是将”做什么“和”谁去做以及怎么去做“分离开，也就是将”不变的</tspan><tspan x="8" style="white-space:pre" y="35.1">事物“与”可能改变的事物“分离开来</tspan></text></g><g id="404" transform="matrix(1,0,0,1,968,615)" ed:width="514" ed:parentid="622" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">静态类型的面向对象语言通常被设计为可以向上转型：当给一个类变量赋值时，这个变</tspan><tspan x="8" style="white-space:pre" y="35.1">量的类型既可以使用这个类本身，也可以使用这个类的超类</tspan></text></g><g id="406" transform="matrix(1,0,0,1,978,696)" ed:width="514" ed:parentid="626" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">多态的思想实际上是把”做什么“和”谁去做“分离开来，要实现这一点，归根结底先</tspan><tspan x="8" style="white-space:pre" y="35.1">要消除类型之间的耦合关系</tspan></text></g><g id="408" transform="matrix(1,0,0,1,978,746)" ed:width="405" ed:parentid="626" ed:height="24.5"><path d="M0,24.5L405,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在JavaScript中，并不需要诸如向上转型之类的技术取得多态的结果</tspan></text></g><g id="410" transform="matrix(1,0,0,1,1072,777)" ed:width="514" ed:parentid="628" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">多态最根本的作用就是通过把过程化的条件分支语句转换为对象的多态性，从而消除这</tspan><tspan x="8" style="white-space:pre" y="35.1">些条件分支语句</tspan></text></g><g id="412" transform="matrix(1,0,0,1,968,827)" ed:width="514" ed:parentid="630" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">GoF所著的《设计模式》，完全是从面向对象设计的角度出发的，通过对封装、继承、</tspan><tspan x="8" style="white-space:pre" y="35.1">多态组合等技术的反复使用，提炼出一些可重复使用的面向对象设计技巧</tspan></text></g><g id="414" transform="matrix(1,0,0,1,799,877)" ed:width="161" ed:parentid="380" ed:height="24.5"><path d="M0,24.5L161,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">封装的目的是将信息隐藏</tspan></text></g><g id="416" transform="matrix(1,0,0,1,929,908)" ed:width="514" ed:parentid="634" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">但JavaScript并没有提供对private、protected、public这些关键字的支持，我们只能</tspan><tspan x="8" style="white-space:pre" y="35.1">依赖变量的作用域来实现封装特性，而且只能模拟出public和private这两种封装性</tspan></text></g><g id="418" transform="matrix(1,0,0,1,929,958)" ed:width="514" ed:parentid="636" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">封装的目的是将信息隐藏。封装应该被视为”任何形式的封装“，也就是说，封装不仅</tspan><tspan x="8" style="white-space:pre" y="35.1">仅是隐藏数据，还包括隐藏实现细节、设计细节以及隐藏对象的类型等</tspan></text></g><g id="420" transform="matrix(1,0,0,1,929,1008)" ed:width="429" ed:parentid="636" ed:height="24.5"><path d="M0,24.5L429,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">封装使得对象之间的耦合变松散，对象之间只通过暴露的API接口来通信</tspan></text></g><g id="422" transform="matrix(1,0,0,1,929,1039)" ed:width="514" ed:parentid="638" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">封装类型是静态类型语言中一种重要的封装方式。一般而言，封装类型是通过抽象类和</tspan><tspan x="8" style="white-space:pre" y="35.1">接口类进行的</tspan></text></g><g id="424" transform="matrix(1,0,0,1,929,1089)" ed:width="514" ed:parentid="638" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript本身也是一门类型模糊的语言。在封装类型方面，JavaScript没有能力，也</tspan><tspan x="8" style="white-space:pre" y="35.1">没有必要做得更多</tspan></text></g><g id="426" transform="matrix(1,0,0,1,929,1139)" ed:width="514" ed:parentid="640" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">《设计模式》一书中共归纳总结了23种设计模式。从意图上区分，这23种设计模式分</tspan><tspan x="8" style="white-space:pre" y="35.1">别被划分为创建型模式、结构型模式和行为型模式</tspan></text></g><g id="428" transform="matrix(1,0,0,1,1017,1189)" ed:width="330" ed:parentid="382" ed:height="24.5"><path d="M0,24.5L330,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">原型模式不单是一种设计模式，也被称为一种编程范性</tspan></text></g><g id="430" transform="matrix(1,0,0,1,1212,1220)" ed:width="514" ed:parentid="642" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">原型模式的实现关键，是语言本身是否提供了clone方法。ECMAScript5提供了</tspan><tspan x="8" style="white-space:pre" y="35.1">Object.create方法，可以用来克隆对象</tspan></text></g><g id="432" transform="matrix(1,0,0,1,1225,1270)" ed:width="514" ed:parentid="644" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">但原型模式的真正目的并非在于需要得到一个一模一样的对象，而是提供了一种便捷的</tspan><tspan x="8" style="white-space:pre" y="35.1">方式去创建某个类型的对象，克隆只是创建这个对象的过程和手段</tspan></text></g><g id="434" transform="matrix(1,0,0,1,1159,1320)" ed:width="514" ed:parentid="646" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在JavaScript语言中不存在类的概念，对象也并非从类中创建出来的，所有的</tspan><tspan x="8" style="white-space:pre" y="35.1">JavaScript对象都是从某个对象上克隆而来的</tspan></text></g><g id="436" transform="matrix(1,0,0,1,1159,1370)" ed:width="405" ed:parentid="646" ed:height="24.5"><path d="M0,24.5L405,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript基于原型的面向对象系统参考了Self语言和Smalltalk语言</tspan></text></g><g id="438" transform="matrix(1,0,0,1,1238,1401)" ed:width="456" ed:parentid="648" ed:height="24.5"><path d="M0,24.5L456,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Io语言和JavaScript语言一样，基于原型链的委托机制就是原型链继承的本质</tspan></text></g><g id="440" transform="matrix(1,0,0,1,1238,1432)" ed:width="514" ed:parentid="648" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">原型编程中德一个重要特性，即当对象无法响应某个请求时，会把该请求委托给它自己</tspan><tspan x="8" style="white-space:pre" y="35.1">的原型</tspan></text></g><g id="442" transform="matrix(1,0,0,1,1238,1529)" ed:width="226" ed:parentid="648" ed:height="24.5"><path d="M0,24.5L226,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">原型编程范型至少包括以下基本规则</tspan></text></g><g id="444" transform="matrix(1,0,0,1,1491,1482)" ed:width="135" ed:parentid="442" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">所有的数据都是对象</tspan></text></g><g id="446" transform="matrix(1,0,0,1,1491,1513)" ed:width="447" ed:parentid="442" ed:height="24.5"><path d="M0,24.5L447,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">要得到一个对象，不是通过实例化类，而是找到一个对象作为原型并克隆它</tspan></text></g><g id="448" transform="matrix(1,0,0,1,1491,1544)" ed:width="135" ed:parentid="442" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">对象会记住它的原型</tspan></text></g><g id="450" transform="matrix(1,0,0,1,1491,1575)" ed:width="395" ed:parentid="442" ed:height="24.5"><path d="M0,24.5L395,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如果对象无法响应某个请求，它会把这个请求委托给它自己的原型</tspan></text></g><g id="452" transform="matrix(1,0,0,1,1235,1606)" ed:width="514" ed:parentid="650" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">事实上，JavaScript中的根对象是Object.prototype对象。Object.prototype对象是一</tspan><tspan x="8" style="white-space:pre" y="35.1">个空的对象</tspan></text></g><g id="454" transform="matrix(1,0,0,1,1235,1656)" ed:width="514" ed:parentid="650" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript的函数既可以作为普通函数被调用，也可以作为构造器被调用。当使用new</tspan><tspan x="8" style="white-space:pre" y="35.1">运算符来调用函数时，此时的函数就是一个构造器。用new运算符来创建对象的过程，</tspan><tspan x="8" style="white-space:pre" y="54.1">实际上也只是先克隆Object.prototype对象，再进行一些其他额外操作的过程</tspan></text></g><g id="456" transform="matrix(1,0,0,1,1235,1725)" ed:width="514" ed:parentid="650" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">就JavaScript的真正实现来说，其实并不能说对象有原型，而只能说对象的构造器有原</tspan><tspan x="8" style="white-space:pre" y="35.1">型。对于”对象把请求委托给它自己的原型“这句话，更好的说法是对象把请求委托给</tspan><tspan x="8" style="white-space:pre" y="54.1">它的构造器的原型</tspan></text></g><g id="458" transform="matrix(1,0,0,1,1235,1794)" ed:width="514" ed:parentid="650" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">虽然JavaScript的对象最初都是由Object.prototype对象克隆而来的，但对象构造器的</tspan><tspan x="8" style="white-space:pre" y="35.1">原型并不仅限于Object.prototype上，而是可以动态指向其他对象</tspan></text></g><g id="460" transform="matrix(1,0,0,1,1235,1844)" ed:width="213" ed:parentid="650" ed:height="24.5"><path d="M0,24.5L213,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">留意一点，原型链并不是无限长的</tspan></text></g><g id="464" transform="matrix(1,0,0,1,1017,1906)" ed:width="77" ed:parentid="382" ed:height="24.5"><path d="M0,24.5L77,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.4.7.小结</tspan></text></g><g id="466" transform="matrix(1,0,0,1,1121,1906)" ed:width="496" ed:parentid="464" ed:height="24.5"><path d="M0,24.5L496,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">原型模式是一种设计模式，也是一种编程泛型，它构成了JavaScript这门语言的根本</tspan></text></g><g id="468" transform="matrix(1,0,0,1,676,2182)" ed:width="62" ed:parentid="106" ed:height="24.5"><path d="M0,24.5L62,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.1.this</tspan></text></g><g id="470" transform="matrix(1,0,0,1,676,2596)" ed:width="106" ed:parentid="106" ed:height="24.5"><path d="M0,24.5L106,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.2.call和apply</tspan></text></g><g id="472" transform="matrix(1,0,0,1,765,2182)" ed:width="112" ed:parentid="468" ed:height="24.5"><path d="M0,24.5L112,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.1.1.this的指向</tspan></text></g><g id="474" transform="matrix(1,0,0,1,765,2390)" ed:width="112" ed:parentid="468" ed:height="24.5"><path d="M0,24.5L112,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.1.2.丢失的this</tspan></text></g><g id="476" transform="matrix(1,0,0,1,809,2565)" ed:width="156" ed:parentid="470" ed:height="24.5"><path d="M0,24.5L156,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.2.1.call和apply的区别</tspan></text></g><g id="478" transform="matrix(1,0,0,1,809,2721)" ed:width="156" ed:parentid="470" ed:height="24.5"><path d="M0,24.5L156,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.2.2.call和apply的用途</tspan></text></g><g id="480" transform="matrix(1,0,0,1,765,1964)" ed:width="514" ed:parentid="468" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">跟别的语言大相径庭的是，JavaScript的this总是指向一个对象，而具体指向哪个对象</tspan><tspan x="8" style="white-space:pre" y="35.1">是在运行时基于函数的执行环境动态绑定的，而非函数被声明时的环境</tspan></text></g><g id="482" transform="matrix(1,0,0,1,904,2060)" ed:width="204" ed:parentid="472" ed:height="24.5"><path d="M0,24.5L204,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">this的指向大致可以分为以下4种</tspan></text></g><g id="486" transform="matrix(1,0,0,1,1135,2014)" ed:width="135" ed:parentid="482" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">作为对象的方法调用</tspan></text></g><g id="488" transform="matrix(1,0,0,1,1135,2045)" ed:width="135" ed:parentid="482" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">作为普通函数的调用</tspan></text></g><g id="490" transform="matrix(1,0,0,1,1135,2076)" ed:width="83" ed:parentid="482" ed:height="24.5"><path d="M0,24.5L83,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">构造器调用</tspan></text></g><g id="492" transform="matrix(1,0,0,1,1135,2107)" ed:width="352" ed:parentid="482" ed:height="24.5"><path d="M0,24.5L352,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Function.prototype.call或Function.prototype.apply调用</tspan></text></g><g id="494" transform="matrix(1,0,0,1,904,2138)" ed:width="146" ed:parentid="472" ed:height="24.5"><path d="M0,24.5L146,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.作为对象的方法调用</tspan></text></g><g id="496" transform="matrix(1,0,0,1,1077,2138)" ed:width="105" ed:parentid="494" ed:height="24.5"><path d="M0,24.5L105,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">this指向该对象</tspan></text></g><g id="498" transform="matrix(1,0,0,1,904,2194)" ed:width="133" ed:parentid="472" ed:height="24.5"><path d="M0,24.5L133,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.作为普通函数调用</tspan></text></g><g id="500" transform="matrix(1,0,0,1,1064,2169)" ed:width="118" ed:parentid="498" ed:height="24.5"><path d="M0,24.5L118,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">this指向全局对象</tspan></text></g><g id="502" transform="matrix(1,0,0,1,1064,2200)" ed:width="514" ed:parentid="498" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在ECMAScript5的strict模式下，这种情况下的this已经被规定为不会指向全局对象，</tspan><tspan x="8" style="white-space:pre" y="35.1">而是undefined</tspan></text></g><g id="504" transform="matrix(1,0,0,1,904,2259)" ed:width="94" ed:parentid="472" ed:height="24.5"><path d="M0,24.5L94,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.构造器调用</tspan></text></g><g id="506" transform="matrix(1,0,0,1,1025,2250)" ed:width="514" ed:parentid="504" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">当用new运算符调用函数时，该函数总会返回一个对象，通常情况下，构造器里的this</tspan><tspan x="8" style="white-space:pre" y="35.1">就指向返回的这个对象</tspan></text></g><g id="508" transform="matrix(1,0,0,1,904,2325)" ed:width="363" ed:parentid="472" ed:height="24.5"><path d="M0,24.5L363,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.Function.prototype.call或Function.prototype.apply调用</tspan></text></g><g id="510" transform="matrix(1,0,0,1,1294,2300)" ed:width="196" ed:parentid="508" ed:height="24.5"><path d="M0,24.5L196,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可以动态的改变传入函数的this</tspan></text></g><g id="512" transform="matrix(1,0,0,1,1294,2331)" ed:width="514" ed:parentid="508" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">call和apply方法能很好的体现JavaScript的函数式语言特性，在JavaScript中，几乎每</tspan><tspan x="8" style="white-space:pre" y="35.1">一次编写函数式语言风格的代码，都离不开call和apply</tspan></text></g><g id="514" transform="matrix(1,0,0,1,904,2381)" ed:width="514" ed:parentid="474" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">当用另一个变量getName2来引用obj.getName，并且调用getName2时，此时是普通</tspan><tspan x="8" style="white-space:pre" y="35.1">函数调用方式，this是指向全局window的，所以程序的执行结果是undefined</tspan></text></g><g id="516" transform="matrix(1,0,0,1,809,2431)" ed:width="514" ed:parentid="470" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ECMA3给Function的原型定义了两个方法，它们是Function.prototype.call和</tspan><tspan x="8" style="white-space:pre" y="35.1">Function.prototype.apply</tspan></text></g><g id="518" transform="matrix(1,0,0,1,992,2481)" ed:width="200" ed:parentid="476" ed:height="24.5"><path d="M0,24.5L200,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">区别仅在于传入参数形式的不同</tspan></text></g><g id="520" transform="matrix(1,0,0,1,992,2512)" ed:width="514" ed:parentid="476" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">apply接受两个参数，第一个参数指定了函数体内this对象的指向，第二个参数为一个</tspan><tspan x="8" style="white-space:pre" y="35.1">带下标的集合</tspan></text></g><g id="522" transform="matrix(1,0,0,1,992,2562)" ed:width="514" ed:parentid="476" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">call传入的参数数量不固定，第一个参数也是代表函数体内的this指向，从第二个参数</tspan><tspan x="8" style="white-space:pre" y="35.1">开始往后，每个参数被依次传入函数</tspan></text></g><g id="524" transform="matrix(1,0,0,1,992,2612)" ed:width="514" ed:parentid="476" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">当调用一个函数时，JavaScript得解释器并不会计较形参和实参在数量、类型以及顺序</tspan><tspan x="8" style="white-space:pre" y="35.1">上的区别，JavaScript的参数在内部就是用一个数组表示的。从这个意义上说，apply</tspan><tspan x="8" style="white-space:pre" y="54.1">比call的使用率更高，我们不必关心具体有多少参数被传入函数</tspan></text></g><g id="526" transform="matrix(1,0,0,1,992,2681)" ed:width="103" ed:parentid="478" ed:height="24.5"><path d="M0,24.5L103,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.改变this指向</tspan></text></g><g id="528" transform="matrix(1,0,0,1,992,2721)" ed:width="177" ed:parentid="478" ed:height="24.5"><path d="M0,24.5L177,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.Function.prototype.bind</tspan></text></g><g id="530" transform="matrix(1,0,0,1,1122,2681)" ed:width="96" ed:parentid="526" ed:height="24.5"><path d="M0,24.5L96,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">最常见的用途</tspan></text></g><g id="532" transform="matrix(1,0,0,1,1196,2712)" ed:width="514" ed:parentid="528" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">大部分高级浏览器都实现了内置的Function.prototype.bind，用来指定函数内部的this</tspan><tspan x="8" style="white-space:pre" y="35.1">指向</tspan></text></g><g id="534" transform="matrix(1,0,0,1,992,2762)" ed:width="146" ed:parentid="478" ed:height="24.5"><path d="M0,24.5L146,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.借用其他对象的方法</tspan></text></g><g id="536" transform="matrix(1,0,0,1,663,3072)" ed:width="66" ed:parentid="108" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.1.闭包</tspan></text></g><g id="538" transform="matrix(1,0,0,1,663,3560)" ed:width="92" ed:parentid="108" ed:height="24.5"><path d="M0,24.5L92,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.2.高阶函数</tspan></text></g><g id="540" transform="matrix(1,0,0,1,756,2900)" ed:width="129" ed:parentid="536" ed:height="24.5"><path d="M0,24.5L129,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.1.1.变量的作用域</tspan></text></g><g id="542" transform="matrix(1,0,0,1,756,2956)" ed:width="142" ed:parentid="536" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.1.2.变量的生存周期</tspan></text></g><g id="544" transform="matrix(1,0,0,1,756,3028)" ed:width="142" ed:parentid="536" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.1.3.闭包的更多作用</tspan></text></g><g id="546" transform="matrix(1,0,0,1,756,3084)" ed:width="168" ed:parentid="536" ed:height="24.5"><path d="M0,24.5L168,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.1.4.闭包和面向对象设计</tspan></text></g><g id="548" transform="matrix(1,0,0,1,756,3134)" ed:width="168" ed:parentid="536" ed:height="24.5"><path d="M0,24.5L168,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.1.5.用闭包实现命令模式</tspan></text></g><g id="550" transform="matrix(1,0,0,1,756,3224)" ed:width="142" ed:parentid="536" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.1.6.闭包与内存管理</tspan></text></g><g id="552" transform="matrix(1,0,0,1,782,3392)" ed:width="155" ed:parentid="538" ed:height="24.5"><path d="M0,24.5L155,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.2.1.函数作为参数传递</tspan></text></g><g id="554" transform="matrix(1,0,0,1,782,3479)" ed:width="168" ed:parentid="538" ed:height="24.5"><path d="M0,24.5L168,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.2.2.函数作为返回值输出</tspan></text></g><g id="556" transform="matrix(1,0,0,1,782,3601)" ed:width="157" ed:parentid="538" ed:height="24.5"><path d="M0,24.5L157,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.2.3.高阶函数实现AOP</tspan></text></g><g id="558" transform="matrix(1,0,0,1,782,3753)" ed:width="168" ed:parentid="538" ed:height="24.5"><path d="M0,24.5L168,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.2.4.高阶函数的其他应用</tspan></text></g><g id="560" transform="matrix(1,0,0,1,663,2819)" ed:width="514" ed:parentid="108" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">函数式语言的鼻祖是LISP，JavaScript在设计之初参考了LISP两大方言之一的</tspan><tspan x="8" style="white-space:pre" y="35.1">Scheme，引入了Lambda表达式、闭包、高阶函数等特性</tspan></text></g><g id="562" transform="matrix(1,0,0,1,756,2869)" ed:width="343" ed:parentid="536" ed:height="24.5"><path d="M0,24.5L343,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">闭包的形成与变量的作用域以及变量的生存周期密切相关</tspan></text></g><g id="564" transform="matrix(1,0,0,1,912,2900)" ed:width="122" ed:parentid="540" ed:height="24.5"><path d="M0,24.5L122,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">指变量的有效范围</tspan></text></g><g id="566" transform="matrix(1,0,0,1,925,2931)" ed:width="291" ed:parentid="542" ed:height="24.5"><path d="M0,24.5L291,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">全局变量的生成周期是永久的，除非主动销毁它</tspan></text></g><g id="568" transform="matrix(1,0,0,1,925,2962)" ed:width="514" ed:parentid="542" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在函数内用var关键字声明的局部变量，当退出函数时，这些局部变量就失去了价值，</tspan><tspan x="8" style="white-space:pre" y="35.1">他们会随着函数调用的结束而被销毁</tspan></text></g><g id="570" transform="matrix(1,0,0,1,925,3012)" ed:width="81" ed:parentid="544" ed:height="24.5"><path d="M0,24.5L81,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.封装变量</tspan></text></g><g id="572" transform="matrix(1,0,0,1,925,3043)" ed:width="146" ed:parentid="544" ed:height="24.5"><path d="M0,24.5L146,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.延长局部变量的寿命</tspan></text></g><g id="574" transform="matrix(1,0,0,1,1033,3012)" ed:width="395" ed:parentid="570" ed:height="24.5"><path d="M0,24.5L395,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">闭包可以帮助把一些不需要暴露在全局的变量封装成”私有变量“</tspan></text></g><g id="576" transform="matrix(1,0,0,1,951,3074)" ed:width="514" ed:parentid="546" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在JavaScript语言的祖先Scheme语言中，甚至都没有提供面向对象的原生设计，但可</tspan><tspan x="8" style="white-space:pre" y="35.1">以使用闭包来实现一个完整的面向对象系统</tspan></text></g><g id="578" transform="matrix(1,0,0,1,951,3124)" ed:width="514" ed:parentid="548" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">命令模式的意图是把请求封装为对象，从而分离请求的发起者和请求的接收者之间的耦</tspan><tspan x="8" style="white-space:pre" y="35.1">合关系</tspan></text></g><g id="580" transform="matrix(1,0,0,1,925,3174)" ed:width="434" ed:parentid="550" ed:height="24.5"><path d="M0,24.5L434,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一种怂人听闻的说法是闭包会造成内存泄露，所以要尽量减少闭包的使用</tspan></text></g><g id="582" transform="matrix(1,0,0,1,925,3205)" ed:width="514" ed:parentid="550" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">局部变量本来应该在函数退出的时候被解除引用，但如果局部变量被封闭在闭包形成的</tspan><tspan x="8" style="white-space:pre" y="35.1">环境中，那么这个局部变量就能一直生存下去</tspan></text></g><g id="584" transform="matrix(1,0,0,1,925,3255)" ed:width="514" ed:parentid="550" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在基于引用技术策略的垃圾回收机制中，如果两个对象之间形成了循环引用，那么这两</tspan><tspan x="8" style="white-space:pre" y="35.1">个对象都无法被回收，但循环引用造成的内存泄露在本质上也不是闭包造成的</tspan></text></g><g id="586" transform="matrix(1,0,0,1,782,3321)" ed:width="265" ed:parentid="538" ed:height="24.5"><path d="M0,24.5L265,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">高阶函数是指至少满足下列条件之一的函数</tspan></text></g><g id="588" transform="matrix(1,0,0,1,1074,3305)" ed:width="161" ed:parentid="586" ed:height="24.5"><path d="M0,24.5L161,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">函数可以作为参数被传递</tspan></text></g><g id="590" transform="matrix(1,0,0,1,1074,3336)" ed:width="161" ed:parentid="586" ed:height="24.5"><path d="M0,24.5L161,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">函数可以作为返回值输出</tspan></text></g><g id="592" transform="matrix(1,0,0,1,964,3367)" ed:width="265" ed:parentid="552" ed:height="24.5"><path d="M0,24.5L265,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">其中一个重要应用场景就是常见的回调函数</tspan></text></g><g id="594" transform="matrix(1,0,0,1,964,3398)" ed:width="514" ed:parentid="552" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Array.prototype.sort接受一个函数作为参数，这个函数里面封装了数组元素的排序规</tspan><tspan x="8" style="white-space:pre" y="35.1">则</tspan></text></g><g id="596" transform="matrix(1,0,0,1,977,3448)" ed:width="434" ed:parentid="554" ed:height="24.5"><path d="M0,24.5L434,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">函数当作返回值输出的应用场景也许更多，也更能体现函数式编程的巧妙</tspan></text></g><g id="598" transform="matrix(1,0,0,1,977,3479)" ed:width="197" ed:parentid="554" ed:height="24.5"><path d="M0,24.5L197,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.判断数据的类型，isType函数</tspan></text></g><g id="600" transform="matrix(1,0,0,1,977,3510)" ed:width="190" ed:parentid="554" ed:height="24.5"><path d="M0,24.5L190,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.getSingle，单例模式的例子</tspan></text></g><g id="602" transform="matrix(1,0,0,1,966,3541)" ed:width="514" ed:parentid="556" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">AOP（面向切面编程）的主要作用是把一些跟核心业务逻辑模块无关的功能抽离出来，</tspan><tspan x="8" style="white-space:pre" y="35.1">这些跟业务逻辑无关的功能包括日志统计、安全控制、异常处理等</tspan></text></g><g id="604" transform="matrix(1,0,0,1,966,3591)" ed:width="514" ed:parentid="556" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在Java语言中，可以通过反射和动态代理机制来实现AOP技术。而在JavaScript这种动</tspan><tspan x="8" style="white-space:pre" y="35.1">态语言中，AOP的实现更加简单，这是JavaScript与生俱来的能力</tspan></text></g><g id="606" transform="matrix(1,0,0,1,966,3641)" ed:width="514" ed:parentid="556" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">使用AOP的方式来给函数添加职责，也是JavaScript语言中一种非常特别和巧妙的装饰</tspan><tspan x="8" style="white-space:pre" y="35.1">者模式实现</tspan></text></g><g id="608" transform="matrix(1,0,0,1,977,3691)" ed:width="158" ed:parentid="558" ed:height="24.5"><path d="M0,24.5L158,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.currying，函数柯里化</tspan></text></g><g id="610" transform="matrix(1,0,0,1,977,3722)" ed:width="96" ed:parentid="558" ed:height="24.5"><path d="M0,24.5L96,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.uncurrying</tspan></text></g><g id="612" transform="matrix(1,0,0,1,977,3753)" ed:width="81" ed:parentid="558" ed:height="24.5"><path d="M0,24.5L81,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.函数节流</tspan></text></g><g id="614" transform="matrix(1,0,0,1,977,3784)" ed:width="81" ed:parentid="558" ed:height="24.5"><path d="M0,24.5L81,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.分时函数</tspan></text></g><g id="616" transform="matrix(1,0,0,1,977,3815)" ed:width="107" ed:parentid="558" ed:height="24.5"><path d="M0,24.5L107,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.惰性加载函数</tspan></text></g><g id="618" transform="matrix(1,0,0,1,799,544)" ed:width="230" ed:parentid="378" ed:height="24.5"><path d="M0,24.5L230,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.2.1.一段”多态“的JavaScript代码</tspan></text></g><g id="620" transform="matrix(1,0,0,1,799,584)" ed:width="129" ed:parentid="378" ed:height="24.5"><path d="M0,24.5L129,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.2.2.对象的多态性</tspan></text></g><g id="622" transform="matrix(1,0,0,1,799,625)" ed:width="142" ed:parentid="378" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.2.3.类型检查和多态</tspan></text></g><g id="624" transform="matrix(1,0,0,1,799,665)" ed:width="181" ed:parentid="378" ed:height="24.5"><path d="M0,24.5L181,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.2.4.使用继承得到多态效果</tspan></text></g><g id="626" transform="matrix(1,0,0,1,799,721)" ed:width="152" ed:parentid="378" ed:height="24.5"><path d="M0,24.5L152,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.2.5.JavaScript的多态</tspan></text></g><g id="628" transform="matrix(1,0,0,1,799,787)" ed:width="246" ed:parentid="378" ed:height="24.5"><path d="M0,24.5L246,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.2.6.多态在面向对象程序设计中的作用</tspan></text></g><g id="630" transform="matrix(1,0,0,1,799,837)" ed:width="142" ed:parentid="378" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.2.7.设计模式与多态</tspan></text></g><g id="634" transform="matrix(1,0,0,1,799,918)" ed:width="103" ed:parentid="380" ed:height="24.5"><path d="M0,24.5L103,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.3.1.封装数据</tspan></text></g><g id="636" transform="matrix(1,0,0,1,799,983)" ed:width="103" ed:parentid="380" ed:height="24.5"><path d="M0,24.5L103,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.3.2.封装实现</tspan></text></g><g id="638" transform="matrix(1,0,0,1,799,1074)" ed:width="103" ed:parentid="380" ed:height="24.5"><path d="M0,24.5L103,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.3.3.封装类型</tspan></text></g><g id="640" transform="matrix(1,0,0,1,799,1149)" ed:width="103" ed:parentid="380" ed:height="24.5"><path d="M0,24.5L103,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.3.4.封装变化</tspan></text></g><g id="642" transform="matrix(1,0,0,1,1017,1230)" ed:width="168" ed:parentid="382" ed:height="24.5"><path d="M0,24.5L168,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.4.1.使用克隆的原型模式</tspan></text></g><g id="644" transform="matrix(1,0,0,1,1017,1280)" ed:width="181" ed:parentid="382" ed:height="24.5"><path d="M0,24.5L181,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.4.2.克隆是创建对象的手段</tspan></text></g><g id="646" transform="matrix(1,0,0,1,1017,1345)" ed:width="115" ed:parentid="382" ed:height="24.5"><path d="M0,24.5L115,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.4.3.体验Io语言</tspan></text></g><g id="648" transform="matrix(1,0,0,1,1017,1488)" ed:width="194" ed:parentid="382" ed:height="24.5"><path d="M0,24.5L194,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.4.4.原型编程范性的一些规则</tspan></text></g><g id="650" transform="matrix(1,0,0,1,1017,1725)" ed:width="191" ed:parentid="382" ed:height="24.5"><path d="M0,24.5L191,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.4.5.JavaScript中的原型继承</tspan></text></g><g id="652" transform="matrix(1,0,0,1,1017,1875)" ed:width="142" ed:parentid="382" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.4.6.原型继承的未来</tspan></text></g><g id="657" transform="matrix(1,0,0,1,615,4083)" ed:width="131" ed:parentid="112" ed:height="24.5"><path d="M0,24.5L131,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.2.透明的单例模式</tspan></text></g><g id="659" transform="matrix(1,0,0,1,615,4124)" ed:width="157" ed:parentid="112" ed:height="24.5"><path d="M0,24.5L157,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.3.用代理实现单例模式</tspan></text></g><g id="661" transform="matrix(1,0,0,1,615,4226)" ed:width="180" ed:parentid="112" ed:height="24.5"><path d="M0,24.5L180,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.4.JavaScript中的单例模式</tspan></text></g><g id="663" transform="matrix(1,0,0,1,615,4344)" ed:width="92" ed:parentid="112" ed:height="24.5"><path d="M0,24.5L92,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.5.惰性单例</tspan></text></g><g id="665" transform="matrix(1,0,0,1,615,4431)" ed:width="131" ed:parentid="112" ed:height="24.5"><path d="M0,24.5L131,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.6.通用的惰性单例</tspan></text></g><g id="667" transform="matrix(1,0,0,1,615,4537)" ed:width="66" ed:parentid="112" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.7.小结</tspan></text></g><g id="669" transform="matrix(1,0,0,1,615,4779)" ed:width="170" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L170,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.1.使用策略模式计算奖金</tspan></text></g><g id="671" transform="matrix(1,0,0,1,615,4920)" ed:width="193" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L193,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.2.JavaScript版本的策略模式</tspan></text></g><g id="673" transform="matrix(1,0,0,1,615,4960)" ed:width="183" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L183,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.3.多态在策略模式中的体现</tspan></text></g><g id="675" transform="matrix(1,0,0,1,615,5047)" ed:width="196" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L196,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.4.使用策略模式实现缓动动画</tspan></text></g><g id="677" transform="matrix(1,0,0,1,615,5169)" ed:width="144" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L144,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.5.更广义的”算法“</tspan></text></g><g id="679" transform="matrix(1,0,0,1,615,5275)" ed:width="92" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L92,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.6.表单校验</tspan></text></g><g id="681" transform="matrix(1,0,0,1,615,5437)" ed:width="144" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L144,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.7.策略模式的优缺点</tspan></text></g><g id="683" transform="matrix(1,0,0,1,615,5568)" ed:width="183" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L183,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.8.一等函数对象与策略模式</tspan></text></g><g id="685" transform="matrix(1,0,0,1,615,5618)" ed:width="66" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.9.小结</tspan></text></g><g id="687" transform="matrix(1,0,0,1,615,5785)" ed:width="215" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L215,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.1.第一个例子-小明追MM的故事</tspan></text></g><g id="689" transform="matrix(1,0,0,1,615,5841)" ed:width="157" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L157,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.2.保护代理和虚拟代理</tspan></text></g><g id="691" transform="matrix(1,0,0,1,615,5906)" ed:width="183" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L183,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.3.虚拟代理实现图片预加载</tspan></text></g><g id="693" transform="matrix(1,0,0,1,615,5972)" ed:width="105" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L105,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.4.代理的意义</tspan></text></g><g id="695" transform="matrix(1,0,0,1,615,6106)" ed:width="183" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L183,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.5.代理和本体接口的一致性</tspan></text></g><g id="697" transform="matrix(1,0,0,1,615,6241)" ed:width="176" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L176,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.6.虚拟代理合并HTTP请求</tspan></text></g><g id="701" transform="matrix(1,0,0,1,615,6297)" ed:width="209" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L209,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.7.虚拟代理在惰性加载中的应用</tspan></text></g><g id="703" transform="matrix(1,0,0,1,615,6393)" ed:width="92" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L92,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.8.缓存代理</tspan></text></g><g id="705" transform="matrix(1,0,0,1,615,6490)" ed:width="183" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L183,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.9.用高阶函数动态创建代理</tspan></text></g><g id="707" transform="matrix(1,0,0,1,615,6583)" ed:width="123" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L123,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.10其他代理模式</tspan></text></g><g id="709" transform="matrix(1,0,0,1,615,6701)" ed:width="74" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L74,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.11.小结</tspan></text></g><g id="711" transform="matrix(1,0,0,1,615,3943)" ed:width="473" ed:parentid="112" ed:height="24.5"><path d="M0,24.5L473,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">单例模式的定义是：保证一个类仅有一个实例，并提供一个访问它的全局访问点</tspan></text></g><g id="713" transform="matrix(1,0,0,1,615,3974)" ed:width="514" ed:parentid="112" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">单例模式是一种常用的模式，有一些对象我们往往只需要一个，比如线程池、全局缓</tspan><tspan x="8" style="white-space:pre" y="35.1">存、浏览器中的window对象等</tspan></text></g><g id="715" transform="matrix(1,0,0,1,760,4024)" ed:width="514" ed:parentid="177" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">要实现一个标准的单例模式并不复杂，无非是用一个变量来标志当前是否已经为某个类</tspan><tspan x="8" style="white-space:pre" y="35.1">创建过对象，如果是，则在下一次获取该类的实例时，直接返回之前创建的对象</tspan></text></g><g id="717" transform="matrix(1,0,0,1,773,4074)" ed:width="514" ed:parentid="657" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">实现一个”透明“的单例类，用户从这个类中创建对象的时候，可以像使用其他任何普</tspan><tspan x="8" style="white-space:pre" y="35.1">通类一样</tspan></text></g><g id="719" transform="matrix(1,0,0,1,799,4124)" ed:width="200" ed:parentid="659" ed:height="24.5"><path d="M0,24.5L200,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">把负责管理单例的代码移除出去</tspan></text></g><g id="721" transform="matrix(1,0,0,1,822,4155)" ed:width="404" ed:parentid="661" ed:height="24.5"><path d="M0,24.5L404,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Douglas Crockford多次把全局变量称为JavaScript中最糟糕的特性</tspan></text></g><g id="723" transform="matrix(1,0,0,1,822,4186)" ed:width="514" ed:parentid="661" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在对JavaScript的创造者Brendan Eich的访谈中，他本人也承认全局变量是设计上的失</tspan><tspan x="8" style="white-space:pre" y="35.1">误，是在没有足够的时间思考一些东西的情况下导致的结果</tspan></text></g><g id="725" transform="matrix(1,0,0,1,822,4236)" ed:width="317" ed:parentid="661" ed:height="24.5"><path d="M0,24.5L317,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">以下几种方式可以相对降低全局变量带来的命名污染</tspan></text></g><g id="729" transform="matrix(1,0,0,1,822,4267)" ed:width="107" ed:parentid="661" ed:height="24.5"><path d="M0,24.5L107,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.使用命名空间</tspan></text></g><g id="731" transform="matrix(1,0,0,1,956,4267)" ed:width="434" ed:parentid="729" ed:height="24.5"><path d="M0,24.5L434,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">适当的使用命名空间，并不会杜绝全局变量，但可以减少全局变量的数量</tspan></text></g><g id="735" transform="matrix(1,0,0,1,822,4298)" ed:width="159" ed:parentid="661" ed:height="24.5"><path d="M0,24.5L159,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.使用闭包封装私有变量</tspan></text></g><g id="737" transform="matrix(1,0,0,1,1008,4298)" ed:width="356" ed:parentid="735" ed:height="24.5"><path d="M0,24.5L356,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">把一些变量封装在闭包鄂内部，只暴露一些接口跟外界通信</tspan></text></g><g id="739" transform="matrix(1,0,0,1,734,4329)" ed:width="278" ed:parentid="663" ed:height="24.5"><path d="M0,24.5L278,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">惰性单例指的是在需要的时候才创建对象实例</tspan></text></g><g id="741" transform="matrix(1,0,0,1,734,4360)" ed:width="172" ed:parentid="663" ed:height="24.5"><path d="M0,24.5L172,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">以WebQQ的登录浮窗为例</tspan></text></g><g id="743" transform="matrix(1,0,0,1,933,4360)" ed:width="291" ed:parentid="741" ed:height="24.5"><path d="M0,24.5L291,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可以用一个变量来判断是否已经创建过登录浮窗</tspan></text></g><g id="747" transform="matrix(1,0,0,1,773,4416)" ed:width="135" ed:parentid="665" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">上一节还有如下问题</tspan></text></g><g id="749" transform="matrix(1,0,0,1,935,4391)" ed:width="500" ed:parentid="747" ed:height="24.5"><path d="M0,24.5L500,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">违反单一职责原则的，创建对象和管理单例的逻辑都放在createLoginLayer对象内部</tspan></text></g><g id="751" transform="matrix(1,0,0,1,935,4422)" ed:width="514" ed:parentid="747" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如果下次需要创建页面中唯一的iframe、script等用来跨域请求数据，必须照抄一遍代</tspan><tspan x="8" style="white-space:pre" y="35.1">码</tspan></text></g><g id="753" transform="matrix(1,0,0,1,773,4472)" ed:width="291" ed:parentid="665" ed:height="24.5"><path d="M0,24.5L291,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">把如何管理单例的逻辑从原来的代码中抽离出来</tspan></text></g><g id="755" transform="matrix(1,0,0,1,708,4503)" ed:width="514" ed:parentid="667" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">单例模式是一种简单但非常实用的模式，特别是惰性单例技术，在合适的时候才创建对</tspan><tspan x="8" style="white-space:pre" y="35.1">象，并且只创建唯一的一个</tspan></text></g><g id="757" transform="matrix(1,0,0,1,708,4553)" ed:width="514" ed:parentid="667" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">更奇妙的是，创建对象和管理单例的职责被分布在两个不同的方法，这两个方法组合起</tspan><tspan x="8" style="white-space:pre" y="35.1">来才具有单例模式的威力</tspan></text></g><g id="759" transform="matrix(1,0,0,1,615,4629)" ed:width="514" ed:parentid="114" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">策略模式的定义是：定义一系列的算法，把它们一个个封装起来，并且使它们可以相互</tspan><tspan x="8" style="white-space:pre" y="35.1">替换</tspan></text></g><g id="761" transform="matrix(1,0,0,1,812,4710)" ed:width="135" ed:parentid="669" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">以年终奖的计算为例</tspan></text></g><g id="763" transform="matrix(1,0,0,1,974,4679)" ed:width="154" ed:parentid="761" ed:height="24.5"><path d="M0,24.5L154,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.最初if判断的代码实现</tspan></text></g><g id="765" transform="matrix(1,0,0,1,974,4710)" ed:width="159" ed:parentid="761" ed:height="24.5"><path d="M0,24.5L159,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.使用组合函数重构代码</tspan></text></g><g id="767" transform="matrix(1,0,0,1,974,4741)" ed:width="159" ed:parentid="761" ed:height="24.5"><path d="M0,24.5L159,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.使用策略模式重构代码</tspan></text></g><g id="769" transform="matrix(1,0,0,1,812,4772)" ed:width="514" ed:parentid="669" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">策略模式指的是定义一系列的算法，把它们一个个封装起来。将不变的部分和变化的部</tspan><tspan x="8" style="white-space:pre" y="35.1">分分隔开始每个设计模式的主题，策略模式也不例外，策略模式的目的就是将算法的使</tspan><tspan x="8" style="white-space:pre" y="54.1">用与算法的实现分离开来</tspan></text></g><g id="771" transform="matrix(1,0,0,1,812,4841)" ed:width="514" ed:parentid="669" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一个基于策略模式的程序至少由两部分组成。第一个部分是一组策略类，策略类封装了</tspan><tspan x="8" style="white-space:pre" y="35.1">具体的算法，并负责具体的计算过程。第二个部分是环境类Context，Context接受客</tspan><tspan x="8" style="white-space:pre" y="54.1">户的请求，随后把请求委托给某一个策略类</tspan></text></g><g id="773" transform="matrix(1,0,0,1,835,4910)" ed:width="514" ed:parentid="671" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">实际上在JavaScript语言中，函数也是对象，所以更简单和直接的做法是把strategy直</tspan><tspan x="8" style="white-space:pre" y="35.1">接定义为函数</tspan></text></g><g id="777" transform="matrix(1,0,0,1,838,5016)" ed:width="168" ed:parentid="675" ed:height="24.5"><path d="M0,24.5L168,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.4.1.实现动画效果的原理</tspan></text></g><g id="779" transform="matrix(1,0,0,1,1033,4991)" ed:width="465" ed:parentid="777" ed:height="24.5"><path d="M0,24.5L465,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">动画片是把一些差距不大的原画以较快ide帧数播放，来达到视觉上的动画效果</tspan></text></g><g id="781" transform="matrix(1,0,0,1,1033,5022)" ed:width="514" ed:parentid="777" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript中，可以通过连续改变元素的某个CSS属性，比如left、top、background-</tspan><tspan x="8" style="white-space:pre" y="35.1">position来实现动画效果</tspan></text></g><g id="783" transform="matrix(1,0,0,1,838,5072)" ed:width="168" ed:parentid="675" ed:height="24.5"><path d="M0,24.5L168,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.4.2.思路和一些准备工作</tspan></text></g><g id="785" transform="matrix(1,0,0,1,1033,5072)" ed:width="187" ed:parentid="783" ed:height="24.5"><path d="M0,24.5L187,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">需要提前记录一些有用的信息</tspan></text></g><g id="787" transform="matrix(1,0,0,1,838,5103)" ed:width="142" ed:parentid="675" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.4.3.让小球运动起来</tspan></text></g><g id="789" transform="matrix(1,0,0,1,1007,5103)" ed:width="497" ed:parentid="787" ed:height="24.5"><path d="M0,24.5L497,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Animate.prototype.start = function(propertyName, endPos, duration, easing){}</tspan></text></g><g id="791" transform="matrix(1,0,0,1,786,5134)" ed:width="514" ed:parentid="677" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">从定义上看，策略模式就是用来封装算法的。但如果把策略模式仅仅用来封装算法，未</tspan><tspan x="8" style="white-space:pre" y="35.1">免有一点大材小用</tspan></text></g><g id="793" transform="matrix(1,0,0,1,786,5184)" ed:width="514" ed:parentid="677" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在实际开发中，我们通常会把算法的含义扩散开来，是策略模式也可以用来封装一系列</tspan><tspan x="8" style="white-space:pre" y="35.1">的”业务规则“</tspan></text></g><g id="795" transform="matrix(1,0,0,1,734,5234)" ed:width="181" ed:parentid="679" ed:height="24.5"><path d="M0,24.5L181,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.6.1.表单校验的第一个版本</tspan></text></g><g id="797" transform="matrix(1,0,0,1,734,5275)" ed:width="194" ed:parentid="679" ed:height="24.5"><path d="M0,24.5L194,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.6.2.用策略模式重构表单校验</tspan></text></g><g id="799" transform="matrix(1,0,0,1,734,5315)" ed:width="259" ed:parentid="679" ed:height="24.5"><path d="M0,24.5L259,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.6.3.给某个文本输入框添加多种检验规则</tspan></text></g><g id="801" transform="matrix(1,0,0,1,942,5234)" ed:width="78" ed:parentid="795" ed:height="24.5"><path d="M0,24.5L78,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">多个if判断</tspan></text></g><g id="803" transform="matrix(1,0,0,1,955,5265)" ed:width="514" ed:parentid="797" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">先创建了一个validator对象，然后通过validator.add方法。往validator对象中添加一</tspan><tspan x="8" style="white-space:pre" y="35.1">些校验规则</tspan></text></g><g id="805" transform="matrix(1,0,0,1,786,5346)" ed:width="514" ed:parentid="681" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">策略模式是一种常用且有效的设计模式，本章提供了计算奖金、缓动动画、表单校验这</tspan><tspan x="8" style="white-space:pre" y="35.1">Sanger例子来加深对策略模式的理解</tspan></text></g><g id="807" transform="matrix(1,0,0,1,786,5462)" ed:width="161" ed:parentid="681" ed:height="24.5"><path d="M0,24.5L161,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">总结策略模式的一些优点</tspan></text></g><g id="809" transform="matrix(1,0,0,1,974,5396)" ed:width="473" ed:parentid="807" ed:height="24.5"><path d="M0,24.5L473,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">策略模式利用组合、委托和多态等技术和思想，可以有效避免多重条件选择语句</tspan></text></g><g id="811" transform="matrix(1,0,0,1,974,5427)" ed:width="514" ed:parentid="807" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">策略模式提供了对开放-封闭原则的完美支持，将算法封装在独立的strategy中，使得</tspan><tspan x="8" style="white-space:pre" y="35.1">它们易于切换、易于理解、易于扩展</tspan></text></g><g id="813" transform="matrix(1,0,0,1,974,5477)" ed:width="499" ed:parentid="807" ed:height="24.5"><path d="M0,24.5L499,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">策略模式中的算法也可以复用在系统的其他地方，从而避免许多重复的复制粘贴模式</tspan></text></g><g id="815" transform="matrix(1,0,0,1,974,5508)" ed:width="514" ed:parentid="807" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在策略模式中利用组合和委托来让Context拥有执行算法的能力，这yeshiva继承的一</tspan><tspan x="8" style="white-space:pre" y="35.1">种更轻便的替代方案</tspan></text></g><g id="817" transform="matrix(1,0,0,1,825,5558)" ed:width="514" ed:parentid="683" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">实际上在JavaScript这种将函数作为一等对象的语言里，策略模式已经融入到了语言本</tspan><tspan x="8" style="white-space:pre" y="35.1">身当中，我们经常用高阶函数来封装不同的行为，并且把它传递到另一个函数中</tspan></text></g><g id="819" transform="matrix(1,0,0,1,708,5608)" ed:width="514" ed:parentid="685" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在JavaScript语言的策略模式中，策略类往往被函数所代替，这是策略模式就成为一</tspan><tspan x="8" style="white-space:pre" y="35.1">种”隐形“的模式</tspan></text></g><g id="821" transform="matrix(1,0,0,1,615,5685)" ed:width="421" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L421,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">代理模式是为一个对象提供一个代用品或占位符，以便控制对它的访问</tspan></text></g><g id="823" transform="matrix(1,0,0,1,615,5716)" ed:width="514" ed:parentid="116" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">代理模式的关键是：当客户不方便直接访问一个对象那个或者不满足需要的时候，提供</tspan><tspan x="8" style="white-space:pre" y="35.1">一个替身对象来控制对这个对象的访问，客户实际上访问的是替身对象。替身对象对请</tspan><tspan x="8" style="white-space:pre" y="54.1">求做出一些处理之后，再把请求转交给本体对象</tspan></text></g><g id="825" transform="matrix(1,0,0,1,857,5785)" ed:width="213" ed:parentid="687" ed:height="24.5"><path d="M0,24.5L213,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">让小明和MM共同的朋友代为送花</tspan></text></g><g id="827" transform="matrix(1,0,0,1,799,5816)" ed:width="514" ed:parentid="689" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">保护代理用于控制不同权限的对象对目标对象的访问，但在JavaScript并不容易实现保</tspan><tspan x="8" style="white-space:pre" y="35.1">护代理，因为我们无法判断谁访问了某个对象</tspan></text></g><g id="829" transform="matrix(1,0,0,1,799,5866)" ed:width="213" ed:parentid="689" ed:height="24.5"><path d="M0,24.5L213,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">虚拟代理是最常用的一种代理模式</tspan></text></g><g id="831" transform="matrix(1,0,0,1,825,5897)" ed:width="514" ed:parentid="691" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">图片预加载，常用的做法是先用一张loading图片占位，然后用异步的方式加载图片，</tspan><tspan x="8" style="white-space:pre" y="35.1">等图片加载好了再把它填充到img节点</tspan></text></g><g id="833" transform="matrix(1,0,0,1,747,5947)" ed:width="475" ed:parentid="693" ed:height="24.5"><path d="M0,24.5L475,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">实际上我们需要的只是给img节点设置src，预加载图片只是一个锦上添花的功能</tspan></text></g><g id="835" transform="matrix(1,0,0,1,747,5978)" ed:width="514" ed:parentid="693" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">代理的作用在这里体现出来，代理负责预加载图片，预加载的操作完成之后，把请求重</tspan><tspan x="8" style="white-space:pre" y="35.1">新交给本体MyImage</tspan></text></g><g id="837" transform="matrix(1,0,0,1,825,6028)" ed:width="514" ed:parentid="695" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">其中关键是代理对象和本体都对外提供了setSrc方法，在客户看来，代理对象和本体是</tspan><tspan x="8" style="white-space:pre" y="35.1">一致的，代理接手请求的过程对于用户来说是透明的，用户并不清楚代理和本体的区别</tspan></text></g><g id="839" transform="matrix(1,0,0,1,825,6078)" ed:width="514" ed:parentid="695" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在Java等语言中，代理和本体都需要显式地实现同一个接口，一方面接口保证了它们会</tspan><tspan x="8" style="white-space:pre" y="35.1">拥有同样的方法，另一方面，面向接口编程迎合依赖倒置原则，通过接口进行向上转</tspan><tspan x="8" style="white-space:pre" y="54.1">型，从而避开编译器的类型检查，代理和本体将来可以被替换使用</tspan></text></g><g id="841" transform="matrix(1,0,0,1,825,6147)" ed:width="514" ed:parentid="695" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在JavaScript这种动态类型语言中，我们有时通过鸭子类型来检测代理和本体是否都实</tspan><tspan x="8" style="white-space:pre" y="35.1">现了setSrc方法，另外大多数时候甚至干脆不做检测，全部依赖程序员的自觉性，这对</tspan><tspan x="8" style="white-space:pre" y="54.1">于程序的健壮性是有影响的</tspan></text></g><g id="843" transform="matrix(1,0,0,1,818,6216)" ed:width="109" ed:parentid="697" ed:height="24.5"><path d="M0,24.5L109,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">文件同步的功能</tspan></text></g><g id="845" transform="matrix(1,0,0,1,818,6247)" ed:width="514" ed:parentid="697" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">解决方案是，可以通过一个代理函数来收集一段时间之内的请求，最后一次性发送给服</tspan><tspan x="8" style="white-space:pre" y="35.1">务器</tspan></text></g><g id="847" transform="matrix(1,0,0,1,851,6297)" ed:width="453" ed:parentid="701" ed:height="24.5"><path d="M0,24.5L453,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">miniConsole.js开源项目，希望在按下F12来主动唤出控制台的时候进行加载</tspan></text></g><g id="849" transform="matrix(1,0,0,1,734,6328)" ed:width="514" ed:parentid="703" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">缓存代理可以为一些开销大的运算结果提供暂时的存储，在下次运算时，如果传递进来</tspan><tspan x="8" style="white-space:pre" y="35.1">的参数跟之前一致，则可以直接返回前面存储的运算结果</tspan></text></g><g id="851" transform="matrix(1,0,0,1,734,6378)" ed:width="200" ed:parentid="703" ed:height="24.5"><path d="M0,24.5L200,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.8.1.缓存代理的例子-计算乘积</tspan></text></g><g id="853" transform="matrix(1,0,0,1,734,6409)" ed:width="231" ed:parentid="703" ed:height="24.5"><path d="M0,24.5L231,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.8.2.缓存代理用于ajax异步请求数据</tspan></text></g><g id="855" transform="matrix(1,0,0,1,734,6440)" ed:width="514" ed:parentid="703" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">常见的分页的需求，同一页的数据理论上只需要去后台拉取一次，这些已经拉取到的数</tspan><tspan x="8" style="white-space:pre" y="35.1">据在某个地方被缓存之后，下次再请求同一页的时候，便可以直接使用之前的数据</tspan></text></g><g id="857" transform="matrix(1,0,0,1,825,6490)" ed:width="447" ed:parentid="705" ed:height="24.5"><path d="M0,24.5L447,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">通过传入高阶函数这种更加灵活的方式，可以为各种计算方法创建缓存代理</tspan></text></g><g id="859" transform="matrix(1,0,0,1,765,6583)" ed:width="174" ed:parentid="707" ed:height="24.5"><path d="M0,24.5L174,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">代理模式的变体种类非常多</tspan></text></g><g id="861" transform="matrix(1,0,0,1,966,6521)" ed:width="83" ed:parentid="859" ed:height="24.5"><path d="M0,24.5L83,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">防火墙代理</tspan></text></g><g id="863" transform="matrix(1,0,0,1,966,6552)" ed:width="70" ed:parentid="859" ed:height="24.5"><path d="M0,24.5L70,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">远程代理</tspan></text></g><g id="865" transform="matrix(1,0,0,1,966,6583)" ed:width="70" ed:parentid="859" ed:height="24.5"><path d="M0,24.5L70,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">保护代理</tspan></text></g><g id="867" transform="matrix(1,0,0,1,966,6614)" ed:width="96" ed:parentid="859" ed:height="24.5"><path d="M0,24.5L96,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">智能引用代理</tspan></text></g><g id="869" transform="matrix(1,0,0,1,966,6645)" ed:width="96" ed:parentid="859" ed:height="24.5"><path d="M0,24.5L96,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">写时复制代理</tspan></text></g><g id="871" transform="matrix(1,0,0,1,716,6676)" ed:width="470" ed:parentid="709" ed:height="24.5"><path d="M0,24.5L470,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">代理模式包括许多小分类，在JavaScript开发中最常见的是虚拟代理和缓存代理</tspan></text></g><g id="873" transform="matrix(1,0,0,1,716,6707)" ed:width="514" ed:parentid="709" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">我们在编写业务代码的时候，往往不需要去预先猜测是否需要使用代理模式，当真正发</tspan><tspan x="8" style="white-space:pre" y="35.1">现不方便直接访问某个对象的时候，再编写代理也不迟</tspan></text></g><g id="875" transform="matrix(1,0,0,1,631,6833)" ed:width="146" ed:parentid="118" ed:height="24.5"><path d="M0,24.5L146,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.1.jQuery中的迭代器</tspan></text></g><g id="877" transform="matrix(1,0,0,1,631,6864)" ed:width="144" ed:parentid="118" ed:height="24.5"><path d="M0,24.5L144,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.2.实现自己的迭代器</tspan></text></g><g id="879" transform="matrix(1,0,0,1,631,6942)" ed:width="183" ed:parentid="118" ed:height="24.5"><path d="M0,24.5L183,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.3.内部迭代器和外部迭代器</tspan></text></g><g id="881" transform="matrix(1,0,0,1,631,7019)" ed:width="209" ed:parentid="118" ed:height="24.5"><path d="M0,24.5L209,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.4.迭代类数组对象和字面量对象</tspan></text></g><g id="883" transform="matrix(1,0,0,1,631,7060)" ed:width="105" ed:parentid="118" ed:height="24.5"><path d="M0,24.5L105,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.5.倒序迭代器</tspan></text></g><g id="885" transform="matrix(1,0,0,1,631,7100)" ed:width="105" ed:parentid="118" ed:height="24.5"><path d="M0,24.5L105,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.6.中止迭代器</tspan></text></g><g id="887" transform="matrix(1,0,0,1,631,7131)" ed:width="170" ed:parentid="118" ed:height="24.5"><path d="M0,24.5L170,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.7.迭代器模式的应用举例</tspan></text></g><g id="889" transform="matrix(1,0,0,1,631,7162)" ed:width="66" ed:parentid="118" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.8.小结</tspan></text></g><g id="891" transform="matrix(1,0,0,1,647,7310)" ed:width="176" ed:parentid="120" ed:height="24.5"><path d="M0,24.5L176,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.1.现实中的发布-订阅模式</tspan></text></g><g id="893" transform="matrix(1,0,0,1,647,7376)" ed:width="163" ed:parentid="120" ed:height="24.5"><path d="M0,24.5L163,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.2.发布-订阅模式的作用</tspan></text></g><g id="895" transform="matrix(1,0,0,1,647,7457)" ed:width="100" ed:parentid="120" ed:height="24.5"><path d="M0,24.5L100,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.3.DOM事件</tspan></text></g><g id="897" transform="matrix(1,0,0,1,647,7563)" ed:width="105" ed:parentid="120" ed:height="24.5"><path d="M0,24.5L105,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.4.自定义事件</tspan></text></g><g id="899" transform="matrix(1,0,0,1,647,7644)" ed:width="189" ed:parentid="120" ed:height="24.5"><path d="M0,24.5L189,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.5.发布-订阅模式的通用实现</tspan></text></g><g id="901" transform="matrix(1,0,0,1,647,7675)" ed:width="131" ed:parentid="120" ed:height="24.5"><path d="M0,24.5L131,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.6.取消订阅的事件</tspan></text></g><g id="903" transform="matrix(1,0,0,1,647,7784)" ed:width="163" ed:parentid="120" ed:height="24.5"><path d="M0,24.5L163,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.7.真实的例子-网站登录</tspan></text></g><g id="905" transform="matrix(1,0,0,1,647,7947)" ed:width="163" ed:parentid="120" ed:height="24.5"><path d="M0,24.5L163,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.8.全局的发布-订阅对象</tspan></text></g><g id="907" transform="matrix(1,0,0,1,647,8060)" ed:width="105" ed:parentid="120" ed:height="24.5"><path d="M0,24.5L105,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.9.模块间通信</tspan></text></g><g id="909" transform="matrix(1,0,0,1,647,8183)" ed:width="165" ed:parentid="120" ed:height="24.5"><path d="M0,24.5L165,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.10.必须先订阅再发布吗</tspan></text></g><g id="911" transform="matrix(1,0,0,1,647,8277)" ed:width="165" ed:parentid="120" ed:height="24.5"><path d="M0,24.5L165,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.11.全局事件的命名冲突</tspan></text></g><g id="913" transform="matrix(1,0,0,1,647,8396)" ed:width="272" ed:parentid="120" ed:height="24.5"><path d="M0,24.5L272,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.12.JavaScript实现发布-订阅模式的便利性</tspan></text></g><g id="915" transform="matrix(1,0,0,1,647,8574)" ed:width="74" ed:parentid="120" ed:height="24.5"><path d="M0,24.5L74,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.13.小结</tspan></text></g><g id="917" transform="matrix(1,0,0,1,631,6783)" ed:width="514" ed:parentid="118" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">迭代器模式 是指提供一种方法顺序访问一个聚合对象中的各个元素，而又不需要暴露</tspan><tspan x="8" style="white-space:pre" y="35.1">该对象的内部表示</tspan></text></g><g id="919" transform="matrix(1,0,0,1,804,6833)" ed:width="317" ed:parentid="875" ed:height="24.5"><path d="M0,24.5L317,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">迭代器模式无非就是循环访问聚合对象中的各个元素</tspan></text></g><g id="921" transform="matrix(1,0,0,1,841,6895)" ed:width="395" ed:parentid="879" ed:height="24.5"><path d="M0,24.5L395,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">迭代器可以分为内部迭代器和外部迭代器，它们有各自的适用场景</tspan></text></g><g id="923" transform="matrix(1,0,0,1,841,6926)" ed:width="369" ed:parentid="879" ed:height="24.5"><path d="M0,24.5L369,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在一些没有闭包的语言中，内部迭代器本身的实现也相当复杂</tspan></text></g><g id="925" transform="matrix(1,0,0,1,841,6957)" ed:width="265" ed:parentid="879" ed:height="24.5"><path d="M0,24.5L265,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">外部迭代器必须显式的请求迭代下一个元素</tspan></text></g><g id="927" transform="matrix(1,0,0,1,841,6988)" ed:width="473" ed:parentid="879" ed:height="24.5"><path d="M0,24.5L473,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">外部迭代器虽然调用方式相对复杂，但它的实用面更广，也能满足更多变的需求</tspan></text></g><g id="929" transform="matrix(1,0,0,1,763,7050)" ed:width="514" ed:parentid="883" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">迭代器模式提供了循环访问一个聚合对象中每个元素的方法，但它没有规定我们以顺</tspan><tspan x="8" style="white-space:pre" y="35.1">序、倒序还是中序遍历聚合对象</tspan></text></g><g id="931" transform="matrix(1,0,0,1,763,7100)" ed:width="454" ed:parentid="885" ed:height="24.5"><path d="M0,24.5L454,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">jQuery的each函数约定如果回调函数的执行结果返回false，则提前终止循环</tspan></text></g><g id="933" transform="matrix(1,0,0,1,828,7131)" ed:width="265" ed:parentid="887" ed:height="24.5"><path d="M0,24.5L265,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">根据不同的浏览器获取相应的上传组件对象</tspan></text></g><g id="935" transform="matrix(1,0,0,1,724,7162)" ed:width="499" ed:parentid="889" ed:height="24.5"><path d="M0,24.5L499,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">迭代器模式是一种相对简单的模式，简单到很多时候我们都不认为它是一种设计模式</tspan></text></g><g id="937" transform="matrix(1,0,0,1,647,7220)" ed:width="514" ed:parentid="120" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">发布-订阅模式又叫观察者模式，它定义对象间的一种一对多的依赖关系，当一个对象</tspan><tspan x="8" style="white-space:pre" y="35.1">的状态发生改变时，所有依赖于它的对象都将得到通知</tspan></text></g><g id="939" transform="matrix(1,0,0,1,647,7270)" ed:width="424" ed:parentid="120" ed:height="24.5"><path d="M0,24.5L424,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在JavaScript开发中，我们一般用事件模型来替代传统的发布-订阅模式</tspan></text></g><g id="941" transform="matrix(1,0,0,1,850,7301)" ed:width="514" ed:parentid="891" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">售楼的例子：购房者的电话号码都被记在售楼处的花名册上，新楼盘推出的时候，售楼</tspan><tspan x="8" style="white-space:pre" y="35.1">MM会翻开花名册，遍历上面的电话号码，一次发送一条短信来通知他们</tspan></text></g><g id="943" transform="matrix(1,0,0,1,837,7351)" ed:width="466" ed:parentid="893" ed:height="24.5"><path d="M0,24.5L466,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">发布-订阅模式可以广泛应用于异步编程中，这是一种替代传递回调函数的方案</tspan></text></g><g id="945" transform="matrix(1,0,0,1,837,7382)" ed:width="514" ed:parentid="893" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">发布-订阅模式可以取代对象之间硬编码的通知机制，一个对象不用再显式的调用另外</tspan><tspan x="8" style="white-space:pre" y="35.1">一个对象的某个接口</tspan></text></g><g id="947" transform="matrix(1,0,0,1,774,7432)" ed:width="514" ed:parentid="895" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">实际上，只要我们曾经在DOM节点上面绑定过事件函数，那我们就曾经使用过发布-订</tspan><tspan x="8" style="white-space:pre" y="35.1">阅模式</tspan></text></g><g id="949" transform="matrix(1,0,0,1,774,7482)" ed:width="473" ed:parentid="895" ed:height="24.5"><path d="M0,24.5L473,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">还可以随意增加或者删除订阅者，增加任何订阅者都不会影响发布者代码的编写</tspan></text></g><g id="951" transform="matrix(1,0,0,1,779,7563)" ed:width="193" ed:parentid="897" ed:height="24.5"><path d="M0,24.5L193,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如何一步步实现发布-订阅模式</tspan></text></g><g id="953" transform="matrix(1,0,0,1,999,7513)" ed:width="265" ed:parentid="951" ed:height="24.5"><path d="M0,24.5L265,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">首先要指定好谁充当发布者（比如售楼处）</tspan></text></g><g id="955" transform="matrix(1,0,0,1,999,7544)" ed:width="514" ed:parentid="951" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">然后给发布者添加一个缓存列表，用于存放回调函数以便通知订阅者（售楼处的花名</tspan><tspan x="8" style="white-space:pre" y="35.1">册）</tspan></text></g><g id="957" transform="matrix(1,0,0,1,999,7594)" ed:width="514" ed:parentid="951" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">最后发布消息的时候，发布者会遍历这个缓存列表，依次触发里面的订阅者回调函数</tspan><tspan x="8" style="white-space:pre" y="35.1">（遍历花名册，挨个发短信）</tspan></text></g><g id="959" transform="matrix(1,0,0,1,863,7644)" ed:width="323" ed:parentid="899" ed:height="24.5"><path d="M0,24.5L323,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">把发布-订阅的功能提取出来，放在一个单独的对象内</tspan></text></g><g id="961" transform="matrix(1,0,0,1,805,7675)" ed:width="189" ed:parentid="901" ed:height="24.5"><path d="M0,24.5L189,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">给event对象增加remove方法</tspan></text></g><g id="963" transform="matrix(1,0,0,1,837,7706)" ed:width="514" ed:parentid="903" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">网站里有header头部、nav导航、消息列表、购物车等模块。这些模块有一个共同的前</tspan><tspan x="8" style="white-space:pre" y="35.1">提条件，就是必须先用Ajax异步请求获取用户的登录信息</tspan></text></g><g id="965" transform="matrix(1,0,0,1,837,7756)" ed:width="514" ed:parentid="903" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">更重要的一点是，我们不知道除了header头部、nav导航、消息列表、购物车之外，将</tspan><tspan x="8" style="white-space:pre" y="35.1">来还有哪些模块需要使用这些用户信息</tspan></text></g><g id="967" transform="matrix(1,0,0,1,837,7806)" ed:width="514" ed:parentid="903" ed:height="81.5"><path d="M0,81.5L514,81.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">用发布-订阅模式重写后，对用户信息感兴趣的业务模块将自行订阅登录成功的消息事</tspan><tspan x="8" style="white-space:pre" y="35.1">件。当登录成功时，登录模块只需要发布登录成功的消息，而业务方接受到消息之后，</tspan><tspan x="8" style="white-space:pre" y="54.1">就会开始进行各自的业务处理，登录模块并不关心业务究竟要做什么，也不想去了解它</tspan><tspan x="8" style="white-space:pre" y="73.1">们的内部细节</tspan></text></g><g id="969" transform="matrix(1,0,0,1,837,7894)" ed:width="514" ed:parentid="905" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">买房子未必要亲自去售楼处，我们只要把订阅的请求交给中介公司，而各大房产公司也</tspan><tspan x="8" style="white-space:pre" y="35.1">只需要通过中介公司来发布房子消息。这样一来，我们不用关心消息是来自哪个房产公</tspan><tspan x="8" style="white-space:pre" y="54.1">司，我们在意的是能否顺利收到消息</tspan></text></g><g id="971" transform="matrix(1,0,0,1,837,7963)" ed:width="514" ed:parentid="905" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">发布-订阅模式可以用一个全局的Event对象来实现，订阅者不需要了解消息来自哪个发</tspan><tspan x="8" style="white-space:pre" y="35.1">布者，发布者也不知道消息会推送给哪些订阅者，Event作为一个类似”中介者“的角</tspan><tspan x="8" style="white-space:pre" y="54.1">色，把订阅者和发布者联系起来</tspan></text></g><g id="973" transform="matrix(1,0,0,1,779,8032)" ed:width="514" ed:parentid="907" ed:height="81.5"><path d="M0,81.5L514,81.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">要留意一个问题，模块之间如果用了太多的全局发布-订阅模式来通信，那么模块与模</tspan><tspan x="8" style="white-space:pre" y="35.1">块之间的联系就被隐藏到了后面。最终搞不清楚消息来自哪个模块，或者消息会流向哪</tspan><tspan x="8" style="white-space:pre" y="54.1">些模块，这会给我们的维护带来一些麻烦，也许某个模块的作用就是暴露一些接口给其</tspan><tspan x="8" style="white-space:pre" y="73.1">他模块调用</tspan></text></g><g id="975" transform="matrix(1,0,0,1,839,8120)" ed:width="514" ed:parentid="909" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在某些情况下，我们需要先将这条消息保存下来，等到有对象来订阅它的时候，再重新</tspan><tspan x="8" style="white-space:pre" y="35.1">把消息发布给订阅者。就如同QQ中的离线消息一样，离线消息被保存在服务器中，接</tspan><tspan x="8" style="white-space:pre" y="54.1">收人下次登录上线之后，可以重新收到这条消息</tspan></text></g><g id="977" transform="matrix(1,0,0,1,839,8189)" ed:width="514" ed:parentid="909" ed:height="81.5"><path d="M0,81.5L514,81.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">为了满足这个需求，我们要建立一个存放离线事件的堆栈，当事件发布的时候，如果此</tspan><tspan x="8" style="white-space:pre" y="35.1">时还没有订阅者来订阅这个事件，我们暂时把发布事件的动作包裹在一个函数里，这些</tspan><tspan x="8" style="white-space:pre" y="54.1">包装函数将被存入堆栈中，等到终于有对象来订阅此事件的时候，我们将遍历堆栈并且</tspan><tspan x="8" style="white-space:pre" y="73.1">依次执行这些包装函数，也就是重新发布里面的事件</tspan></text></g><g id="979" transform="matrix(1,0,0,1,946,8308)" ed:width="514" ed:parentid="913" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在Java中实现一个自己的发布-订阅模式，通常会把订阅者对象自身当成引用传入发布</tspan><tspan x="8" style="white-space:pre" y="35.1">者对象中，同时订阅者对象还需提供一个名为诸如update的方法，供发布者对象在适</tspan><tspan x="8" style="white-space:pre" y="54.1">合的时候调用</tspan></text></g><g id="981" transform="matrix(1,0,0,1,946,8377)" ed:width="514" ed:parentid="913" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">而在JavaScript中，我们用注册回调函数的形式来代替传统的发布-订阅模式，显得更</tspan><tspan x="8" style="white-space:pre" y="35.1">加优雅和简单</tspan></text></g><g id="983" transform="matrix(1,0,0,1,946,8427)" ed:width="514" ed:parentid="913" ed:height="81.5"><path d="M0,81.5L514,81.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在JavaScript中，我们无需去选择使用推模型还是拉模型。推模型是指事件发生时，发</tspan><tspan x="8" style="white-space:pre" y="35.1">布者一次性把所有更改的状态和数据都推送给订阅者。拉模型不同的地方是，发布者仅</tspan><tspan x="8" style="white-space:pre" y="54.1">仅通知订阅者事件已经发生了，此外发布者需提供一些公开的接口供订阅者来主动拉去</tspan><tspan x="8" style="white-space:pre" y="73.1">数据</tspan></text></g><g id="985" transform="matrix(1,0,0,1,748,8515)" ed:width="440" ed:parentid="915" ed:height="24.5"><path d="M0,24.5L440,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">发布-订阅模式的优点非常明显，一是时间上的解耦，而是对象之间的解耦</tspan></text></g><g id="987" transform="matrix(1,0,0,1,748,8546)" ed:width="486" ed:parentid="915" ed:height="24.5"><path d="M0,24.5L486,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">应用非常广泛，既可以用在异步编程中，也可以帮助我们完成更松耦合的代码编写</tspan></text></g><g id="989" transform="matrix(1,0,0,1,748,8577)" ed:width="514" ed:parentid="915" ed:height="81.5"><path d="M0,81.5L514,81.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">缺点：创建订阅者本身要消耗一定的时间和内存，而且当你订阅一个消息后，也许此消</tspan><tspan x="8" style="white-space:pre" y="35.1">息最后都未发生，但这个订阅者会始终存在于内存中。另外，发布订阅模式虽然可以弱</tspan><tspan x="8" style="white-space:pre" y="54.1">化对象之间的联系，但如果过度使用的话，对象和对象之间的必要联系也将被深埋在背</tspan><tspan x="8" style="white-space:pre" y="73.1">后，会导致程序难以跟踪维护和理解</tspan></text></g><g id="991" transform="matrix(1,0,0,1,615,8735)" ed:width="131" ed:parentid="122" ed:height="24.5"><path d="M0,24.5L131,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">9.1.命令模式的用途</tspan></text></g><g id="993" transform="matrix(1,0,0,1,615,8835)" ed:width="189" ed:parentid="122" ed:height="24.5"><path d="M0,24.5L189,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">9.2.命令模式的例子-菜单程序</tspan></text></g><g id="995" transform="matrix(1,0,0,1,615,8901)" ed:width="180" ed:parentid="122" ed:height="24.5"><path d="M0,24.5L180,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">9.3.JavaScript中的命令模式</tspan></text></g><g id="997" transform="matrix(1,0,0,1,615,8966)" ed:width="92" ed:parentid="122" ed:height="24.5"><path d="M0,24.5L92,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">9.4.撤销命令</tspan></text></g><g id="999" transform="matrix(1,0,0,1,615,9022)" ed:width="105" ed:parentid="122" ed:height="24.5"><path d="M0,24.5L105,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">9.5.撤销和重做</tspan></text></g><g id="1001" transform="matrix(1,0,0,1,615,9072)" ed:width="92" ed:parentid="122" ed:height="24.5"><path d="M0,24.5L92,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">9.6.命令队列</tspan></text></g><g id="1003" transform="matrix(1,0,0,1,615,9122)" ed:width="79" ed:parentid="122" ed:height="24.5"><path d="M0,24.5L79,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">9.7.宏命令</tspan></text></g><g id="1005" transform="matrix(1,0,0,1,615,9153)" ed:width="157" ed:parentid="122" ed:height="24.5"><path d="M0,24.5L157,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">9.8.智能命令与傻瓜命令</tspan></text></g><g id="1007" transform="matrix(1,0,0,1,615,9200)" ed:width="66" ed:parentid="122" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">9.9.小结</tspan></text></g><g id="1009" transform="matrix(1,0,0,1,615,9357)" ed:width="113" ed:parentid="124" ed:height="24.5"><path d="M0,24.5L113,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">10.1.回顾宏命令</tspan></text></g><g id="1011" transform="matrix(1,0,0,1,615,9442)" ed:width="139" ed:parentid="124" ed:height="24.5"><path d="M0,24.5L139,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">10.2.组合模式的用途</tspan></text></g><g id="1013" transform="matrix(1,0,0,1,615,9517)" ed:width="178" ed:parentid="124" ed:height="24.5"><path d="M0,24.5L178,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">10.3.请求在树中传递的过程</tspan></text></g><g id="1015" transform="matrix(1,0,0,1,615,9582)" ed:width="139" ed:parentid="124" ed:height="24.5"><path d="M0,24.5L139,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">10.4.更强大的宏命令</tspan></text></g><g id="1017" transform="matrix(1,0,0,1,615,9711)" ed:width="204" ed:parentid="124" ed:height="24.5"><path d="M0,24.5L204,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">10.5.抽象类在组合模式中的作用</tspan></text></g><g id="1019" transform="matrix(1,0,0,1,615,9839)" ed:width="178" ed:parentid="124" ed:height="24.5"><path d="M0,24.5L178,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">10.6.透明性带来的安全问题</tspan></text></g><g id="1021" transform="matrix(1,0,0,1,615,9914)" ed:width="210" ed:parentid="124" ed:height="24.5"><path d="M0,24.5L210,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">10.7.组合模式的例子-扫描文件夹</tspan></text></g><g id="1023" transform="matrix(1,0,0,1,615,10036)" ed:width="165" ed:parentid="124" ed:height="24.5"><path d="M0,24.5L165,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">10.8.一些值得注意的地方</tspan></text></g><g id="1025" transform="matrix(1,0,0,1,615,10123)" ed:width="113" ed:parentid="124" ed:height="24.5"><path d="M0,24.5L113,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">10.9.引用父对象</tspan></text></g><g id="1027" transform="matrix(1,0,0,1,615,10169)" ed:width="160" ed:parentid="124" ed:height="24.5"><path d="M0,24.5L160,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">10.10.何时使用组合模式</tspan></text></g><g id="1029" transform="matrix(1,0,0,1,615,10250)" ed:width="82" ed:parentid="124" ed:height="24.5"><path d="M0,24.5L82,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">10.11.小结</tspan></text></g><g id="1031" transform="matrix(1,0,0,1,773,8691)" ed:width="514" ed:parentid="991" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">命令模式是最简单和优雅的模式之一，命令模式中的命令（command）指的是一个执</tspan><tspan x="8" style="white-space:pre" y="35.1">行某些特定事情的指令</tspan></text></g><g id="1033" transform="matrix(1,0,0,1,773,8741)" ed:width="514" ed:parentid="991" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">命令模式最常见的应用场景是：有时候需要向某些对象发送请求，但是并不知道请求的</tspan><tspan x="8" style="white-space:pre" y="35.1">接收者是谁，也不知道被请求的操作是什么。此时希望用一种松耦合的方式来设计程</tspan><tspan x="8" style="white-space:pre" y="54.1">序，使得请求发送者和请求接收者能够消除彼此之间的耦合关系</tspan></text></g><g id="1037" transform="matrix(1,0,0,1,831,8810)" ed:width="514" ed:parentid="993" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在这里运用命令模式的理由：点击了按钮之后，必须向某些负责具体行为的对象发送请</tspan><tspan x="8" style="white-space:pre" y="35.1">求，这些对象就是请求的接收者</tspan></text></g><g id="1039" transform="matrix(1,0,0,1,831,8860)" ed:width="460" ed:parentid="993" ed:height="24.5"><path d="M0,24.5L460,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">设计模式的主题总是把不变的事务和变化的事物分离开来，命令模式也不例外</tspan></text></g><g id="1041" transform="matrix(1,0,0,1,822,8891)" ed:width="514" ed:parentid="995" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在面向对象设计中，命令模式的接收者被当成command对象的属性保存起来，同时约</tspan><tspan x="8" style="white-space:pre" y="35.1">定执行命令的操作command.execute方法</tspan></text></g><g id="1043" transform="matrix(1,0,0,1,734,8941)" ed:width="473" ed:parentid="997" ed:height="24.5"><path d="M0,24.5L473,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">命令模式的作用不仅是封装运算块，而且可以很方便地给命令对象增加撤销操作</tspan></text></g><g id="1045" transform="matrix(1,0,0,1,734,8972)" ed:width="514" ed:parentid="997" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">撤销是命令模式里一个非常有用的功能，试想一下开发一个围棋程序的时候，我们把每</tspan><tspan x="8" style="white-space:pre" y="35.1">一步棋子的变化都封装成命令，则可以轻而易举的实现毁棋功能</tspan></text></g><g id="1047" transform="matrix(1,0,0,1,734,9053)" ed:width="514" ed:parentid="1001" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">命令对象的生命周期跟初始请求发生的时间无关，command对象的execute方法可以</tspan><tspan x="8" style="white-space:pre" y="35.1">在程序运行的任何时刻执行，即使点击按钮的请求早已发生，但我们的命令对象仍然是</tspan><tspan x="8" style="white-space:pre" y="54.1">有生命的</tspan></text></g><g id="1049" transform="matrix(1,0,0,1,721,9122)" ed:width="252" ed:parentid="1003" ed:height="24.5"><path d="M0,24.5L252,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">宏命令是命令模式与组合模式的联用产物</tspan></text></g><g id="1051" transform="matrix(1,0,0,1,708,9184)" ed:width="444" ed:parentid="1007" ed:height="24.5"><path d="M0,24.5L444,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">跟许多其他语言不同，JavaScript可以用高阶函数非常方便地实现命令模式</tspan></text></g><g id="1053" transform="matrix(1,0,0,1,708,9215)" ed:width="288" ed:parentid="1007" ed:height="24.5"><path d="M0,24.5L288,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">命令模式在JavaScript语言中是一种隐形的模式</tspan></text></g><g id="1055" transform="matrix(1,0,0,1,615,9273)" ed:width="514" ed:parentid="124" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">组合模式就是用小的子对象来构建更大的对象，而这些小的子对象本身也许是由更小</tspan><tspan x="8" style="white-space:pre" y="35.1">的”孙对象“构成的</tspan></text></g><g id="1057" transform="matrix(1,0,0,1,755,9323)" ed:width="514" ed:parentid="1009" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">宏命令对象包含了一组具体的子命令对象，不管是宏命令对象，还是子命令对象，都有</tspan><tspan x="8" style="white-space:pre" y="35.1">一个execute方法负责执行命令</tspan></text></g><g id="1059" transform="matrix(1,0,0,1,755,9373)" ed:width="514" ed:parentid="1009" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在macroCommand的execute方法里，并不执行真正的操作，而是遍历它所包含的叶</tspan><tspan x="8" style="white-space:pre" y="35.1">对象，把真正的execute请求委托给这些叶对象</tspan></text></g><g id="1061" transform="matrix(1,0,0,1,781,9423)" ed:width="514" ed:parentid="1011" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">组合模式将对象组合成树形结构，以表示”部分-整体“的层次结构。除了用来表示树</tspan><tspan x="8" style="white-space:pre" y="35.1">形结构之外，组合模式的另一个好吃是通过对象的多态性表现，使得用户对单个对象和</tspan><tspan x="8" style="white-space:pre" y="54.1">组合对象的使用具有一致性</tspan></text></g><g id="1063" transform="matrix(1,0,0,1,820,9492)" ed:width="343" ed:parentid="1013" ed:height="24.5"><path d="M0,24.5L343,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在组合模式中，请求在树中传递的过程总是遵循一种逻辑</tspan></text></g><g id="1065" transform="matrix(1,0,0,1,820,9523)" ed:width="514" ed:parentid="1013" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">作为客户，只需要关心树最顶层的组合对象，客户只需要请求这个组合对象，请求便会</tspan><tspan x="8" style="white-space:pre" y="35.1">沿着树往下传递，依次到达所有的叶对象</tspan></text></g><g id="1067" transform="matrix(1,0,0,1,781,9573)" ed:width="514" ed:parentid="1015" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">基本对象可以被组合成更复杂的组合对象，组合对象又可以被组合，这样不断递归下</tspan><tspan x="8" style="white-space:pre" y="35.1">去，这棵树的结构可以支持任意多的复杂度</tspan></text></g><g id="1069" transform="matrix(1,0,0,1,846,9623)" ed:width="514" ed:parentid="1017" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">组合模式最大的优点在于可以一致地对待组合对象和基本对象。客户不需要知道当前处</tspan><tspan x="8" style="white-space:pre" y="35.1">理的宏命令还是普通命令，只要它是一个命令，并且有execute方法，这个命令就可以</tspan><tspan x="8" style="white-space:pre" y="54.1">被添加到树中</tspan></text></g><g id="1071" transform="matrix(1,0,0,1,846,9692)" ed:width="514" ed:parentid="1017" ed:height="81.5"><path d="M0,81.5L514,81.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在JavaScript这种动态类型语言中，对象的多态性是与生俱来的，也没有编译器去检查</tspan><tspan x="8" style="white-space:pre" y="35.1">变量的类型，所以我们通常不会去模拟一个”怪异“的抽象类，在JavaScript中实现组</tspan><tspan x="8" style="white-space:pre" y="54.1">合模式的难点在于要保证组合对象和叶对象拥有同样的方法，这通常需要用鸭子类型的</tspan><tspan x="8" style="white-space:pre" y="73.1">思想对它们进行接口检查</tspan></text></g><g id="1073" transform="matrix(1,0,0,1,846,9780)" ed:width="514" ed:parentid="1017" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在JavaScript中实现组合模式，看起来缺乏一些严谨性，我们的代码算不上安全，但能</tspan><tspan x="8" style="white-space:pre" y="35.1">更快速和自由地开发，这既是JavaScript的缺点，也是它的优点</tspan></text></g><g id="1075" transform="matrix(1,0,0,1,820,9830)" ed:width="514" ed:parentid="1019" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">组合模式的透明性使得发起请求的客户不用去顾忌树中组合对象和叶对象的区别，但它</tspan><tspan x="8" style="white-space:pre" y="35.1">们在本质上有区别的</tspan></text></g><g id="1077" transform="matrix(1,0,0,1,852,9880)" ed:width="514" ed:parentid="1021" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">文件夹和文件之间的关系，非常适合用组合模式来描述。文件夹里既可以包含文件，又</tspan><tspan x="8" style="white-space:pre" y="35.1">可以包含其他文件夹，最终可能组合成一棵树</tspan></text></g><g id="1079" transform="matrix(1,0,0,1,852,9930)" ed:width="514" ed:parentid="1021" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在添加一批文件的操作过程中，客户不用分辨它们到底是文件还是文件夹。新增加的文</tspan><tspan x="8" style="white-space:pre" y="35.1">件和文件夹能够很容易地添加到原来的树结构中，和树里已有的对象一起工作</tspan></text></g><g id="1081" transform="matrix(1,0,0,1,807,9980)" ed:width="159" ed:parentid="1023" ed:height="24.5"><path d="M0,24.5L159,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.组合模式不是父子关系</tspan></text></g><g id="1083" transform="matrix(1,0,0,1,993,9980)" ed:width="321" ed:parentid="1081" ed:height="24.5"><path d="M0,24.5L321,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">组合模式是一种HAS-A（聚合）的关系，而不是IS-A</tspan></text></g><g id="1085" transform="matrix(1,0,0,1,807,10020)" ed:width="159" ed:parentid="1023" ed:height="24.5"><path d="M0,24.5L159,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.对叶对象操作的一致性</tspan></text></g><g id="1087" transform="matrix(1,0,0,1,993,10011)" ed:width="514" ed:parentid="1085" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">组合模式除了要求组合对象和叶对象拥有相同的接口之外，还有一个必要条件，就是对</tspan><tspan x="8" style="white-space:pre" y="35.1">一组叶对象的操作必须具有一致性</tspan></text></g><g id="1089" transform="matrix(1,0,0,1,807,10061)" ed:width="107" ed:parentid="1023" ed:height="24.5"><path d="M0,24.5L107,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.双向映射关系</tspan></text></g><g id="1091" transform="matrix(1,0,0,1,807,10092)" ed:width="211" ed:parentid="1023" ed:height="24.5"><path d="M0,24.5L211,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.用职责链模式提高组合模式性能</tspan></text></g><g id="1093" transform="matrix(1,0,0,1,802,10169)" ed:width="135" ed:parentid="1027" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">适用于以下两种情况</tspan></text></g><g id="1095" transform="matrix(1,0,0,1,964,10154)" ed:width="193" ed:parentid="1093" ed:height="24.5"><path d="M0,24.5L193,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">表示对象的部分-整体层次结构</tspan></text></g><g id="1097" transform="matrix(1,0,0,1,964,10185)" ed:width="213" ed:parentid="1093" ed:height="24.5"><path d="M0,24.5L213,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">客户希望统一对待树中的所有对象</tspan></text></g><g id="1099" transform="matrix(1,0,0,1,724,10216)" ed:width="514" ed:parentid="1029" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">组合模式可以让我们使用树形方式创建对象的结构。我们可以把相同的操作应用在组合</tspan><tspan x="8" style="white-space:pre" y="35.1">对象和单个对象上</tspan></text></g><g id="1101" transform="matrix(1,0,0,1,724,10266)" ed:width="514" ed:parentid="1029" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">组合模式并不是完美的，它可能会产生一个这样的系统：系统中的每个对象看起来都与</tspan><tspan x="8" style="white-space:pre" y="35.1">其他对象差不多/它们的区别只有在运行的时候才会显现出来，这会使代码难以理解</tspan></text></g><g id="1103" transform="matrix(1,0,0,1,663,10423)" ed:width="204" ed:parentid="126" ed:height="24.5"><path d="M0,24.5L204,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.1.模板方法模式的定义和组成</tspan></text></g><g id="1105" transform="matrix(1,0,0,1,663,10560)" ed:width="202" ed:parentid="126" ed:height="24.5"><path d="M0,24.5L202,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.2.第一个例子-Coffee or Tea</tspan></text></g><g id="1107" transform="matrix(1,0,0,1,663,10897)" ed:width="87" ed:parentid="126" ed:height="24.5"><path d="M0,24.5L87,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.3.抽象类</tspan></text></g><g id="1109" transform="matrix(1,0,0,1,663,11188)" ed:width="191" ed:parentid="126" ed:height="24.5"><path d="M0,24.5L191,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.4.模板方法模式的使用场景</tspan></text></g><g id="1111" transform="matrix(1,0,0,1,663,11266)" ed:width="100" ed:parentid="126" ed:height="24.5"><path d="M0,24.5L100,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.5.钩子方法</tspan></text></g><g id="1113" transform="matrix(1,0,0,1,663,11410)" ed:width="113" ed:parentid="126" ed:height="24.5"><path d="M0,24.5L113,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.6.好莱坞原则</tspan></text></g><g id="1115" transform="matrix(1,0,0,1,663,11526)" ed:width="165" ed:parentid="126" ed:height="24.5"><path d="M0,24.5L165,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.7.真的需要”继承“吗</tspan></text></g><g id="1117" transform="matrix(1,0,0,1,663,11626)" ed:width="74" ed:parentid="126" ed:height="24.5"><path d="M0,24.5L74,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.8.小结</tspan></text></g><g id="1119" transform="matrix(1,0,0,1,892,10504)" ed:width="137" ed:parentid="1105" ed:height="24.5"><path d="M0,24.5L137,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.2.1.先泡一杯咖啡</tspan></text></g><g id="1121" transform="matrix(1,0,0,1,892,10535)" ed:width="111" ed:parentid="1105" ed:height="24.5"><path d="M0,24.5L111,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.2.2.泡一壶茶</tspan></text></g><g id="1123" transform="matrix(1,0,0,1,892,10566)" ed:width="137" ed:parentid="1105" ed:height="24.5"><path d="M0,24.5L137,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.2.3.分离出共同点</tspan></text></g><g id="1125" transform="matrix(1,0,0,1,892,10607)" ed:width="212" ed:parentid="1105" ed:height="24.5"><path d="M0,24.5L212,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.2.4.创建Coffee子类和Tea子类</tspan></text></g><g id="1127" transform="matrix(1,0,0,1,777,10757)" ed:width="137" ed:parentid="1107" ed:height="24.5"><path d="M0,24.5L137,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.3.1.抽象类的作用</tspan></text></g><g id="1129" transform="matrix(1,0,0,1,777,10866)" ed:width="176" ed:parentid="1107" ed:height="24.5"><path d="M0,24.5L176,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.3.2.抽象方法和具体方法</tspan></text></g><g id="1131" transform="matrix(1,0,0,1,777,10897)" ed:width="246" ed:parentid="1107" ed:height="24.5"><path d="M0,24.5L246,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.3.3.用Java实现Coffee or Tea的例子</tspan></text></g><g id="1133" transform="matrix(1,0,0,1,777,11038)" ed:width="290" ed:parentid="1107" ed:height="24.5"><path d="M0,24.5L290,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">11.3.4.JavaScript没有抽象类的缺点和解决方案</tspan></text></g><g id="1135" transform="matrix(1,0,0,1,631,11836)" ed:width="126" ed:parentid="128" ed:height="24.5"><path d="M0,24.5L126,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">12.1.初识享元模式</tspan></text></g><g id="1137" transform="matrix(1,0,0,1,631,12050)" ed:width="165" ed:parentid="128" ed:height="24.5"><path d="M0,24.5L165,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">12.2.内部状态与外部状态</tspan></text></g><g id="1139" transform="matrix(1,0,0,1,631,12265)" ed:width="165" ed:parentid="128" ed:height="24.5"><path d="M0,24.5L165,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">12.3.享元模式的通用结构</tspan></text></g><g id="1141" transform="matrix(1,0,0,1,631,12427)" ed:width="139" ed:parentid="128" ed:height="24.5"><path d="M0,24.5L139,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">12.4.文件上传的例子</tspan></text></g><g id="1143" transform="matrix(1,0,0,1,631,12651)" ed:width="152" ed:parentid="128" ed:height="24.5"><path d="M0,24.5L152,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">12.5.享元模式的实用性</tspan></text></g><g id="1145" transform="matrix(1,0,0,1,631,12803)" ed:width="191" ed:parentid="128" ed:height="24.5"><path d="M0,24.5L191,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">12.6.再谈内部状态和外部状态</tspan></text></g><g id="1147" transform="matrix(1,0,0,1,631,12950)" ed:width="87" ed:parentid="128" ed:height="24.5"><path d="M0,24.5L87,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">12.7.对象池</tspan></text></g><g id="1149" transform="matrix(1,0,0,1,797,12342)" ed:width="81" ed:parentid="1141" ed:height="24.5"><path d="M0,24.5L81,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.对象爆炸</tspan></text></g><g id="1151" transform="matrix(1,0,0,1,797,12417)" ed:width="159" ed:parentid="1141" ed:height="24.5"><path d="M0,24.5L159,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.享元模式重构文件上传</tspan></text></g><g id="1153" transform="matrix(1,0,0,1,797,12486)" ed:width="107" ed:parentid="1141" ed:height="24.5"><path d="M0,24.5L107,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.剥离外部状态</tspan></text></g><g id="1155" transform="matrix(1,0,0,1,797,12527)" ed:width="146" ed:parentid="1141" ed:height="24.5"><path d="M0,24.5L146,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.工厂进行对象实例化</tspan></text></g><g id="1157" transform="matrix(1,0,0,1,797,12558)" ed:width="146" ed:parentid="1141" ed:height="24.5"><path d="M0,24.5L146,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.管理器封装外部状态</tspan></text></g><g id="1159" transform="matrix(1,0,0,1,849,12803)" ed:width="146" ed:parentid="1145" ed:height="24.5"><path d="M0,24.5L146,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.没有内部状态的享元</tspan></text></g><g id="1161" transform="matrix(1,0,0,1,849,12853)" ed:width="146" ed:parentid="1145" ed:height="24.5"><path d="M0,24.5L146,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.没有外部状态的享元</tspan></text></g><g id="1163" transform="matrix(1,0,0,1,745,12925)" ed:width="94" ed:parentid="1147" ed:height="24.5"><path d="M0,24.5L94,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.对象池实现</tspan></text></g><g id="1165" transform="matrix(1,0,0,1,745,12956)" ed:width="120" ed:parentid="1147" ed:height="24.5"><path d="M0,24.5L120,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.通用对象池实现</tspan></text></g><g id="1167" transform="matrix(1,0,0,1,631,13052)" ed:width="74" ed:parentid="128" ed:height="24.5"><path d="M0,24.5L74,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">12.8.小结</tspan></text></g><g id="1169" transform="matrix(1,0,0,1,647,13219)" ed:width="165" ed:parentid="130" ed:height="24.5"><path d="M0,24.5L165,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">13.1.现实中的职责链模式</tspan></text></g><g id="1171" transform="matrix(1,0,0,1,647,13275)" ed:width="191" ed:parentid="130" ed:height="24.5"><path d="M0,24.5L191,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">13.2.实际开发中的职责链模式</tspan></text></g><g id="1173" transform="matrix(1,0,0,1,647,13306)" ed:width="178" ed:parentid="130" ed:height="24.5"><path d="M0,24.5L178,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">13.3.用职责链模式重构代码</tspan></text></g><g id="1175" transform="matrix(1,0,0,1,647,13337)" ed:width="191" ed:parentid="130" ed:height="24.5"><path d="M0,24.5L191,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">13.4.灵活可拆分的职责链节点</tspan></text></g><g id="1177" transform="matrix(1,0,0,1,647,13403)" ed:width="126" ed:parentid="130" ed:height="24.5"><path d="M0,24.5L126,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">13.5.异步的职责链</tspan></text></g><g id="1181" transform="matrix(1,0,0,1,647,13578)" ed:width="165" ed:parentid="130" ed:height="24.5"><path d="M0,24.5L165,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">13.6.职责链模式的优缺点</tspan></text></g><g id="1183" transform="matrix(1,0,0,1,647,13743)" ed:width="154" ed:parentid="130" ed:height="24.5"><path d="M0,24.5L154,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">13.7.用AOP实现职责链</tspan></text></g><g id="1185" transform="matrix(1,0,0,1,647,13809)" ed:width="230" ed:parentid="130" ed:height="24.5"><path d="M0,24.5L230,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">13.8.用职责链模式获取文件上传对象</tspan></text></g><g id="1189" transform="matrix(1,0,0,1,647,13934)" ed:width="74" ed:parentid="130" ed:height="24.5"><path d="M0,24.5L74,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">13.9.小结</tspan></text></g><g id="1191" transform="matrix(1,0,0,1,647,14279)" ed:width="139" ed:parentid="132" ed:height="24.5"><path d="M0,24.5L139,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">14.1.现实中的中介者</tspan></text></g><g id="1193" transform="matrix(1,0,0,1,647,14429)" ed:width="229" ed:parentid="132" ed:height="24.5"><path d="M0,24.5L229,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">14.2.中介者模式的例子--泡泡堂游戏</tspan></text></g><g id="1195" transform="matrix(1,0,0,1,647,14610)" ed:width="190" ed:parentid="132" ed:height="24.5"><path d="M0,24.5L190,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">14.3.中介者的例子--购买商品</tspan></text></g><g id="1197" transform="matrix(1,0,0,1,647,14816)" ed:width="74" ed:parentid="132" ed:height="24.5"><path d="M0,24.5L74,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">14.4.小结</tspan></text></g><g id="1199" transform="matrix(1,0,0,1,903,14335)" ed:width="120" ed:parentid="1193" ed:height="24.5"><path d="M0,24.5L120,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.为游戏增加队伍</tspan></text></g><g id="1201" transform="matrix(1,0,0,1,903,14385)" ed:width="146" ed:parentid="1193" ed:height="24.5"><path d="M0,24.5L146,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.玩家增多带来的困扰</tspan></text></g><g id="1203" transform="matrix(1,0,0,1,903,14479)" ed:width="172" ed:parentid="1193" ed:height="24.5"><path d="M0,24.5L172,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.用中介者模式改造泡泡堂</tspan></text></g><g id="1205" transform="matrix(1,0,0,1,864,14564)" ed:width="107" ed:parentid="1195" ed:height="24.5"><path d="M0,24.5L107,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.开始编写代码</tspan></text></g><g id="1207" transform="matrix(1,0,0,1,864,14595)" ed:width="120" ed:parentid="1195" ed:height="24.5"><path d="M0,24.5L120,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.对象之间的联系</tspan></text></g><g id="1209" transform="matrix(1,0,0,1,864,14626)" ed:width="120" ed:parentid="1195" ed:height="24.5"><path d="M0,24.5L120,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.可能遇到的困难</tspan></text></g><g id="1211" transform="matrix(1,0,0,1,864,14657)" ed:width="94" ed:parentid="1195" ed:height="24.5"><path d="M0,24.5L94,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.引入中介者</tspan></text></g><g id="1213" transform="matrix(1,0,0,1,647,15124)" ed:width="256" ed:parentid="134" ed:height="24.5"><path d="M0,24.5L256,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">15.1.模拟传统面向对象语言的装饰者模式</tspan></text></g><g id="1215" transform="matrix(1,0,0,1,647,15208)" ed:width="152" ed:parentid="134" ed:height="24.5"><path d="M0,24.5L152,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">15.2.装饰者也是包装器</tspan></text></g><g id="1217" transform="matrix(1,0,0,1,647,15283)" ed:width="188" ed:parentid="134" ed:height="24.5"><path d="M0,24.5L188,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">15.3.回到JavaScript的装饰者</tspan></text></g><g id="1219" transform="matrix(1,0,0,1,647,15374)" ed:width="100" ed:parentid="134" ed:height="24.5"><path d="M0,24.5L100,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">15.4.装饰函数</tspan></text></g><g id="1221" transform="matrix(1,0,0,1,647,15533)" ed:width="141" ed:parentid="134" ed:height="24.5"><path d="M0,24.5L141,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">15.5.用AOP装饰函数</tspan></text></g><g id="1223" transform="matrix(1,0,0,1,647,15714)" ed:width="141" ed:parentid="134" ed:height="24.5"><path d="M0,24.5L141,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">15.6.AOP的应用实例</tspan></text></g><g id="1225" transform="matrix(1,0,0,1,815,15683)" ed:width="107" ed:parentid="1223" ed:height="24.5"><path d="M0,24.5L107,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.数据统计上报</tspan></text></g><g id="1227" transform="matrix(1,0,0,1,815,15714)" ed:width="187" ed:parentid="1223" ed:height="24.5"><path d="M0,24.5L187,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.用AOP动态改变函数的参数</tspan></text></g><g id="1229" transform="matrix(1,0,0,1,815,15755)" ed:width="133" ed:parentid="1223" ed:height="24.5"><path d="M0,24.5L133,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.插件式的表单验证</tspan></text></g><g id="1231" transform="matrix(1,0,0,1,647,15901)" ed:width="178" ed:parentid="134" ed:height="24.5"><path d="M0,24.5L178,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">15.7.装饰者模式和代理模式</tspan></text></g><g id="1233" transform="matrix(1,0,0,1,647,16007)" ed:width="74" ed:parentid="134" ed:height="24.5"><path d="M0,24.5L74,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">15.8.小结</tspan></text></g><g id="1235" transform="matrix(1,0,0,1,631,16199)" ed:width="126" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L126,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">16.1.初识状态模式</tspan></text></g><g id="1237" transform="matrix(1,0,0,1,631,16374)" ed:width="139" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L139,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">16.2.状态模式的定义</tspan></text></g><g id="1239" transform="matrix(1,0,0,1,631,16465)" ed:width="165" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L165,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">16.3.状态模式的通用结构</tspan></text></g><g id="1241" transform="matrix(1,0,0,1,631,16505)" ed:width="178" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L178,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">16.4.缺少抽象类的变通方式</tspan></text></g><g id="1243" transform="matrix(1,0,0,1,631,16627)" ed:width="229" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L229,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">16.5.另一个状态模式示例--文件上传</tspan></text></g><g id="1245" transform="matrix(1,0,0,1,631,16854)" ed:width="152" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L152,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">16.6.状态模式的优缺点</tspan></text></g><g id="1247" transform="matrix(1,0,0,1,631,17035)" ed:width="191" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L191,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">16.7.状态模式中的性能优化点</tspan></text></g><g id="1249" transform="matrix(1,0,0,1,631,17179)" ed:width="204" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L204,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">16.8.状态模式和策略模式的关系</tspan></text></g><g id="1251" transform="matrix(1,0,0,1,631,17308)" ed:width="188" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L188,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">16.9.JavaScript版本的状态机</tspan></text></g><g id="1253" transform="matrix(1,0,0,1,631,17377)" ed:width="173" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L173,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">16.10.表驱动的有限状态机</tspan></text></g><g id="1255" transform="matrix(1,0,0,1,631,17446)" ed:width="199" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L199,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">16.11.实际项目中的其他状态机</tspan></text></g><g id="1257" transform="matrix(1,0,0,1,631,17511)" ed:width="82" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L82,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">16.12.小结</tspan></text></g><g id="1259" transform="matrix(1,0,0,1,887,16596)" ed:width="133" ed:parentid="1243" ed:height="24.5"><path d="M0,24.5L133,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.更复杂的切换条件</tspan></text></g><g id="1261" transform="matrix(1,0,0,1,887,16627)" ed:width="107" ed:parentid="1243" ed:height="24.5"><path d="M0,24.5L107,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.一些准备工作</tspan></text></g><g id="1263" transform="matrix(1,0,0,1,887,16667)" ed:width="107" ed:parentid="1243" ed:height="24.5"><path d="M0,24.5L107,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.开始编写代码</tspan></text></g><g id="1265" transform="matrix(1,0,0,1,887,16708)" ed:width="159" ed:parentid="1243" ed:height="24.5"><path d="M0,24.5L159,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.状态模式重构文件上传</tspan></text></g><g id="1267" transform="matrix(1,0,0,1,647,17715)" ed:width="139" ed:parentid="138" ed:height="24.5"><path d="M0,24.5L139,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">17.1.现实中的适配器</tspan></text></g><g id="1269" transform="matrix(1,0,0,1,647,17746)" ed:width="152" ed:parentid="138" ed:height="24.5"><path d="M0,24.5L152,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">17.2.适配器模式的应用</tspan></text></g><g id="1271" transform="matrix(1,0,0,1,647,17868)" ed:width="74" ed:parentid="138" ed:height="24.5"><path d="M0,24.5L74,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">17.3.小结</tspan></text></g><g id="1273" transform="matrix(1,0,0,1,663,10342)" ed:width="161" ed:parentid="126" ed:height="24.5"><path d="M0,24.5L161,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一种基于继承的设计模式</tspan></text></g><g id="1275" transform="matrix(1,0,0,1,894,10373)" ed:width="382" ed:parentid="1103" ed:height="24.5"><path d="M0,24.5L382,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">模板方法模式是一种只需使用继承就可以实现的非常简单的模式</tspan></text></g><g id="1277" transform="matrix(1,0,0,1,894,10404)" ed:width="512" ed:parentid="1103" ed:height="24.5"><path d="M0,24.5L512,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">模板方法模式由两部分结构组成，第一部分是抽象父类，第二部分是具体的实现子类。</tspan></text></g><g id="1279" transform="matrix(1,0,0,1,894,10435)" ed:width="514" ed:parentid="1103" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">通常在抽象父类中封装了子类的算法框架，包括实现一些公共方法以及封装子类中所有</tspan><tspan x="8" style="white-space:pre" y="35.1">方法的执行顺序。子类通过继承这个抽象类，也继承了整个算法结构，并且可以选择重</tspan><tspan x="8" style="white-space:pre" y="54.1">写父类的方法</tspan></text></g><g id="1281" transform="matrix(1,0,0,1,1056,10566)" ed:width="504" ed:parentid="1123" ed:height="24.5"><path d="M0,24.5L504,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">都能整理为下面四步：1.把水煮沸；2.用沸水冲泡饮料；3.把饮料倒进杯子；4.加调料</tspan></text></g><g id="1283" transform="matrix(1,0,0,1,1131,10597)" ed:width="514" ed:parentid="1125" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Beverage.prototype.init被称为模板方法的原因是，该方法中封装了子类的算法框架，</tspan><tspan x="8" style="white-space:pre" y="35.1">它作为一个算法的模板，指导子类以何种顺序去执行哪些方法</tspan></text></g><g id="1285" transform="matrix(1,0,0,1,777,10647)" ed:width="369" ed:parentid="1107" ed:height="24.5"><path d="M0,24.5L369,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">首先要说明的是，模板方法是一种严重依赖抽象类的设计模式</tspan></text></g><g id="1287" transform="matrix(1,0,0,1,941,10678)" ed:width="514" ed:parentid="1127" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在Java中，类分为两种，一种为具体类，另一种为抽象类。具体类可以被实例化，抽象</tspan><tspan x="8" style="white-space:pre" y="35.1">类不能被实例化</tspan></text></g><g id="1289" transform="matrix(1,0,0,1,941,10728)" ed:width="514" ed:parentid="1127" ed:height="81.5"><path d="M0,81.5L514,81.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">抽象类和接口一样可以用于向上转型，在静态类型语言中，编译器对类型的检查总是一</tspan><tspan x="8" style="white-space:pre" y="35.1">个绕不过的话题与困扰。虽然类型检查可以提高程序的安全性，但繁琐而严格的类型检</tspan><tspan x="8" style="white-space:pre" y="54.1">查也时常会让程序员觉得麻烦。把对象的真正类型隐藏在抽象类或者接口之后，这些对</tspan><tspan x="8" style="white-space:pre" y="73.1">象才可以被互相替换使用。这可以让我们的Java程序尽量遵守依赖倒置原则</tspan></text></g><g id="1291" transform="matrix(1,0,0,1,941,10816)" ed:width="514" ed:parentid="1127" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">继承了这个抽象类的所有子类都将拥有跟抽象类一致的接口方法，抽象类的主要作用就</tspan><tspan x="8" style="white-space:pre" y="35.1">是为它的子类定义这些公共接口</tspan></text></g><g id="1293" transform="matrix(1,0,0,1,1094,10928)" ed:width="514" ed:parentid="1133" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript并没有从语法层面提供对抽象类的支持。抽象类的第一个作用是隐藏对象的</tspan><tspan x="8" style="white-space:pre" y="35.1">具体类型，由于JavaScript是一门”类型模糊“的语言，所以隐藏对象的类型在</tspan><tspan x="8" style="white-space:pre" y="54.1">JavaScript中并不重要</tspan></text></g><g id="1295" transform="matrix(1,0,0,1,1094,10997)" ed:width="514" ed:parentid="1133" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">另一方面，当我们在JavaScript中使用原型继承来模拟传统的类式继承时，并没有编译</tspan><tspan x="8" style="white-space:pre" y="35.1">器帮助我们进行任何形式的检查，我们也没有办法保证子类会重写父类中的”抽象方</tspan><tspan x="8" style="white-space:pre" y="54.1">法“</tspan></text></g><g id="1297" transform="matrix(1,0,0,1,1094,11066)" ed:width="514" ed:parentid="1133" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在Java中编译器会保证子类会重写父类中德抽象方法，但在JavaScript中却没有进行这</tspan><tspan x="8" style="white-space:pre" y="35.1">些检查工作</tspan></text></g><g id="1299" transform="matrix(1,0,0,1,1094,11132)" ed:width="135" ed:parentid="1133" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">两种变通的解决方案</tspan></text></g><g id="1301" transform="matrix(1,0,0,1,1256,11116)" ed:width="486" ed:parentid="1299" ed:height="24.5"><path d="M0,24.5L486,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">第一种方案是用鸭子类型来模拟接口检查，以便确保子类中确实重写了父类的方法</tspan></text></g><g id="1303" transform="matrix(1,0,0,1,1256,11147)" ed:width="400" ed:parentid="1299" ed:height="24.5"><path d="M0,24.5L400,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">第2种方案是让Beverage.prototype.brew等方法直接抛出一个异常</tspan></text></g><g id="1305" transform="matrix(1,0,0,1,881,11178)" ed:width="514" ed:parentid="1109" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">模板方法模式常被架构师用于搭建项目的框架，架构师定好了框架的骨架，程序员继承</tspan><tspan x="8" style="white-space:pre" y="35.1">框架的结构之后，负责往里面填空</tspan></text></g><g id="1307" transform="matrix(1,0,0,1,790,11228)" ed:width="514" ed:parentid="1111" ed:height="100.5"><path d="M0,100.5L514,100.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">钩子方法（hook）可以用来解决这个问题（让子类不受某个步骤的约束），放置钩子</tspan><tspan x="8" style="white-space:pre" y="35.1">是隔离变化的一种常见手段。我们在父类中容易变化的地方放置钩子，钩子可以有一个</tspan><tspan x="8" style="white-space:pre" y="54.1">默认的实现，究竟要不要”挂钩“，这由子类自行决定。钩子方法的返回结果决定了模</tspan><tspan x="8" style="white-space:pre" y="73.1">板方法后面部分的执行步骤，也就是程序接下来的走向，这样一来，程序就拥有了变化</tspan><tspan x="8" style="white-space:pre" y="92.1">的可能</tspan></text></g><g id="1309" transform="matrix(1,0,0,1,803,11335)" ed:width="265" ed:parentid="1113" ed:height="24.5"><path d="M0,24.5L265,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">好莱坞原则：不要来找我，我会给你打电话</tspan></text></g><g id="1311" transform="matrix(1,0,0,1,803,11366)" ed:width="514" ed:parentid="1113" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在这一原则的指导下，我们允许底层组件将自己挂钩到高层组件中，而高层组件会决定</tspan><tspan x="8" style="white-space:pre" y="35.1">什么时候，以何种方式去使用这些底层组件，高层组件对待底层组件的方式，跟演艺公</tspan><tspan x="8" style="white-space:pre" y="54.1">司对待新人演员一样，都是“别调用我们，我们会调用你”</tspan></text></g><g id="1313" transform="matrix(1,0,0,1,803,11435)" ed:width="514" ed:parentid="1113" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">当我们用模板方法模式编写一个程序时，就意味着子类放弃对自己的控制权，而是改用</tspan><tspan x="8" style="white-space:pre" y="35.1">父类通知子类，哪些方法应该在什么时候被调用</tspan></text></g><g id="1315" transform="matrix(1,0,0,1,803,11485)" ed:width="440" ed:parentid="1113" ed:height="24.5"><path d="M0,24.5L440,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">好莱坞原则还常常应用于其他模式和场景，例如发布-订阅模式和回调函数</tspan></text></g><g id="1317" transform="matrix(1,0,0,1,855,11516)" ed:width="514" ed:parentid="1115" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">模板方法模式是为数不多的基于继承的设计模式，但JavaScript语言实际上没有提供真</tspan><tspan x="8" style="white-space:pre" y="35.1">正的类式继承，继承是通过对象与对象之间的委托来实现的</tspan></text></g><g id="1319" transform="matrix(1,0,0,1,764,11566)" ed:width="408" ed:parentid="1117" ed:height="24.5"><path d="M0,24.5L408,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">模板方法模式是一种典型的通过封装变化提高系统扩展性的设计模式</tspan></text></g><g id="1321" transform="matrix(1,0,0,1,764,11597)" ed:width="514" ed:parentid="1117" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在传统的面向对象语言中，一个运用了模板方法模式的程序中，子类的方法种类和执行</tspan><tspan x="8" style="white-space:pre" y="35.1">顺序都是不变的，所以我们把这部分逻辑抽象到父类的模板方法里面</tspan></text></g><g id="1323" transform="matrix(1,0,0,1,764,11647)" ed:width="514" ed:parentid="1117" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">而子类的方法具体怎么实现则是可变的，于是我们把这部分变化的逻辑封装到子类中。</tspan><tspan x="8" style="white-space:pre" y="35.1">通过增加新的子类，我们便能给系统增加新的功能，并不需要改动抽象父类以及其他子</tspan><tspan x="8" style="white-space:pre" y="54.1">类，这也符合开放-封闭原则</tspan></text></g><g id="1325" transform="matrix(1,0,0,1,647,17634)" ed:width="70" ed:parentid="138" ed:height="24.5"><path d="M0,24.5L70,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">写在前面</tspan></text></g><g id="1327" transform="matrix(1,0,0,1,744,17584)" ed:width="369" ed:parentid="1325" ed:height="24.5"><path d="M0,24.5L369,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">适配器模式的作用是解决两个软件实体间的接口不兼容的问题</tspan></text></g><g id="1329" transform="matrix(1,0,0,1,744,17615)" ed:width="514" ed:parentid="1325" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在程序开发中有许多这样的场景：当我们试图调用模块或者对象的某个接口时，却发现</tspan><tspan x="8" style="white-space:pre" y="35.1">这个接口的格式并不符合目前的需求</tspan></text></g><g id="1331" transform="matrix(1,0,0,1,744,17665)" ed:width="514" ed:parentid="1325" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">两种解决办法，第一种是修改原来的接口实现，第二种办法是创建一个适配器，将原接</tspan><tspan x="8" style="white-space:pre" y="35.1">口转换为客户希望的另一个接口，客户只需要和适配器打交道</tspan></text></g><g id="1333" transform="matrix(1,0,0,1,813,17715)" ed:width="480" ed:parentid="1267" ed:height="24.5"><path d="M0,24.5L480,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">几个现实生活中的适配器模式：1.港式插头转换器；2.电源适配器；3.USB转接口</tspan></text></g><g id="1335" transform="matrix(1,0,0,1,826,17746)" ed:width="460" ed:parentid="1269" ed:height="24.5"><path d="M0,24.5L460,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">适配器模式是一种“亡羊补牢”的模式，没有人会在程序的设计之初就使用它</tspan></text></g><g id="1337" transform="matrix(1,0,0,1,748,17777)" ed:width="213" ed:parentid="1271" ed:height="24.5"><path d="M0,24.5L213,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">适配器模式是一种相对简单的模式</tspan></text></g><g id="1339" transform="matrix(1,0,0,1,748,17808)" ed:width="486" ed:parentid="1271" ed:height="24.5"><path d="M0,24.5L486,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">有一些模式跟适配器模式的结构非常相似，比如装饰者模式、代理模式和外观模式</tspan></text></g><g id="1341" transform="matrix(1,0,0,1,748,17839)" ed:width="514" ed:parentid="1271" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">适配器模式主要用来解决两个已有接口之间不匹配的问题，它不考虑这些接口是怎样实</tspan><tspan x="8" style="white-space:pre" y="35.1">现的，也不考虑它们将来可能会如何演化</tspan></text></g><g id="1343" transform="matrix(1,0,0,1,748,17889)" ed:width="514" ed:parentid="1271" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">装饰者模式和代理模式也不会改变原有对象的接口，但装饰者模式的作用是为了给对象</tspan><tspan x="8" style="white-space:pre" y="35.1">增加功能</tspan></text></g><g id="1345" transform="matrix(1,0,0,1,748,17939)" ed:width="514" ed:parentid="1271" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">外观模式的作用倒是和适配器模式比较相似，有人把外观模式看成一组对象的适配器，</tspan><tspan x="8" style="white-space:pre" y="35.1">但外观模式最显著的特点是定义了一个新的接口</tspan></text></g><g id="1347" transform="matrix(1,0,0,1,631,11774)" ed:width="70" ed:parentid="128" ed:height="24.5"><path d="M0,24.5L70,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">写在前面</tspan></text></g><g id="1349" transform="matrix(1,0,0,1,728,11743)" ed:width="308" ed:parentid="1347" ed:height="24.5"><path d="M0,24.5L308,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">享元（flyweight）模式是一种用于性能优化的模式</tspan></text></g><g id="1351" transform="matrix(1,0,0,1,728,11774)" ed:width="369" ed:parentid="1347" ed:height="24.5"><path d="M0,24.5L369,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">享元模式的核心是运用共享技术来有效支持大量细粒度的对象</tspan></text></g><g id="1353" transform="matrix(1,0,0,1,728,11805)" ed:width="499" ed:parentid="1347" ed:height="24.5"><path d="M0,24.5L499,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如果系统中因为创建了大量类似的对象而导致内存占用过高，享元模式就非常有用了</tspan></text></g><g id="1355" transform="matrix(1,0,0,1,784,11836)" ed:width="401" ed:parentid="1135" ed:height="24.5"><path d="M0,24.5L401,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">50种男士内衣和50种女士内衣穿在塑料模特上拍成广告照片的例子</tspan></text></g><g id="1357" transform="matrix(1,0,0,1,823,11867)" ed:width="486" ed:parentid="1137" ed:height="24.5"><path d="M0,24.5L486,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">享元模式要求将对象的属性划分为内部状态与外部状态（状态在这里通常指属性）</tspan></text></g><g id="1359" transform="matrix(1,0,0,1,823,11898)" ed:width="265" ed:parentid="1137" ed:height="24.5"><path d="M0,24.5L265,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">享元模式的目标是尽量减少共享对象的数量</tspan></text></g><g id="1361" transform="matrix(1,0,0,1,823,11975)" ed:width="278" ed:parentid="1137" ed:height="24.5"><path d="M0,24.5L278,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">关于如何划分内部状态和外部状态的几条经验</tspan></text></g><g id="1363" transform="matrix(1,0,0,1,1128,11929)" ed:width="161" ed:parentid="1361" ed:height="24.5"><path d="M0,24.5L161,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">内部状态存储于对象内部</tspan></text></g><g id="1365" transform="matrix(1,0,0,1,1128,11960)" ed:width="187" ed:parentid="1361" ed:height="24.5"><path d="M0,24.5L187,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">内部状态可以被一些对象共享</tspan></text></g><g id="1367" transform="matrix(1,0,0,1,1128,11991)" ed:width="265" ed:parentid="1361" ed:height="24.5"><path d="M0,24.5L265,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">内部状态独立于具体的场景，通常不会改变</tspan></text></g><g id="1369" transform="matrix(1,0,0,1,1128,12022)" ed:width="421" ed:parentid="1361" ed:height="24.5"><path d="M0,24.5L421,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">外部状态取决于具体的场景，并根据场景而变化，外部状态不能被共享</tspan></text></g><g id="1371" transform="matrix(1,0,0,1,823,12053)" ed:width="252" ed:parentid="1137" ed:height="24.5"><path d="M0,24.5L252,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">享元模式是一种用时间换空间的优化模式</tspan></text></g><g id="1373" transform="matrix(1,0,0,1,823,12084)" ed:width="395" ed:parentid="1137" ed:height="24.5"><path d="M0,24.5L395,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">通常来讲，内部状态有多少种组合，系统中便最多存在多少个对象</tspan></text></g><g id="1375" transform="matrix(1,0,0,1,823,12115)" ed:width="317" ed:parentid="1137" ed:height="24.5"><path d="M0,24.5L317,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">使用享元模式的关键时如何区别内部状态和外部状态</tspan></text></g><g id="1377" transform="matrix(1,0,0,1,823,12146)" ed:width="514" ed:parentid="1137" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可以被对象共享的属性通常被划分为内部状态，如同不管什么样式的衣服，都可以按照</tspan><tspan x="8" style="white-space:pre" y="35.1">性别不同，穿在同一个男模特或者女模特身上，模特的性别就可以作为内部状态储存在</tspan><tspan x="8" style="white-space:pre" y="54.1">共享对象的内部</tspan></text></g><g id="1379" transform="matrix(1,0,0,1,823,12215)" ed:width="514" ed:parentid="1137" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">外部状态取决于具体的场景，并根据场景而变化，就像例子中每件衣服都是不同的，它</tspan><tspan x="8" style="white-space:pre" y="35.1">们不能被一些对象共享，因此只能被划分为外部状态</tspan></text></g><g id="1381" transform="matrix(1,0,0,1,797,12296)" ed:width="395" ed:parentid="1141" ed:height="24.5"><path d="M0,24.5L395,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在微云上传模块的开发中，就曾经借助享元模式提升了程序的性能</tspan></text></g><g id="1383" transform="matrix(1,0,0,1,905,12327)" ed:width="476" ed:parentid="1149" ed:height="24.5"><path d="M0,24.5L476,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">支持同时选择2000个文件，每一个文件都对应着一个JavaScript上传对象的创建</tspan></text></g><g id="1385" transform="matrix(1,0,0,1,905,12358)" ed:width="361" ed:parentid="1149" ed:height="24.5"><path d="M0,24.5L361,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">支持好几种上传方式，比如浏览器插件、Flash和表单上传等</tspan></text></g><g id="1387" transform="matrix(1,0,0,1,983,12389)" ed:width="514" ed:parentid="1151" ed:height="81.5"><path d="M0,81.5L514,81.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">upload对象必须依赖uploadType属性才能工作，这是因为插件上传、Flash上传、表单</tspan><tspan x="8" style="white-space:pre" y="35.1">上传的实际工作原理有很大的区别，它们各自调用的接口也是完全不一样的，必须在对</tspan><tspan x="8" style="white-space:pre" y="54.1">象创建之初就明确它是什么类型的插件，才可以在程序的运行过程中，让它们分别调用</tspan><tspan x="8" style="white-space:pre" y="73.1">各自的start、pause、cancel、del等方法</tspan></text></g><g id="1389" transform="matrix(1,0,0,1,931,12477)" ed:width="514" ed:parentid="1153" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">明确了uploadType作为内部状态之后，再把其他的外部状态从构造函数中抽离出来，</tspan><tspan x="8" style="white-space:pre" y="35.1">Upload构造函数中只保留uploadType参数</tspan></text></g><g id="1391" transform="matrix(1,0,0,1,810,12589)" ed:width="291" ed:parentid="1143" ed:height="24.5"><path d="M0,24.5L291,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一般来说，以下情况发生时便可以使用享元模式</tspan></text></g><g id="1393" transform="matrix(1,0,0,1,810,12620)" ed:width="224" ed:parentid="1143" ed:height="24.5"><path d="M0,24.5L224,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.一个程序中使用了大量的相似对象</tspan></text></g><g id="1395" transform="matrix(1,0,0,1,810,12651)" ed:width="276" ed:parentid="1143" ed:height="24.5"><path d="M0,24.5L276,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.由于使用了大量对象，造成很大的内存开销</tspan></text></g><g id="1397" transform="matrix(1,0,0,1,810,12682)" ed:width="250" ed:parentid="1143" ed:height="24.5"><path d="M0,24.5L250,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.对象的大多数状态都可以变为外部状态</tspan></text></g><g id="1399" transform="matrix(1,0,0,1,810,12713)" ed:width="432" ed:parentid="1143" ed:height="24.5"><path d="M0,24.5L432,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.剥离出对象的外部状态之后，可以用相对较少的共享对象取代大量对象</tspan></text></g><g id="1401" transform="matrix(1,0,0,1,849,12744)" ed:width="514" ed:parentid="1145" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">有多少种内部状态的组合，系统中便最多存在多少个共享对象，而外部状态储存在共享</tspan><tspan x="8" style="white-space:pre" y="35.1">对象的外部，在必要时被传入共享对象来组装成一个完整的对象</tspan></text></g><g id="1403" transform="matrix(1,0,0,1,1022,12794)" ed:width="514" ed:parentid="1159" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">管理器部分的代码不需要改动，还是负责剥离和组装外部状态。可以看到，当对象没有</tspan><tspan x="8" style="white-space:pre" y="35.1">内部状态的时候，生产共享对象的工厂实际上变成了一个单例工厂</tspan></text></g><g id="1405" transform="matrix(1,0,0,1,1022,12844)" ed:width="514" ed:parentid="1161" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">享元模式的关键时区别内部状态和外部状态。享元模式的过程是剥离外部状态，并把外</tspan><tspan x="8" style="white-space:pre" y="35.1">部状态保存在其他地方，在合适的时刻再把外部状态组成进共享对象</tspan></text></g><g id="1407" transform="matrix(1,0,0,1,745,12894)" ed:width="440" ed:parentid="1147" ed:height="24.5"><path d="M0,24.5L440,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">对象池技术的应用非常广泛，HTTP连接池和数据库连接池都是其代表应用</tspan></text></g><g id="1411" transform="matrix(1,0,0,1,745,12987)" ed:width="514" ed:parentid="1147" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">对象池是另外一种性能优化方案，它跟享元模式有一些相似之处，但没有分离内部状态</tspan><tspan x="8" style="white-space:pre" y="35.1">和外部状态这个过程</tspan></text></g><g id="1413" transform="matrix(1,0,0,1,732,13037)" ed:width="252" ed:parentid="1167" ed:height="24.5"><path d="M0,24.5L252,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">享元模式是为了解决性能问题而生的模式</tspan></text></g><g id="1415" transform="matrix(1,0,0,1,732,13068)" ed:width="512" ed:parentid="1167" ed:height="24.5"><path d="M0,24.5L512,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在一个存在大量相似对象的系统中，享元模式可以很好的解决大量对象带来的性能问题</tspan></text></g><g id="1417" transform="matrix(1,0,0,1,647,13125)" ed:width="514" ed:parentid="130" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">职责链模式的定义是：使多个对象都有机会处理请求，从而避免请求的发送者和接收者</tspan><tspan x="8" style="white-space:pre" y="35.1">之间的耦合关系，将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象</tspan><tspan x="8" style="white-space:pre" y="54.1">处理它为止</tspan></text></g><g id="1419" transform="matrix(1,0,0,1,839,13194)" ed:width="109" ed:parentid="1169" ed:height="24.5"><path d="M0,24.5L109,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">公交车上递硬币</tspan></text></g><g id="1421" transform="matrix(1,0,0,1,839,13225)" ed:width="514" ed:parentid="1169" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">职责链模式的最大优点：请求发送者只需要知道链中的第一个节点，从而弱化了发送者</tspan><tspan x="8" style="white-space:pre" y="35.1">和一组接收者之间的强联系</tspan></text></g><g id="1423" transform="matrix(1,0,0,1,865,13275)" ed:width="118" ed:parentid="1171" ed:height="24.5"><path d="M0,24.5L118,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">if..else再套if..else</tspan></text></g><g id="1425" transform="matrix(1,0,0,1,852,13306)" ed:width="278" ed:parentid="1173" ed:height="24.5"><path d="M0,24.5L278,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">去掉嵌套的条件分支语句，拆分成多个小函数</tspan></text></g><g id="1431" transform="matrix(1,0,0,1,800,13368)" ed:width="514" ed:parentid="1177" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">遇到异步的问题，比如要在节点函数中发起一个ajax异步请求，异步请求返回的结果才</tspan><tspan x="8" style="white-space:pre" y="35.1">能决定是否继续在职责链中passRequest</tspan></text></g><g id="1433" transform="matrix(1,0,0,1,800,13418)" ed:width="514" ed:parentid="1177" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">异步的职责链加上命令模式（把ajax请求封装成命令对象），可以很方便的创建一个异</tspan><tspan x="8" style="white-space:pre" y="35.1">步ajax队列库</tspan></text></g><g id="1435" transform="matrix(1,0,0,1,839,13468)" ed:width="514" ed:parentid="1181" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">职责链模式的最大优点就是解耦了请求发送者和N个接收者之间的复杂关系，由于不知</tspan><tspan x="8" style="white-space:pre" y="35.1">道链中的哪个节点可以处理你发出的请求，所以你只需把请求传递给第一个节点即可</tspan></text></g><g id="1437" transform="matrix(1,0,0,1,839,13518)" ed:width="514" ed:parentid="1181" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">其次，使用了职责链模式之后，链中的节点对象可以灵活地拆分重组。增加或者删除一</tspan><tspan x="8" style="white-space:pre" y="35.1">个节点，或者改变节点在链中的位置都是轻而易举的事情</tspan></text></g><g id="1439" transform="matrix(1,0,0,1,839,13568)" ed:width="514" ed:parentid="1181" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">还有一个优点，那就是可以手动指定起始节点，请求并不是非得从链中的第一个节点开</tspan><tspan x="8" style="white-space:pre" y="35.1">始传递</tspan></text></g><g id="1441" transform="matrix(1,0,0,1,839,13618)" ed:width="382" ed:parentid="1181" ed:height="24.5"><path d="M0,24.5L382,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一个弊端，首先我们不能保证某个请求一定会被链中德节点处理</tspan></text></g><g id="1443" transform="matrix(1,0,0,1,839,13649)" ed:width="514" ed:parentid="1181" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">另外，职责链模式使得程序中多了一些节点对象，可能在某一次的请求传递过程中，大</tspan><tspan x="8" style="white-space:pre" y="35.1">部分节点并没有起到实质性的作用，它们的作用仅仅是让请求传递下去，从性能方面考</tspan><tspan x="8" style="white-space:pre" y="54.1">虑，要避免过长的职责链带来的性能损耗</tspan></text></g><g id="1445" transform="matrix(1,0,0,1,828,13718)" ed:width="405" ed:parentid="1183" ed:height="24.5"><path d="M0,24.5L405,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">利用JavaScript的函数式特性，有一种更加方便的方法来创建职责链</tspan></text></g><g id="1447" transform="matrix(1,0,0,1,828,13749)" ed:width="514" ed:parentid="1183" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">改写以下之前的Function.prototype.after函数，使得第一个函数返</tspan><tspan x="8" style="white-space:pre" y="35.1">回‘nextSuccessor’时，将请求继续传递给下一个函数</tspan></text></g><g id="1449" transform="matrix(1,0,0,1,904,13799)" ed:width="514" ed:parentid="1185" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">之前创建了一个迭代器来迭代获取合适的文件上传对象，其实用职责链模式可以更简</tspan><tspan x="8" style="white-space:pre" y="35.1">单，完全不用创建这个多余的迭代器</tspan></text></g><g id="1451" transform="matrix(1,0,0,1,748,13849)" ed:width="366" ed:parentid="1189" ed:height="24.5"><path d="M0,24.5L366,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在JavaScript开发中，职责链模式是最容易被忽视的模式之一</tspan></text></g><g id="1453" transform="matrix(1,0,0,1,748,13880)" ed:width="514" ed:parentid="1189" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">职责链模式可以很好的帮助我们管理代码，降低发起请求的对象和处理请求时的对象之</tspan><tspan x="8" style="white-space:pre" y="35.1">间的耦合性。职责链中的节点数量和顺序是可以自由变化的，我们可以在运行时决定链</tspan><tspan x="8" style="white-space:pre" y="54.1">中包含哪些节点</tspan></text></g><g id="1455" transform="matrix(1,0,0,1,748,13949)" ed:width="514" ed:parentid="1189" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">无论是作用域链、原型链，还是DOM节点中的事件冒泡，我们都能从中找到职责链模</tspan><tspan x="8" style="white-space:pre" y="35.1">式的影子</tspan></text></g><g id="1457" transform="matrix(1,0,0,1,748,13999)" ed:width="514" ed:parentid="1189" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">职责链还可以和组合模式结合在一起，用来连接部件和父部件，或是提高组合对象的效</tspan><tspan x="8" style="white-space:pre" y="35.1">率</tspan></text></g><g id="1459" transform="matrix(1,0,0,1,744,14076)" ed:width="514" ed:parentid="1461" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">面向对象设计鼓励将行为分布到各个对象中，把对象划分成更小的粒度，有助于增强对</tspan><tspan x="8" style="white-space:pre" y="35.1">象的可复用性，但由于这些细粒度对象之间的联系激增，又有可能会反过来降低它们的</tspan><tspan x="8" style="white-space:pre" y="54.1">可复用性</tspan></text></g><g id="1461" transform="matrix(1,0,0,1,647,14154)" ed:width="70" ed:parentid="132" ed:height="24.5"><path d="M0,24.5L70,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">写在前面</tspan></text></g><g id="1463" transform="matrix(1,0,0,1,744,14145)" ed:width="343" ed:parentid="1461" ed:height="24.5"><path d="M0,24.5L343,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">中介者模式的作用就是解除对象与对象之间的紧耦合关系</tspan></text></g><g id="1465" transform="matrix(1,0,0,1,744,14176)" ed:width="514" ed:parentid="1461" ed:height="81.5"><path d="M0,81.5L514,81.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">增加一个中介者对象后，所有的相关对象都通过中介者对象来通信，而不是互相引用，</tspan><tspan x="8" style="white-space:pre" y="35.1">所以当一个对象发生改变时，只需要通知中介者对象即可。中介者使各对象之间耦合松</tspan><tspan x="8" style="white-space:pre" y="54.1">散，而且可以独立的改变它们之间的交互。中介者模式使网状的多对多关系变成了相对</tspan><tspan x="8" style="white-space:pre" y="73.1">简单的一对多关系</tspan></text></g><g id="1467" transform="matrix(1,0,0,1,813,14264)" ed:width="94" ed:parentid="1191" ed:height="24.5"><path d="M0,24.5L94,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.机场指挥塔</tspan></text></g><g id="1469" transform="matrix(1,0,0,1,813,14295)" ed:width="81" ed:parentid="1191" ed:height="24.5"><path d="M0,24.5L81,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.博彩公司</tspan></text></g><g id="1471" transform="matrix(1,0,0,1,1050,14326)" ed:width="514" ed:parentid="1199" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">需要在每个玩家死亡的时候，都遍历其他队友的生存状况，如果队友全部死亡，则这局</tspan><tspan x="8" style="white-space:pre" y="35.1">游戏失败，同时敌人队伍的所有玩家都取得胜利</tspan></text></g><g id="1473" transform="matrix(1,0,0,1,1076,14376)" ed:width="514" ed:parentid="1201" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可以随意地为游戏增加玩家或者队伍，但问题是，每个玩家和其他玩家都是紧紧耦合在</tspan><tspan x="8" style="white-space:pre" y="35.1">一起的</tspan></text></g><g id="1475" transform="matrix(1,0,0,1,1102,14426)" ed:width="514" ed:parentid="1203" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">playerDirector开放一个对外暴露的接口receiveMessage，负责接收player对象发送的</tspan><tspan x="8" style="white-space:pre" y="35.1">消息，而player对象发送消息的时候，总是把自身this作为参数发送给</tspan><tspan x="8" style="white-space:pre" y="54.1">playerDirector，以便playerDirector识别消息来自于哪个玩家对象</tspan></text></g><g id="1477" transform="matrix(1,0,0,1,1102,14495)" ed:width="514" ed:parentid="1203" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">除了中介者本身，没有一个玩家知道其他任何玩家的存在，玩家与玩家之间的耦合关系</tspan><tspan x="8" style="white-space:pre" y="35.1">已经完全解除，某个玩家的任何操作都不需要通知其他玩家，而只需要给中介者发送一</tspan><tspan x="8" style="white-space:pre" y="54.1">个消息，中介者处理完消息之后会把处理结果反馈给其他的玩家对象</tspan></text></g><g id="1479" transform="matrix(1,0,0,1,748,14688)" ed:width="514" ed:parentid="1197" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">中介者模式是迎合迪米特法则的一种实现。迪米特法则也叫最少知识原则，是指一个对</tspan><tspan x="8" style="white-space:pre" y="35.1">象应该尽可能少地了解另外的对象（类似不和陌生人说话）</tspan></text></g><g id="1481" transform="matrix(1,0,0,1,748,14738)" ed:width="514" ed:parentid="1197" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在中介者模式里，对象之间几乎不知道彼此的存在，它们只能通过中介者对象来互相影</tspan><tspan x="8" style="white-space:pre" y="35.1">响对方</tspan></text></g><g id="1483" transform="matrix(1,0,0,1,748,14788)" ed:width="514" ed:parentid="1197" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">中介者模式使各个对象之间得以解耦，以中介者和对象之间的一对多关系取代了对象之</tspan><tspan x="8" style="white-space:pre" y="35.1">间的网状多对多关系。各个对象只需关注自身功能的实现，对象之间的交互关系交给了</tspan><tspan x="8" style="white-space:pre" y="54.1">中介者对象来实现和维护</tspan></text></g><g id="1485" transform="matrix(1,0,0,1,748,14857)" ed:width="514" ed:parentid="1197" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">最大的缺点是系统中会新增一个中介者对象，因为对象之间交互的复杂性，转移成了中</tspan><tspan x="8" style="white-space:pre" y="35.1">介者对象的复杂性，使得中介者对象经常是巨大的。中介者对象自身往往就是一个难以</tspan><tspan x="8" style="white-space:pre" y="54.1">维护的对象</tspan></text></g><g id="1487" transform="matrix(1,0,0,1,748,14926)" ed:width="514" ed:parentid="1197" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一般来说，如果对象之间的复杂耦合确实导致调用和维护出现了困难，而且这些耦合度</tspan><tspan x="8" style="white-space:pre" y="35.1">随项目的变化呈指数增长曲线，那我们就可以考虑用中介者模式来重构代码</tspan></text></g><g id="1489" transform="matrix(1,0,0,1,647,15043)" ed:width="70" ed:parentid="134" ed:height="24.5"><path d="M0,24.5L70,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">写在前面</tspan></text></g><g id="1491" transform="matrix(1,0,0,1,744,15002)" ed:width="486" ed:parentid="1489" ed:height="24.5"><path d="M0,24.5L486,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在程序开发中，许多时候都并不希望某个类天生就非常庞大，一次性包含许多职责</tspan></text></g><g id="1493" transform="matrix(1,0,0,1,744,15033)" ed:width="514" ed:parentid="1489" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">装饰者模式可以动态地给某个对象添加一些额外的职责，而不会影响从这个类中派生的</tspan><tspan x="8" style="white-space:pre" y="35.1">其他对象</tspan></text></g><g id="1495" transform="matrix(1,0,0,1,744,15083)" ed:width="499" ed:parentid="1489" ed:height="24.5"><path d="M0,24.5L499,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">装饰者模式能够在不改变对象自身的基础上，在程序运行期间给对象动态地添加职责</tspan></text></g><g id="1497" transform="matrix(1,0,0,1,930,15114)" ed:width="514" ed:parentid="1213" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">这种给对象动态增加职责的方式，并没有真正地改动对象自身，而是将对象放入另一个</tspan><tspan x="8" style="white-space:pre" y="35.1">对象之中，这些对象以一条链的方式进行引用，形成一个聚合对象</tspan></text></g><g id="1499" transform="matrix(1,0,0,1,826,15164)" ed:width="400" ed:parentid="1215" ed:height="24.5"><path d="M0,24.5L400,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">GoF原想把装饰者（decorator）模式称为包装器（wrapper）模式</tspan></text></g><g id="1501" transform="matrix(1,0,0,1,826,15195)" ed:width="514" ed:parentid="1215" ed:height="81.5"><path d="M0,81.5L514,81.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">从功能上而言，decorator能很好地描述这个模式，但从结构上看，wrapper的说法更</tspan><tspan x="8" style="white-space:pre" y="35.1">加贴切。装饰者模式将一个对象嵌入另一个对象之中，实际上相当于这个对象被另一个</tspan><tspan x="8" style="white-space:pre" y="54.1">对象包装起来，形成一条包装链。请求随着这条链依次传递到所有的对象，每个对象都</tspan><tspan x="8" style="white-space:pre" y="73.1">有处理这条请求的机会</tspan></text></g><g id="1503" transform="matrix(1,0,0,1,774,15314)" ed:width="514" ed:parentid="1219" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在JavaScript中可以很方便地给某个对象扩展属性和方法，但却很难在不改动某个函数</tspan><tspan x="8" style="white-space:pre" y="35.1">源代码的情况下，给该函数添加一些额外的功能。在代码的运行期间，我们很难切入某</tspan><tspan x="8" style="white-space:pre" y="54.1">个函数的执行环境</tspan></text></g><g id="1505" transform="matrix(1,0,0,1,774,15383)" ed:width="514" ed:parentid="1219" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">现在需要一个办法，在不改变函数源代码的情况下，能给函数增加功能，这正是开放-</tspan><tspan x="8" style="white-space:pre" y="35.1">封闭原则给我们指出的光明道路</tspan></text></g><g id="1507" transform="matrix(1,0,0,1,774,15433)" ed:width="330" ed:parentid="1219" ed:height="24.5"><path d="M0,24.5L330,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一种答案，通过保存原引用的方式就可以改写某个函数</tspan></text></g><g id="1511" transform="matrix(1,0,0,1,815,15464)" ed:width="446" ed:parentid="1221" ed:height="24.5"><path d="M0,24.5L446,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">首先给出Function.prototype.before方法和Function.prototype.after方法</tspan></text></g><g id="1513" transform="matrix(1,0,0,1,815,15495)" ed:width="514" ed:parentid="1221" ed:height="81.5"><path d="M0,81.5L514,81.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">把当前的this保存起来，这个this指向原函数，然后返回一个“代理”函数，这个“代</tspan><tspan x="8" style="white-space:pre" y="35.1">理”函数只是结构上像代理而已，并不承担代理的职责（比如控制对象的访问等）。它</tspan><tspan x="8" style="white-space:pre" y="54.1">的工作是把请求分别转发给新添加的函数和原函数，且负责保证它们的执行顺序，让新</tspan><tspan x="8" style="white-space:pre" y="73.1">添加的函数在原函数之前运行（前置装饰），这样就实现了动态装饰的效果</tspan></text></g><g id="1515" transform="matrix(1,0,0,1,815,15583)" ed:width="514" ed:parentid="1221" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Function.prototype.after的原理跟Function.prototype.before一模一样，唯一不同的</tspan><tspan x="8" style="white-space:pre" y="35.1">地方在于让新添加的函数在原函数执行之后再执行</tspan></text></g><g id="1517" transform="matrix(1,0,0,1,815,15633)" ed:width="514" ed:parentid="1223" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">不论是业务代码的编写，还是框架层面，我们都可以把行为依照职责分成粒度更细的函</tspan><tspan x="8" style="white-space:pre" y="35.1">数，随后通过装饰把它们合并到一起，这有助于我们编写一个松耦合和高复用性的系统</tspan></text></g><g id="1519" transform="matrix(1,0,0,1,949,15683)" ed:width="462" ed:parentid="1225" ed:height="24.5"><path d="M0,24.5L462,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">分离业务代码和数据统计代码，无论在什么语言中，都是AOP的经典应用之一</tspan></text></g><g id="1521" transform="matrix(1,0,0,1,1029,15714)" ed:width="431" ed:parentid="1227" ed:height="24.5"><path d="M0,24.5L431,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">解决CSRF攻击最简单的一个办法就是在HTTP请求中带上一个Token参数</tspan></text></g><g id="1523" transform="matrix(1,0,0,1,975,15745)" ed:width="514" ed:parentid="1229" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">分离校验输入和提交Ajax请求的代码，把校验输入的逻辑放到validata函数中，并且约</tspan><tspan x="8" style="white-space:pre" y="35.1">定当validata函数返回false的时候，表示校验未通过</tspan></text></g><g id="1525" transform="matrix(1,0,0,1,815,15795)" ed:width="499" ed:parentid="1223" ed:height="24.5"><path d="M0,24.5L499,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">这种装饰方式叠加了函数的作用域，如果装饰的链条过长，性能上也会受到一些影响</tspan></text></g><g id="1527" transform="matrix(1,0,0,1,852,15826)" ed:width="514" ed:parentid="1231" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">这两种模式都描述了怎样为对象提供一定程度上的间接引用，它们的实现部分都保留了</tspan><tspan x="8" style="white-space:pre" y="35.1">对另外一个对象的引用，并且向那个对象发送请求</tspan></text></g><g id="1529" transform="matrix(1,0,0,1,852,15876)" ed:width="514" ed:parentid="1231" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">代理模式的目的是，当直接访问本体不方便或者不符合需要时，为这个本体提供一个替</tspan><tspan x="8" style="white-space:pre" y="35.1">代者。本体定义了关键功能，而代理提供或拒绝对它的访问，或者在访问本体之前做一</tspan><tspan x="8" style="white-space:pre" y="54.1">些额外的事情</tspan></text></g><g id="1531" transform="matrix(1,0,0,1,852,15945)" ed:width="265" ed:parentid="1231" ed:height="24.5"><path d="M0,24.5L265,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">装饰者模式的作用就是为对象动态加入行为</tspan></text></g><g id="1533" transform="matrix(1,0,0,1,852,15976)" ed:width="505" ed:parentid="1231" ed:height="24.5"><path d="M0,24.5L505,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">代理模式通常只有一层代理-本体的引用，而装饰者模式经常会形成一条长长的装饰链</tspan></text></g><g id="1535" transform="matrix(1,0,0,1,631,16065)" ed:width="514" ed:parentid="136" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">状态模式的关键是区分事务内部的状态，事务内部状态的改变往往会带来事物的行为改</tspan><tspan x="8" style="white-space:pre" y="35.1">变</tspan></text></g><g id="1537" transform="matrix(1,0,0,1,784,16115)" ed:width="96" ed:parentid="1235" ed:height="24.5"><path d="M0,24.5L96,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">电灯灯光切换</tspan></text></g><g id="1539" transform="matrix(1,0,0,1,784,16146)" ed:width="514" ed:parentid="1235" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">通常我们谈到封装，一般都会优先封装对象的行为，而不是对象的状态。但在状态模式</tspan><tspan x="8" style="white-space:pre" y="35.1">中刚好相反，状态模式的关键是把事物每种状态都封装成单独的类，跟此种状态有关的</tspan><tspan x="8" style="white-space:pre" y="54.1">行为都被封装在这个类的内部</tspan></text></g><g id="1541" transform="matrix(1,0,0,1,784,16215)" ed:width="514" ed:parentid="1235" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">使用状态模式的好处很明显，它可以使一种状态和它对应的行为之间的关系局部化，这</tspan><tspan x="8" style="white-space:pre" y="35.1">些行为被分散和封装在各自对应的状态类之中，便于阅读和管理代码</tspan></text></g><g id="1543" transform="matrix(1,0,0,1,784,16265)" ed:width="514" ed:parentid="1235" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">另外，状态之间的切换都被分布在状态类内部，这使得我们无需编写过多的if、else条</tspan><tspan x="8" style="white-space:pre" y="35.1">件分支语言来控制状态之间的转换</tspan></text></g><g id="1545" transform="matrix(1,0,0,1,797,16315)" ed:width="514" ed:parentid="1237" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">GoF中对状态模式的定义：允许一个对象在其内部状态改变时改变它的行为，对象看起</tspan><tspan x="8" style="white-space:pre" y="35.1">来似乎修改了它的类</tspan></text></g><g id="1547" transform="matrix(1,0,0,1,797,16365)" ed:width="514" ed:parentid="1237" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">第一部分的意思是将状态封装成独立的类，并将请求委托给当前的状态对象，当对象的</tspan><tspan x="8" style="white-space:pre" y="35.1">内部状态改变时，会带来不同的行为变化</tspan></text></g><g id="1549" transform="matrix(1,0,0,1,797,16415)" ed:width="514" ed:parentid="1237" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">第二部分是从客户的角度来看，我们使用的对象，在不同的状态下具有截然不同的行</tspan><tspan x="8" style="white-space:pre" y="35.1">为，这个对象看起来是从不同的类中实例化而来的，实际上这是使用了委托的效果</tspan></text></g><g id="1551" transform="matrix(1,0,0,1,836,16496)" ed:width="514" ed:parentid="1241" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在Java中，所有的状态必须继承自一个State抽象父类，当然如果没有共同的功能值得</tspan><tspan x="8" style="white-space:pre" y="35.1">放入抽象父类中，也可以选择实现State接口</tspan></text></g><g id="1553" transform="matrix(1,0,0,1,887,16546)" ed:width="514" ed:parentid="1243" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">文件上传程序中有扫描、正在上传、暂停、上传成功、上传失败这几种状态，音乐播放</tspan><tspan x="8" style="white-space:pre" y="35.1">器可以分为加载中、正在播放、暂停、播放完毕这几种状态</tspan></text></g><g id="1555" transform="matrix(1,0,0,1,1021,16658)" ed:width="514" ed:parentid="1263" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">反例：这里的缺点是跟电灯例子中第一段代码一样，程序中充斥着if、else条件分支，</tspan><tspan x="8" style="white-space:pre" y="35.1">状态和行为都被耦合在一个巨大的方法中，我们很难修改和扩展这个状态机</tspan></text></g><g id="1557" transform="matrix(1,0,0,1,810,16804)" ed:width="135" ed:parentid="1245" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">状态模式的优点如下</tspan></text></g><g id="1559" transform="matrix(1,0,0,1,972,16739)" ed:width="514" ed:parentid="1557" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">状态模式定义了状态与行为之间的关系，并将它们封装在一个类里。通过增加新的状态</tspan><tspan x="8" style="white-space:pre" y="35.1">类，很容易增加新的状态和转换</tspan></text></g><g id="1561" transform="matrix(1,0,0,1,972,16789)" ed:width="514" ed:parentid="1557" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">避免Context无限膨胀，状态切换的逻辑被分布在状态类中，也去掉了Context中原本</tspan><tspan x="8" style="white-space:pre" y="35.1">过多的条件分支</tspan></text></g><g id="1563" transform="matrix(1,0,0,1,972,16839)" ed:width="395" ed:parentid="1557" ed:height="24.5"><path d="M0,24.5L395,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">用对象代替字符串来记录当前状态，使得状态的切换更加一目了然</tspan></text></g><g id="1565" transform="matrix(1,0,0,1,972,16870)" ed:width="483" ed:parentid="1557" ed:height="24.5"><path d="M0,24.5L483,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Context中的请求动作和状态类中封装的行为可以非常容易地独立变化而互不影响</tspan></text></g><g id="1569" transform="matrix(1,0,0,1,810,16935)" ed:width="109" ed:parentid="1245" ed:height="24.5"><path d="M0,24.5L109,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">状态模式的缺点</tspan></text></g><g id="1571" transform="matrix(1,0,0,1,946,16901)" ed:width="514" ed:parentid="1569" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">会在系统中定义许多状态类，编写20个状态类是一项枯燥乏味的工作，而且系统中会</tspan><tspan x="8" style="white-space:pre" y="35.1">因此而增加不少对象</tspan></text></g><g id="1573" transform="matrix(1,0,0,1,946,16951)" ed:width="514" ed:parentid="1569" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">由于逻辑分散在状态类中，虽然避开了不受欢迎的条件分支语句，但也造成了逻辑分散</tspan><tspan x="8" style="white-space:pre" y="35.1">的问题，我们无法在一个地方就看出整个状态机的逻辑</tspan></text></g><g id="1575" transform="matrix(1,0,0,1,849,17035)" ed:width="135" ed:parentid="1247" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一些比较大的优化点</tspan></text></g><g id="1577" transform="matrix(1,0,0,1,1011,17001)" ed:width="514" ed:parentid="1575" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">有两种选择来管理state对象的创建和销毁。第一种是仅当state对象被需要时才创建并</tspan><tspan x="8" style="white-space:pre" y="35.1">随后销毁，另一种是一开始就创建好所有的状态对象，并且始终不销毁它们</tspan></text></g><g id="1579" transform="matrix(1,0,0,1,1011,17051)" ed:width="514" ed:parentid="1575" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">为每个Context对象都创建了一组state对象，实际上这些state对象之间是可以共享</tspan><tspan x="8" style="white-space:pre" y="35.1">的，各Context对象可以共享一个state对象</tspan></text></g><g id="1583" transform="matrix(1,0,0,1,862,17101)" ed:width="514" ed:parentid="1249" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">状态模式和策略模式向一对双胞胎，它们都封装了一系列的算法或者行为，它们的类图</tspan><tspan x="8" style="white-space:pre" y="35.1">看起来几乎一模一样，但在意图上有很大不同</tspan></text></g><g id="1585" transform="matrix(1,0,0,1,862,17151)" ed:width="514" ed:parentid="1249" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">策略模式和状态模式的相同点是，它们都有一个上下文、一些策略或者状态类，上下文</tspan><tspan x="8" style="white-space:pre" y="35.1">把请求委托给这些类来执行</tspan></text></g><g id="1587" transform="matrix(1,0,0,1,862,17201)" ed:width="514" ed:parentid="1249" ed:height="81.5"><path d="M0,81.5L514,81.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">它们之间的区别是策略模式中的各个策略类之间是平等又平行的，它们之间没有任何联</tspan><tspan x="8" style="white-space:pre" y="35.1">系，所以客户必须熟知这些策略类的作用，以便客户可以随时主动切换算法；而在状态</tspan><tspan x="8" style="white-space:pre" y="54.1">模式中，状态和状态对应的行为是早已被封装好的，状态之间的切换也早被规定完</tspan><tspan x="8" style="white-space:pre" y="73.1">成，“改变行为”这件事发生在状态模式内部</tspan></text></g><g id="1589" transform="matrix(1,0,0,1,846,17289)" ed:width="514" ed:parentid="1251" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">状态模式是状态机的实现之一，但在JavaScript这种“无类”语言中，没有规定让状态</tspan><tspan x="8" style="white-space:pre" y="35.1">对象一定要从类中创建而来。另外一点，JavaScript可以非常方便地使用委托技术，并</tspan><tspan x="8" style="white-space:pre" y="54.1">不需要事先让一个对象持有另一个对象</tspan></text></g><g id="1591" transform="matrix(1,0,0,1,831,17358)" ed:width="514" ed:parentid="1253" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">另外一种实现状态机的方法，核心是基于表驱动的。可以在表中很清楚的看到下一个状</tspan><tspan x="8" style="white-space:pre" y="35.1">态是由当前状态和行为共同决定的。这样一来，我们就可以在表中查找状态，而不必定</tspan><tspan x="8" style="white-space:pre" y="54.1">义很多条件分支</tspan></text></g><g id="1593" transform="matrix(1,0,0,1,857,17427)" ed:width="514" ed:parentid="1255" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在实际开发中，很多场景都可以用状态机来模拟，比如一个下拉菜单在hover动作下有</tspan><tspan x="8" style="white-space:pre" y="35.1">显示、悬浮、隐藏等状态；一次TCP请求有建立连接、监听、关闭等状态；一个格斗游</tspan><tspan x="8" style="white-space:pre" y="54.1">戏中人物有攻击、防御、跳跃、跌倒等状态</tspan></text></g><g id="1595" transform="matrix(1,0,0,1,740,17496)" ed:width="239" ed:parentid="1257" ed:height="24.5"><path d="M0,24.5L239,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">状态模式也许是被大家低估的模式之一</tspan></text></g><g id="1597" transform="matrix(1,0,0,1,740,17527)" ed:width="421" ed:parentid="1257" ed:height="24.5"><path d="M0,24.5L421,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">实际上，通过状态模式重构代码之后，很多杂乱无章的代码会变得清晰</tspan></text></g><symbol id="plus"><path d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6z" fill="url(#lg1)"/><path stroke-width="0.7" d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6zM3,6L9,6M6,3L6,9" fill="none" stroke="#46a000"/></symbol><symbol id="minus"><path d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6z" fill="url(#lg1)"/><path stroke-width="0.7" d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6zM3,6L9,6" fill="none" stroke="#46a000"/></symbol><g transform="translate(370,10308)" ed:togtopicid="101"><use xlink:href="#minus"/></g><g transform="translate(680,1005)" ed:togtopicid="104"><use xlink:href="#minus"/></g><g transform="translate(650,2369)" ed:togtopicid="106"><use xlink:href="#minus"/></g><g transform="translate(637,3323)" ed:togtopicid="108"><use xlink:href="#minus"/></g><g transform="translate(589,4263)" ed:togtopicid="112"><use xlink:href="#minus"/></g><g transform="translate(589,5134)" ed:togtopicid="114"><use xlink:href="#minus"/></g><g transform="translate(589,6211)" ed:togtopicid="116"><use xlink:href="#minus"/></g><g transform="translate(605,6979)" ed:togtopicid="118"><use xlink:href="#minus"/></g><g transform="translate(621,7933)" ed:togtopicid="120"><use xlink:href="#minus"/></g><g transform="translate(589,8959)" ed:togtopicid="122"><use xlink:href="#minus"/></g><g transform="translate(589,9785)" ed:togtopicid="124"><use xlink:href="#minus"/></g><g transform="translate(637,11020)" ed:togtopicid="126"><use xlink:href="#minus"/></g><g transform="translate(605,12411)" ed:togtopicid="128"><use xlink:href="#minus"/></g><g transform="translate(621,13578)" ed:togtopicid="130"><use xlink:href="#minus"/></g><g transform="translate(621,14516)" ed:togtopicid="132"><use xlink:href="#minus"/></g><g transform="translate(621,15511)" ed:togtopicid="134"><use xlink:href="#minus"/></g><g transform="translate(605,16802)" ed:togtopicid="136"><use xlink:href="#minus"/></g><g transform="translate(621,17777)" ed:togtopicid="138"><use xlink:href="#minus"/></g><g transform="translate(776,18031)" ed:togtopicid="140"><use xlink:href="#minus"/></g><g transform="translate(637,18241)" ed:togtopicid="142"><use xlink:href="#minus"/></g><g transform="translate(637,18619)" ed:togtopicid="144"><use xlink:href="#minus"/></g><g transform="translate(644,19116)" ed:togtopicid="146"><use xlink:href="#minus"/></g><g transform="translate(701,19701)" ed:togtopicid="148"><use xlink:href="#minus"/></g><g transform="translate(621,20307)" ed:togtopicid="150"><use xlink:href="#minus"/></g><g transform="translate(734,4039)" ed:togtopicid="177"><use xlink:href="#minus"/></g><g transform="translate(840,18170)" ed:togtopicid="180"><use xlink:href="#minus"/></g><g transform="translate(816,18241)" ed:togtopicid="182"><use xlink:href="#minus"/></g><g transform="translate(814,18359)" ed:togtopicid="186"><use xlink:href="#minus"/></g><g transform="translate(829,18523)" ed:togtopicid="188"><use xlink:href="#minus"/></g><g transform="translate(868,18635)" ed:togtopicid="190"><use xlink:href="#minus"/></g><g transform="translate(881,18772)" ed:togtopicid="192"><use xlink:href="#minus"/></g><g transform="translate(863,18960)" ed:togtopicid="194"><use xlink:href="#minus"/></g><g transform="translate(784,19026)" ed:togtopicid="196"><use xlink:href="#minus"/></g><g transform="translate(888,19076)" ed:togtopicid="198"><use xlink:href="#minus"/></g><g transform="translate(810,19166)" ed:togtopicid="200"><use xlink:href="#minus"/></g><g transform="translate(881,19257)" ed:togtopicid="202"><use xlink:href="#minus"/></g><g transform="translate(855,19322)" ed:togtopicid="204"><use xlink:href="#minus"/></g><g transform="translate(880,19611)" ed:togtopicid="208"><use xlink:href="#minus"/></g><g transform="translate(830,19676)" ed:togtopicid="210"><use xlink:href="#minus"/></g><g transform="translate(1022,19773)" ed:togtopicid="212"><use xlink:href="#minus"/></g><g transform="translate(919,19879)" ed:togtopicid="214"><use xlink:href="#minus"/></g><g transform="translate(1025,19948)" ed:togtopicid="216"><use xlink:href="#minus"/></g><g transform="translate(748,20136)" ed:togtopicid="218"><use xlink:href="#minus"/></g><g transform="translate(813,20229)" ed:togtopicid="220"><use xlink:href="#minus"/></g><g transform="translate(852,20270)" ed:togtopicid="222"><use xlink:href="#minus"/></g><g transform="translate(774,20310)" ed:togtopicid="224"><use xlink:href="#minus"/></g><g transform="translate(891,20357)" ed:togtopicid="226"><use xlink:href="#minus"/></g><g transform="translate(891,20403)" ed:togtopicid="228"><use xlink:href="#minus"/></g><g transform="translate(797,20434)" ed:togtopicid="230"><use xlink:href="#minus"/></g><g transform="translate(787,20481)" ed:togtopicid="232"><use xlink:href="#minus"/></g><g transform="translate(800,20527)" ed:togtopicid="234"><use xlink:href="#minus"/></g><g transform="translate(734,18114)" ed:togtopicid="246"><use xlink:href="#minus"/></g><g transform="translate(989,18594)" ed:togtopicid="268"><use xlink:href="#minus"/></g><g transform="translate(976,18675)" ed:togtopicid="272"><use xlink:href="#minus"/></g><g transform="translate(1177,18700)" ed:togtopicid="276"><use xlink:href="#minus"/></g><g transform="translate(741,18879)" ed:togtopicid="288"><use xlink:href="#minus"/></g><g transform="translate(941,19495)" ed:togtopicid="314"><use xlink:href="#minus"/></g><g transform="translate(1316,19732)" ed:togtopicid="328"><use xlink:href="#minus"/></g><g transform="translate(890,294)" ed:togtopicid="376"><use xlink:href="#minus"/></g><g transform="translate(773,662)" ed:togtopicid="378"><use xlink:href="#minus"/></g><g transform="translate(773,1024)" ed:togtopicid="380"><use xlink:href="#minus"/></g><g transform="translate(991,1554)" ed:togtopicid="382"><use xlink:href="#minus"/></g><g transform="translate(1465,1535)" ed:togtopicid="442"><use xlink:href="#minus"/></g><g transform="translate(1095,1912)" ed:togtopicid="464"><use xlink:href="#minus"/></g><g transform="translate(739,2188)" ed:togtopicid="468"><use xlink:href="#minus"/></g><g transform="translate(783,2602)" ed:togtopicid="470"><use xlink:href="#minus"/></g><g transform="translate(878,2188)" ed:togtopicid="472"><use xlink:href="#minus"/></g><g transform="translate(878,2396)" ed:togtopicid="474"><use xlink:href="#minus"/></g><g transform="translate(966,2571)" ed:togtopicid="476"><use xlink:href="#minus"/></g><g transform="translate(966,2727)" ed:togtopicid="478"><use xlink:href="#minus"/></g><g transform="translate(1109,2066)" ed:togtopicid="482"><use xlink:href="#minus"/></g><g transform="translate(1051,2144)" ed:togtopicid="494"><use xlink:href="#minus"/></g><g transform="translate(1038,2200)" ed:togtopicid="498"><use xlink:href="#minus"/></g><g transform="translate(999,2265)" ed:togtopicid="504"><use xlink:href="#minus"/></g><g transform="translate(1268,2331)" ed:togtopicid="508"><use xlink:href="#minus"/></g><g transform="translate(1096,2687)" ed:togtopicid="526"><use xlink:href="#minus"/></g><g transform="translate(1170,2727)" ed:togtopicid="528"><use xlink:href="#minus"/></g><g transform="translate(730,3078)" ed:togtopicid="536"><use xlink:href="#minus"/></g><g transform="translate(756,3566)" ed:togtopicid="538"><use xlink:href="#minus"/></g><g transform="translate(886,2906)" ed:togtopicid="540"><use xlink:href="#minus"/></g><g transform="translate(899,2962)" ed:togtopicid="542"><use xlink:href="#minus"/></g><g transform="translate(899,3034)" ed:togtopicid="544"><use xlink:href="#minus"/></g><g transform="translate(925,3090)" ed:togtopicid="546"><use xlink:href="#minus"/></g><g transform="translate(925,3140)" ed:togtopicid="548"><use xlink:href="#minus"/></g><g transform="translate(899,3230)" ed:togtopicid="550"><use xlink:href="#minus"/></g><g transform="translate(938,3398)" ed:togtopicid="552"><use xlink:href="#minus"/></g><g transform="translate(951,3485)" ed:togtopicid="554"><use xlink:href="#minus"/></g><g transform="translate(940,3607)" ed:togtopicid="556"><use xlink:href="#minus"/></g><g transform="translate(951,3759)" ed:togtopicid="558"><use xlink:href="#minus"/></g><g transform="translate(1007,3018)" ed:togtopicid="570"><use xlink:href="#minus"/></g><g transform="translate(1048,3327)" ed:togtopicid="586"><use xlink:href="#minus"/></g><g transform="translate(1030,550)" ed:togtopicid="618"><use xlink:href="#minus"/></g><g transform="translate(942,631)" ed:togtopicid="622"><use xlink:href="#minus"/></g><g transform="translate(952,727)" ed:togtopicid="626"><use xlink:href="#minus"/></g><g transform="translate(1046,793)" ed:togtopicid="628"><use xlink:href="#minus"/></g><g transform="translate(942,843)" ed:togtopicid="630"><use xlink:href="#minus"/></g><g transform="translate(903,924)" ed:togtopicid="634"><use xlink:href="#minus"/></g><g transform="translate(903,989)" ed:togtopicid="636"><use xlink:href="#minus"/></g><g transform="translate(903,1080)" ed:togtopicid="638"><use xlink:href="#minus"/></g><g transform="translate(903,1155)" ed:togtopicid="640"><use xlink:href="#minus"/></g><g transform="translate(1186,1236)" ed:togtopicid="642"><use xlink:href="#minus"/></g><g transform="translate(1199,1286)" ed:togtopicid="644"><use xlink:href="#minus"/></g><g transform="translate(1133,1351)" ed:togtopicid="646"><use xlink:href="#minus"/></g><g transform="translate(1212,1494)" ed:togtopicid="648"><use xlink:href="#minus"/></g><g transform="translate(1209,1731)" ed:togtopicid="650"><use xlink:href="#minus"/></g><g transform="translate(747,4089)" ed:togtopicid="657"><use xlink:href="#minus"/></g><g transform="translate(773,4130)" ed:togtopicid="659"><use xlink:href="#minus"/></g><g transform="translate(796,4232)" ed:togtopicid="661"><use xlink:href="#minus"/></g><g transform="translate(708,4350)" ed:togtopicid="663"><use xlink:href="#minus"/></g><g transform="translate(747,4437)" ed:togtopicid="665"><use xlink:href="#minus"/></g><g transform="translate(682,4543)" ed:togtopicid="667"><use xlink:href="#minus"/></g><g transform="translate(786,4785)" ed:togtopicid="669"><use xlink:href="#minus"/></g><g transform="translate(809,4926)" ed:togtopicid="671"><use xlink:href="#minus"/></g><g transform="translate(812,5053)" ed:togtopicid="675"><use xlink:href="#minus"/></g><g transform="translate(760,5175)" ed:togtopicid="677"><use xlink:href="#minus"/></g><g transform="translate(708,5281)" ed:togtopicid="679"><use xlink:href="#minus"/></g><g transform="translate(760,5443)" ed:togtopicid="681"><use xlink:href="#minus"/></g><g transform="translate(799,5574)" ed:togtopicid="683"><use xlink:href="#minus"/></g><g transform="translate(682,5624)" ed:togtopicid="685"><use xlink:href="#minus"/></g><g transform="translate(831,5791)" ed:togtopicid="687"><use xlink:href="#minus"/></g><g transform="translate(773,5847)" ed:togtopicid="689"><use xlink:href="#minus"/></g><g transform="translate(799,5912)" ed:togtopicid="691"><use xlink:href="#minus"/></g><g transform="translate(721,5978)" ed:togtopicid="693"><use xlink:href="#minus"/></g><g transform="translate(799,6112)" ed:togtopicid="695"><use xlink:href="#minus"/></g><g transform="translate(792,6247)" ed:togtopicid="697"><use xlink:href="#minus"/></g><g transform="translate(825,6303)" ed:togtopicid="701"><use xlink:href="#minus"/></g><g transform="translate(708,6399)" ed:togtopicid="703"><use xlink:href="#minus"/></g><g transform="translate(799,6496)" ed:togtopicid="705"><use xlink:href="#minus"/></g><g transform="translate(739,6589)" ed:togtopicid="707"><use xlink:href="#minus"/></g><g transform="translate(690,6707)" ed:togtopicid="709"><use xlink:href="#minus"/></g><g transform="translate(930,4273)" ed:togtopicid="729"><use xlink:href="#minus"/></g><g transform="translate(982,4304)" ed:togtopicid="735"><use xlink:href="#minus"/></g><g transform="translate(907,4366)" ed:togtopicid="741"><use xlink:href="#minus"/></g><g transform="translate(909,4422)" ed:togtopicid="747"><use xlink:href="#minus"/></g><g transform="translate(948,4716)" ed:togtopicid="761"><use xlink:href="#minus"/></g><g transform="translate(1007,5022)" ed:togtopicid="777"><use xlink:href="#minus"/></g><g transform="translate(1007,5078)" ed:togtopicid="783"><use xlink:href="#minus"/></g><g transform="translate(981,5109)" ed:togtopicid="787"><use xlink:href="#minus"/></g><g transform="translate(916,5240)" ed:togtopicid="795"><use xlink:href="#minus"/></g><g transform="translate(929,5281)" ed:togtopicid="797"><use xlink:href="#minus"/></g><g transform="translate(948,5468)" ed:togtopicid="807"><use xlink:href="#minus"/></g><g transform="translate(940,6589)" ed:togtopicid="859"><use xlink:href="#minus"/></g><g transform="translate(778,6839)" ed:togtopicid="875"><use xlink:href="#minus"/></g><g transform="translate(815,6948)" ed:togtopicid="879"><use xlink:href="#minus"/></g><g transform="translate(737,7066)" ed:togtopicid="883"><use xlink:href="#minus"/></g><g transform="translate(737,7106)" ed:togtopicid="885"><use xlink:href="#minus"/></g><g transform="translate(802,7137)" ed:togtopicid="887"><use xlink:href="#minus"/></g><g transform="translate(698,7168)" ed:togtopicid="889"><use xlink:href="#minus"/></g><g transform="translate(824,7316)" ed:togtopicid="891"><use xlink:href="#minus"/></g><g transform="translate(811,7382)" ed:togtopicid="893"><use xlink:href="#minus"/></g><g transform="translate(748,7463)" ed:togtopicid="895"><use xlink:href="#minus"/></g><g transform="translate(753,7569)" ed:togtopicid="897"><use xlink:href="#minus"/></g><g transform="translate(837,7650)" ed:togtopicid="899"><use xlink:href="#minus"/></g><g transform="translate(779,7681)" ed:togtopicid="901"><use xlink:href="#minus"/></g><g transform="translate(811,7790)" ed:togtopicid="903"><use xlink:href="#minus"/></g><g transform="translate(811,7953)" ed:togtopicid="905"><use xlink:href="#minus"/></g><g transform="translate(753,8066)" ed:togtopicid="907"><use xlink:href="#minus"/></g><g transform="translate(813,8189)" ed:togtopicid="909"><use xlink:href="#minus"/></g><g transform="translate(920,8402)" ed:togtopicid="913"><use xlink:href="#minus"/></g><g transform="translate(722,8580)" ed:togtopicid="915"><use xlink:href="#minus"/></g><g transform="translate(973,7569)" ed:togtopicid="951"><use xlink:href="#minus"/></g><g transform="translate(747,8741)" ed:togtopicid="991"><use xlink:href="#minus"/></g><g transform="translate(805,8841)" ed:togtopicid="993"><use xlink:href="#minus"/></g><g transform="translate(796,8907)" ed:togtopicid="995"><use xlink:href="#minus"/></g><g transform="translate(708,8972)" ed:togtopicid="997"><use xlink:href="#minus"/></g><g transform="translate(708,9078)" ed:togtopicid="1001"><use xlink:href="#minus"/></g><g transform="translate(695,9128)" ed:togtopicid="1003"><use xlink:href="#minus"/></g><g transform="translate(682,9206)" ed:togtopicid="1007"><use xlink:href="#minus"/></g><g transform="translate(729,9363)" ed:togtopicid="1009"><use xlink:href="#minus"/></g><g transform="translate(755,9448)" ed:togtopicid="1011"><use xlink:href="#minus"/></g><g transform="translate(794,9523)" ed:togtopicid="1013"><use xlink:href="#minus"/></g><g transform="translate(755,9588)" ed:togtopicid="1015"><use xlink:href="#minus"/></g><g transform="translate(820,9717)" ed:togtopicid="1017"><use xlink:href="#minus"/></g><g transform="translate(794,9845)" ed:togtopicid="1019"><use xlink:href="#minus"/></g><g transform="translate(826,9920)" ed:togtopicid="1021"><use xlink:href="#minus"/></g><g transform="translate(781,10042)" ed:togtopicid="1023"><use xlink:href="#minus"/></g><g transform="translate(776,10175)" ed:togtopicid="1027"><use xlink:href="#minus"/></g><g transform="translate(698,10256)" ed:togtopicid="1029"><use xlink:href="#minus"/></g><g transform="translate(967,9986)" ed:togtopicid="1081"><use xlink:href="#minus"/></g><g transform="translate(967,10026)" ed:togtopicid="1085"><use xlink:href="#minus"/></g><g transform="translate(938,10175)" ed:togtopicid="1093"><use xlink:href="#minus"/></g><g transform="translate(868,10429)" ed:togtopicid="1103"><use xlink:href="#minus"/></g><g transform="translate(866,10566)" ed:togtopicid="1105"><use xlink:href="#minus"/></g><g transform="translate(751,10903)" ed:togtopicid="1107"><use xlink:href="#minus"/></g><g transform="translate(855,11194)" ed:togtopicid="1109"><use xlink:href="#minus"/></g><g transform="translate(764,11272)" ed:togtopicid="1111"><use xlink:href="#minus"/></g><g transform="translate(777,11416)" ed:togtopicid="1113"><use xlink:href="#minus"/></g><g transform="translate(829,11532)" ed:togtopicid="1115"><use xlink:href="#minus"/></g><g transform="translate(738,11632)" ed:togtopicid="1117"><use xlink:href="#minus"/></g><g transform="translate(1030,10572)" ed:togtopicid="1123"><use xlink:href="#minus"/></g><g transform="translate(1105,10613)" ed:togtopicid="1125"><use xlink:href="#minus"/></g><g transform="translate(915,10763)" ed:togtopicid="1127"><use xlink:href="#minus"/></g><g transform="translate(1068,11044)" ed:togtopicid="1133"><use xlink:href="#minus"/></g><g transform="translate(758,11842)" ed:togtopicid="1135"><use xlink:href="#minus"/></g><g transform="translate(797,12056)" ed:togtopicid="1137"><use xlink:href="#minus"/></g><g transform="translate(771,12433)" ed:togtopicid="1141"><use xlink:href="#minus"/></g><g transform="translate(784,12657)" ed:togtopicid="1143"><use xlink:href="#minus"/></g><g transform="translate(823,12809)" ed:togtopicid="1145"><use xlink:href="#minus"/></g><g transform="translate(719,12956)" ed:togtopicid="1147"><use xlink:href="#minus"/></g><g transform="translate(879,12348)" ed:togtopicid="1149"><use xlink:href="#minus"/></g><g transform="translate(957,12423)" ed:togtopicid="1151"><use xlink:href="#minus"/></g><g transform="translate(905,12492)" ed:togtopicid="1153"><use xlink:href="#minus"/></g><g transform="translate(996,12809)" ed:togtopicid="1159"><use xlink:href="#minus"/></g><g transform="translate(996,12859)" ed:togtopicid="1161"><use xlink:href="#minus"/></g><g transform="translate(706,13058)" ed:togtopicid="1167"><use xlink:href="#minus"/></g><g transform="translate(813,13225)" ed:togtopicid="1169"><use xlink:href="#minus"/></g><g transform="translate(839,13281)" ed:togtopicid="1171"><use xlink:href="#minus"/></g><g transform="translate(826,13312)" ed:togtopicid="1173"><use xlink:href="#minus"/></g><g transform="translate(774,13409)" ed:togtopicid="1177"><use xlink:href="#minus"/></g><g transform="translate(813,13584)" ed:togtopicid="1181"><use xlink:href="#minus"/></g><g transform="translate(802,13749)" ed:togtopicid="1183"><use xlink:href="#minus"/></g><g transform="translate(878,13815)" ed:togtopicid="1185"><use xlink:href="#minus"/></g><g transform="translate(722,13940)" ed:togtopicid="1189"><use xlink:href="#minus"/></g><g transform="translate(787,14285)" ed:togtopicid="1191"><use xlink:href="#minus"/></g><g transform="translate(877,14435)" ed:togtopicid="1193"><use xlink:href="#minus"/></g><g transform="translate(838,14616)" ed:togtopicid="1195"><use xlink:href="#minus"/></g><g transform="translate(722,14822)" ed:togtopicid="1197"><use xlink:href="#minus"/></g><g transform="translate(1024,14341)" ed:togtopicid="1199"><use xlink:href="#minus"/></g><g transform="translate(1050,14391)" ed:togtopicid="1201"><use xlink:href="#minus"/></g><g transform="translate(1076,14485)" ed:togtopicid="1203"><use xlink:href="#minus"/></g><g transform="translate(904,15130)" ed:togtopicid="1213"><use xlink:href="#minus"/></g><g transform="translate(800,15214)" ed:togtopicid="1215"><use xlink:href="#minus"/></g><g transform="translate(748,15380)" ed:togtopicid="1219"><use xlink:href="#minus"/></g><g transform="translate(789,15539)" ed:togtopicid="1221"><use xlink:href="#minus"/></g><g transform="translate(789,15720)" ed:togtopicid="1223"><use xlink:href="#minus"/></g><g transform="translate(923,15689)" ed:togtopicid="1225"><use xlink:href="#minus"/></g><g transform="translate(1003,15720)" ed:togtopicid="1227"><use xlink:href="#minus"/></g><g transform="translate(949,15761)" ed:togtopicid="1229"><use xlink:href="#minus"/></g><g transform="translate(826,15907)" ed:togtopicid="1231"><use xlink:href="#minus"/></g><g transform="translate(758,16205)" ed:togtopicid="1235"><use xlink:href="#minus"/></g><g transform="translate(771,16380)" ed:togtopicid="1237"><use xlink:href="#minus"/></g><g transform="translate(810,16511)" ed:togtopicid="1241"><use xlink:href="#minus"/></g><g transform="translate(861,16633)" ed:togtopicid="1243"><use xlink:href="#minus"/></g><g transform="translate(784,16860)" ed:togtopicid="1245"><use xlink:href="#minus"/></g><g transform="translate(823,17041)" ed:togtopicid="1247"><use xlink:href="#minus"/></g><g transform="translate(836,17185)" ed:togtopicid="1249"><use xlink:href="#minus"/></g><g transform="translate(820,17314)" ed:togtopicid="1251"><use xlink:href="#minus"/></g><g transform="translate(805,17383)" ed:togtopicid="1253"><use xlink:href="#minus"/></g><g transform="translate(831,17452)" ed:togtopicid="1255"><use xlink:href="#minus"/></g><g transform="translate(714,17517)" ed:togtopicid="1257"><use xlink:href="#minus"/></g><g transform="translate(995,16673)" ed:togtopicid="1263"><use xlink:href="#minus"/></g><g transform="translate(787,17721)" ed:togtopicid="1267"><use xlink:href="#minus"/></g><g transform="translate(800,17752)" ed:togtopicid="1269"><use xlink:href="#minus"/></g><g transform="translate(722,17874)" ed:togtopicid="1271"><use xlink:href="#minus"/></g><g transform="translate(1230,11138)" ed:togtopicid="1299"><use xlink:href="#minus"/></g><g transform="translate(718,17640)" ed:togtopicid="1325"><use xlink:href="#minus"/></g><g transform="translate(702,11780)" ed:togtopicid="1347"><use xlink:href="#minus"/></g><g transform="translate(1102,11981)" ed:togtopicid="1361"><use xlink:href="#minus"/></g><g transform="translate(718,14160)" ed:togtopicid="1461"><use xlink:href="#minus"/></g><g transform="translate(718,15049)" ed:togtopicid="1489"><use xlink:href="#minus"/></g><g transform="translate(946,16810)" ed:togtopicid="1557"><use xlink:href="#minus"/></g><g transform="translate(920,16941)" ed:togtopicid="1569"><use xlink:href="#minus"/></g><g transform="translate(985,17041)" ed:togtopicid="1575"><use xlink:href="#minus"/></g></svg>