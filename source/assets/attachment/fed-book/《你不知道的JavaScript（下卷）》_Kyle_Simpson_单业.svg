<svg id="page100" xmlns:ed="https://www.edrawsoft.cn/xml/2017/SVGExtensions/" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ev="http://www.w3.org/2001/xml-events" width="1546" xmlns="http://www.w3.org/2000/svg" ed:hSpacing="30" ed:vSpacing="30" viewBox="0 0 1546 13757" height="13757" ed:name="Page-1"><style type="text/css"><![CDATA[
g[ed\:togtopicid],g[ed\:hyperlink],g[ed\:comment],g[ed\:note] {cursor:pointer;}
g[id] {-moz-user-select: none;-ms-user-select: none;user-select: none;}
svg text::selection,svg tspan::selection{background-color: #4285f4;color: #ffffff;fill: #ffffff;}
.st2 {fill:#303030;font-family:微软雅黑;font-size:12pt}
.st3 {fill:#454545;font-family:微软雅黑;font-size:10pt}
.st1 {fill:#ffffff;font-family:微软雅黑;font-size:14pt}
]]></style><defs><linearGradient x1="0%" id="lg1" x2="0%" y1="0%" y2="100%"><stop offset="0" stop-color="#ffffff"/><stop offset="0.25" stop-color="#f0f5f0"/><stop offset="0.75" stop-color="#e1ebe1"/><stop offset="1" stop-color="#c8d7c8"/></linearGradient></defs><rect x="0" width="1546" fill="#ffffff" y="0" height="13757"/><path id="103" d="M-100.5,3339.4C35.2,2865.2,-109,-3367.9,118,-3367.9" transform="matrix(1,0,0,1,314,3511)" fill="none" ed:tosuperid="102" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="105" d="M-97.6,2383.4C33.1,1987,-107.4,-2411.9,118,-2411.9" transform="matrix(1,0,0,1,314,4467)" fill="none" ed:tosuperid="104" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="107" d="M-84,738.9C23.1,529.1,-98.9,-767.4,118,-767.4" transform="matrix(1,0,0,1,314,6111)" fill="none" ed:tosuperid="106" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="109" d="M-69.2,-242.4C6.2,-130.7,-54.5,270.9,118,270.9" transform="matrix(1,0,0,1,314,7149)" fill="none" ed:tosuperid="108" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="111" d="M-86,-855.4C24.6,-627.9,-100.2,883.9,118,883.9" transform="matrix(1,0,0,1,314,7762)" fill="none" ed:tosuperid="110" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="113" d="M-93.9,-1636.4C30.4,-1312.4,-105.2,1664.9,118,1664.9" transform="matrix(1,0,0,1,314,8543)" fill="none" ed:tosuperid="112" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="115" d="M-98.2,-2548.4C33.6,-2137.6,-107.7,2576.9,118,2576.9" transform="matrix(1,0,0,1,314,9455)" fill="none" ed:tosuperid="114" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="117" d="M-100.2,-3210.1C35,-2745.7,-108.8,3238.6,118,3238.6" transform="matrix(1,0,0,1,314,10117)" fill="none" ed:tosuperid="116" stroke-linecap="round" stroke="#696969" ed:parentid="101" stroke-linejoin="round"/><path id="119" d="M-13.5,14.1C0.5,14.1,-2.1,-14.1,13.5,-14.1" transform="matrix(1,0,0,1,645,129)" fill="none" ed:tosuperid="118" stroke-linecap="round" stroke="#696969" ed:parentid="102" stroke-linejoin="round"/><path id="121" d="M-13.5,-23.4C2.4,-23.4,-6.5,23.4,13.5,23.4" transform="matrix(1,0,0,1,645,166)" fill="none" ed:tosuperid="120" stroke-linecap="round" stroke="#696969" ed:parentid="102" stroke-linejoin="round"/><path id="123" d="M-13.5,-60.9C5.4,-60.9,-13.5,60.9,13.5,60.9" transform="matrix(1,0,0,1,645,204)" fill="none" ed:tosuperid="122" stroke-linecap="round" stroke="#696969" ed:parentid="102" stroke-linejoin="round"/><path id="125" d="M-13.5,757.4C5.4,757.4,-13.5,-757.4,13.5,-757.4" transform="matrix(1,0,0,1,563,1297)" fill="none" ed:tosuperid="124" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="127" d="M-13.5,615.6C5.4,615.6,-13.5,-615.6,13.5,-615.6" transform="matrix(1,0,0,1,563,1439)" fill="none" ed:tosuperid="126" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="129" d="M-13.5,537.6C5.4,537.6,-13.5,-537.6,13.5,-537.6" transform="matrix(1,0,0,1,563,1517)" fill="none" ed:tosuperid="128" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="131" d="M-13.5,436.4C5.4,436.4,-13.5,-436.4,13.5,-436.4" transform="matrix(1,0,0,1,563,1618)" fill="none" ed:tosuperid="130" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="133" d="M-13.5,347.6C5.4,347.6,-13.5,-347.6,13.5,-347.6" transform="matrix(1,0,0,1,563,1707)" fill="none" ed:tosuperid="132" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="135" d="M-13.5,255.9C5.4,255.9,-13.5,-255.9,13.5,-255.9" transform="matrix(1,0,0,1,563,1799)" fill="none" ed:tosuperid="134" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="137" d="M-13.5,145.6C5.4,145.6,-13.5,-145.6,13.5,-145.6" transform="matrix(1,0,0,1,563,1909)" fill="none" ed:tosuperid="136" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="139" d="M-13.5,0.9C-2.7,0.9,5.4,-0.9,13.5,-0.9" transform="matrix(1,0,0,1,563,2054)" fill="none" ed:tosuperid="138" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="141" d="M-13.5,-122.4C5.4,-122.4,-13.5,122.4,13.5,122.4" transform="matrix(1,0,0,1,563,2177)" fill="none" ed:tosuperid="140" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="143" d="M-13.5,-265.9C5.4,-265.9,-13.5,265.9,13.5,265.9" transform="matrix(1,0,0,1,563,2321)" fill="none" ed:tosuperid="142" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="145" d="M-13.5,-384.4C5.4,-384.4,-13.5,384.4,13.5,384.4" transform="matrix(1,0,0,1,563,2439)" fill="none" ed:tosuperid="144" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="147" d="M-13.5,-482.6C5.4,-482.6,-13.5,482.6,13.5,482.6" transform="matrix(1,0,0,1,563,2537)" fill="none" ed:tosuperid="146" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="149" d="M-13.5,-702.4C5.4,-702.4,-13.5,702.4,13.5,702.4" transform="matrix(1,0,0,1,563,2757)" fill="none" ed:tosuperid="148" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="151" d="M-13.5,-861.4C5.4,-861.4,-13.5,861.4,13.5,861.4" transform="matrix(1,0,0,1,563,2916)" fill="none" ed:tosuperid="150" stroke-linecap="round" stroke="#696969" ed:parentid="104" stroke-linejoin="round"/><path id="153" d="M-13.5,648.4C5.4,648.4,-13.5,-648.4,13.5,-648.4" transform="matrix(1,0,0,1,595,4695)" fill="none" ed:tosuperid="152" stroke-linecap="round" stroke="#696969" ed:parentid="106" stroke-linejoin="round"/><path id="155" d="M-13.5,307.1C5.4,307.1,-13.5,-307.1,13.5,-307.1" transform="matrix(1,0,0,1,595,5037)" fill="none" ed:tosuperid="154" stroke-linecap="round" stroke="#696969" ed:parentid="106" stroke-linejoin="round"/><path id="157" d="M-13.5,-203.9C5.4,-203.9,-13.5,203.9,13.5,203.9" transform="matrix(1,0,0,1,595,5548)" fill="none" ed:tosuperid="156" stroke-linecap="round" stroke="#696969" ed:parentid="106" stroke-linejoin="round"/><path id="159" d="M-13.5,-563.6C5.4,-563.6,-13.5,563.6,13.5,563.6" transform="matrix(1,0,0,1,595,5907)" fill="none" ed:tosuperid="158" stroke-linecap="round" stroke="#696969" ed:parentid="106" stroke-linejoin="round"/><path id="161" d="M-13.5,-707.1C5.4,-707.1,-13.5,707.1,13.5,707.1" transform="matrix(1,0,0,1,595,6051)" fill="none" ed:tosuperid="160" stroke-linecap="round" stroke="#696969" ed:parentid="106" stroke-linejoin="round"/><path id="163" d="M-13.5,48.6C5.3,48.6,-13.3,-48.6,13.5,-48.6" transform="matrix(1,0,0,1,611,7372)" fill="none" ed:tosuperid="162" stroke-linecap="round" stroke="#696969" ed:parentid="108" stroke-linejoin="round"/><path id="165" d="M-13.5,-180.1C5.4,-180.1,-13.5,180.1,13.5,180.1" transform="matrix(1,0,0,1,611,7600)" fill="none" ed:tosuperid="164" stroke-linecap="round" stroke="#696969" ed:parentid="108" stroke-linejoin="round"/><path id="167" d="M-13.5,-250.4C5.4,-250.4,-13.5,250.4,13.5,250.4" transform="matrix(1,0,0,1,611,7671)" fill="none" ed:tosuperid="166" stroke-linecap="round" stroke="#696969" ed:parentid="108" stroke-linejoin="round"/><path id="169" d="M-13.5,165.4C5.4,165.4,-13.5,-165.4,13.5,-165.4" transform="matrix(1,0,0,1,563,8481)" fill="none" ed:tosuperid="168" stroke-linecap="round" stroke="#696969" ed:parentid="110" stroke-linejoin="round"/><path id="171" d="M-13.5,15.9C0.9,15.9,-3,-15.9,13.5,-15.9" transform="matrix(1,0,0,1,563,8630)" fill="none" ed:tosuperid="170" stroke-linecap="round" stroke="#696969" ed:parentid="110" stroke-linejoin="round"/><path id="173" d="M-13.5,-85.4C5.4,-85.4,-13.5,85.4,13.5,85.4" transform="matrix(1,0,0,1,563,8732)" fill="none" ed:tosuperid="172" stroke-linecap="round" stroke="#696969" ed:parentid="110" stroke-linejoin="round"/><path id="175" d="M-13.5,-161.6C5.4,-161.6,-13.5,161.6,13.5,161.6" transform="matrix(1,0,0,1,563,8808)" fill="none" ed:tosuperid="174" stroke-linecap="round" stroke="#696969" ed:parentid="110" stroke-linejoin="round"/><path id="177" d="M-13.5,-217.6C5.4,-217.6,-13.5,217.6,13.5,217.6" transform="matrix(1,0,0,1,563,8864)" fill="none" ed:tosuperid="176" stroke-linecap="round" stroke="#696969" ed:parentid="110" stroke-linejoin="round"/><path id="179" d="M-13.5,-284.9C5.4,-284.9,-13.5,284.9,13.5,284.9" transform="matrix(1,0,0,1,563,8931)" fill="none" ed:tosuperid="178" stroke-linecap="round" stroke="#696969" ed:parentid="110" stroke-linejoin="round"/><path id="181" d="M-13.5,219.6C5.4,219.6,-13.5,-219.6,13.5,-219.6" transform="matrix(1,0,0,1,589,9989)" fill="none" ed:tosuperid="180" stroke-linecap="round" stroke="#696969" ed:parentid="112" stroke-linejoin="round"/><path id="183" d="M-13.5,-71.1C5.4,-71.1,-13.5,71.1,13.5,71.1" transform="matrix(1,0,0,1,589,10279)" fill="none" ed:tosuperid="182" stroke-linecap="round" stroke="#696969" ed:parentid="112" stroke-linejoin="round"/><path id="185" d="M-13.5,-153.4C5.4,-153.4,-13.5,153.4,13.5,153.4" transform="matrix(1,0,0,1,589,10362)" fill="none" ed:tosuperid="184" stroke-linecap="round" stroke="#696969" ed:parentid="112" stroke-linejoin="round"/><path id="187" d="M-13.5,-243.9C5.4,-243.9,-13.5,243.9,13.5,243.9" transform="matrix(1,0,0,1,589,10452)" fill="none" ed:tosuperid="186" stroke-linecap="round" stroke="#696969" ed:parentid="112" stroke-linejoin="round"/><path id="189" d="M-13.5,-379.6C5.4,-379.6,-13.5,379.6,13.5,379.6" transform="matrix(1,0,0,1,589,10588)" fill="none" ed:tosuperid="188" stroke-linecap="round" stroke="#696969" ed:parentid="112" stroke-linejoin="round"/><path id="191" d="M-13.5,-440.4C5.4,-440.4,-13.5,440.4,13.5,440.4" transform="matrix(1,0,0,1,589,10649)" fill="none" ed:tosuperid="190" stroke-linecap="round" stroke="#696969" ed:parentid="112" stroke-linejoin="round"/><path id="193" d="M-13.5,372.6C5.4,372.6,-13.5,-372.6,13.5,-372.6" transform="matrix(1,0,0,1,579,11660)" fill="none" ed:tosuperid="192" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="195" d="M-13.5,339.9C5.4,339.9,-13.5,-339.9,13.5,-339.9" transform="matrix(1,0,0,1,579,11692)" fill="none" ed:tosuperid="194" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="197" d="M-13.5,199.4C5.4,199.4,-13.5,-199.4,13.5,-199.4" transform="matrix(1,0,0,1,579,11833)" fill="none" ed:tosuperid="196" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="199" d="M-13.5,-22.1C2.2,-22.1,-5.9,22.1,13.5,22.1" transform="matrix(1,0,0,1,579,12054)" fill="none" ed:tosuperid="198" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="201" d="M-13.5,-202.6C5.4,-202.6,-13.5,202.6,13.5,202.6" transform="matrix(1,0,0,1,579,12235)" fill="none" ed:tosuperid="200" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="203" d="M-13.5,-302.1C5.4,-302.1,-13.5,302.1,13.5,302.1" transform="matrix(1,0,0,1,579,12334)" fill="none" ed:tosuperid="202" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="205" d="M-13.5,-384.9C5.4,-384.9,-13.5,384.9,13.5,384.9" transform="matrix(1,0,0,1,579,12417)" fill="none" ed:tosuperid="204" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="207" d="M-13.5,-455.1C5.4,-455.1,-13.5,455.1,13.5,455.1" transform="matrix(1,0,0,1,579,12487)" fill="none" ed:tosuperid="206" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="209" d="M-13.5,127.9C5.4,127.9,-13.5,-127.9,13.5,-127.9" transform="matrix(1,0,0,1,590,13228)" fill="none" ed:tosuperid="208" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="211" d="M-13.5,46.9C5.2,46.9,-13.1,-46.9,13.5,-46.9" transform="matrix(1,0,0,1,590,13309)" fill="none" ed:tosuperid="210" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="213" d="M-13.5,-9.1C-0.6,-9.1,0.4,9.1,13.5,9.1" transform="matrix(1,0,0,1,590,13365)" fill="none" ed:tosuperid="212" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="215" d="M-13.5,-24.6C2.6,-24.6,-7,24.6,13.5,24.6" transform="matrix(1,0,0,1,590,13380)" fill="none" ed:tosuperid="214" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="217" d="M-13.5,-52.6C5.4,-52.6,-13.5,52.6,13.5,52.6" transform="matrix(1,0,0,1,590,13408)" fill="none" ed:tosuperid="216" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="219" d="M-13.5,-80.6C5.4,-80.6,-13.5,80.6,13.5,80.6" transform="matrix(1,0,0,1,590,13436)" fill="none" ed:tosuperid="218" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="221" d="M-13.5,-135.4C5.4,-135.4,-13.5,135.4,13.5,135.4" transform="matrix(1,0,0,1,590,13491)" fill="none" ed:tosuperid="220" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="223" d="M-13.5,-190.1C5.4,-190.1,-13.5,190.1,13.5,190.1" transform="matrix(1,0,0,1,590,13546)" fill="none" ed:tosuperid="222" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="225" d="M-13.5,29.6C3.4,29.6,-8.9,-29.6,13.5,-29.6" transform="matrix(1,0,0,1,645,113)" fill="none" ed:tosuperid="224" stroke-linecap="round" stroke="#696969" ed:parentid="102" stroke-linejoin="round"/><path id="227" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,776,177)" fill="none" ed:tosuperid="226" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="229" d="M-13.5,-22C2.1,-22,-5.9,22,13.5,22" transform="matrix(1,0,0,1,776,212)" fill="none" ed:tosuperid="228" stroke-linecap="round" stroke="#696969" ed:parentid="120" stroke-linejoin="round"/><path id="231" d="M-13.5,99.5C5.4,99.5,-13.5,-99.5,13.5,-99.5" transform="matrix(1,0,0,1,708,441)" fill="none" ed:tosuperid="230" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="233" d="M-13.5,38.8C4.6,38.8,-11.7,-38.8,13.5,-38.8" transform="matrix(1,0,0,1,708,501)" fill="none" ed:tosuperid="232" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="235" d="M-13.5,45.3C5.1,45.3,-12.9,-45.3,13.5,-45.3" transform="matrix(1,0,0,1,831,417)" fill="none" ed:tosuperid="234" stroke-linecap="round" stroke="#696969" ed:parentid="232" stroke-linejoin="round"/><path id="237" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,831,442)" fill="none" ed:tosuperid="236" stroke-linecap="round" stroke="#696969" ed:parentid="232" stroke-linejoin="round"/><path id="239" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,831,467)" fill="none" ed:tosuperid="238" stroke-linecap="round" stroke="#696969" ed:parentid="232" stroke-linejoin="round"/><path id="241" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,831,483)" fill="none" ed:tosuperid="240" stroke-linecap="round" stroke="#696969" ed:parentid="232" stroke-linejoin="round"/><path id="243" d="M-13.5,-45.3C5.1,-45.3,-12.9,45.3,13.5,45.3" transform="matrix(1,0,0,1,831,508)" fill="none" ed:tosuperid="242" stroke-linecap="round" stroke="#696969" ed:parentid="232" stroke-linejoin="round"/><path id="245" d="M-13.5,-57.8C5.4,-57.8,-13.5,57.8,13.5,57.8" transform="matrix(1,0,0,1,708,598)" fill="none" ed:tosuperid="244" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="247" d="M-13.5,35.8C4.3,35.8,-10.9,-35.8,13.5,-35.8" transform="matrix(1,0,0,1,846,620)" fill="none" ed:tosuperid="246" stroke-linecap="round" stroke="#696969" ed:parentid="244" stroke-linejoin="round"/><path id="249" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,846,635)" fill="none" ed:tosuperid="248" stroke-linecap="round" stroke="#696969" ed:parentid="244" stroke-linejoin="round"/><path id="251" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" transform="matrix(1,0,0,1,846,651)" fill="none" ed:tosuperid="250" stroke-linecap="round" stroke="#696969" ed:parentid="244" stroke-linejoin="round"/><path id="253" d="M-13.5,-10.8C-0.2,-10.8,-0.4,10.8,13.5,10.8" transform="matrix(1,0,0,1,846,666)" fill="none" ed:tosuperid="252" stroke-linecap="round" stroke="#696969" ed:parentid="244" stroke-linejoin="round"/><path id="255" d="M-13.5,-35.8C4.3,-35.8,-10.9,35.8,13.5,35.8" transform="matrix(1,0,0,1,846,691)" fill="none" ed:tosuperid="254" stroke-linecap="round" stroke="#696969" ed:parentid="244" stroke-linejoin="round"/><path id="257" d="M-13.5,-109C5.4,-109,-13.5,109,13.5,109" transform="matrix(1,0,0,1,708,649)" fill="none" ed:tosuperid="256" stroke-linecap="round" stroke="#696969" ed:parentid="124" stroke-linejoin="round"/><path id="259" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,864,758)" fill="none" ed:tosuperid="258" stroke-linecap="round" stroke="#696969" ed:parentid="256" stroke-linejoin="round"/><path id="263" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,700,816)" fill="none" ed:tosuperid="262" stroke-linecap="round" stroke="#696969" ed:parentid="126" stroke-linejoin="round"/><path id="265" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,700,841)" fill="none" ed:tosuperid="264" stroke-linecap="round" stroke="#696969" ed:parentid="126" stroke-linejoin="round"/><path id="267" d="M-13.5,45.3C5.1,45.3,-12.9,-45.3,13.5,-45.3" transform="matrix(1,0,0,1,695,934)" fill="none" ed:tosuperid="266" stroke-linecap="round" stroke="#696969" ed:parentid="128" stroke-linejoin="round"/><path id="269" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,695,959)" fill="none" ed:tosuperid="268" stroke-linecap="round" stroke="#696969" ed:parentid="128" stroke-linejoin="round"/><path id="271" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,695,984)" fill="none" ed:tosuperid="270" stroke-linecap="round" stroke="#696969" ed:parentid="128" stroke-linejoin="round"/><path id="273" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,695,1012)" fill="none" ed:tosuperid="272" stroke-linecap="round" stroke="#696969" ed:parentid="128" stroke-linejoin="round"/><path id="275" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,818,1042)" fill="none" ed:tosuperid="274" stroke-linecap="round" stroke="#696969" ed:parentid="272" stroke-linejoin="round"/><path id="277" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,818,1058)" fill="none" ed:tosuperid="276" stroke-linecap="round" stroke="#696969" ed:parentid="272" stroke-linejoin="round"/><path id="279" d="M-13.5,31C3.7,31,-9.4,-31,13.5,-31" transform="matrix(1,0,0,1,656,1151)" fill="none" ed:tosuperid="278" stroke-linecap="round" stroke="#696969" ed:parentid="130" stroke-linejoin="round"/><path id="281" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,656,1167)" fill="none" ed:tosuperid="280" stroke-linecap="round" stroke="#696969" ed:parentid="130" stroke-linejoin="round"/><path id="283" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,656,1187)" fill="none" ed:tosuperid="282" stroke-linecap="round" stroke="#696969" ed:parentid="130" stroke-linejoin="round"/><path id="285" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,656,1215)" fill="none" ed:tosuperid="284" stroke-linecap="round" stroke="#696969" ed:parentid="130" stroke-linejoin="round"/><path id="287" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,799,1196)" fill="none" ed:tosuperid="286" stroke-linecap="round" stroke="#696969" ed:parentid="282" stroke-linejoin="round"/><path id="289" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,786,1240)" fill="none" ed:tosuperid="288" stroke-linecap="round" stroke="#696969" ed:parentid="284" stroke-linejoin="round"/><path id="291" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,786,1255)" fill="none" ed:tosuperid="290" stroke-linecap="round" stroke="#696969" ed:parentid="284" stroke-linejoin="round"/><path id="293" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,747,1336)" fill="none" ed:tosuperid="292" stroke-linecap="round" stroke="#696969" ed:parentid="132" stroke-linejoin="round"/><path id="295" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,747,1357)" fill="none" ed:tosuperid="294" stroke-linecap="round" stroke="#696969" ed:parentid="132" stroke-linejoin="round"/><path id="297" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,890,1358)" fill="none" ed:tosuperid="296" stroke-linecap="round" stroke="#696969" ed:parentid="294" stroke-linejoin="round"/><path id="299" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,747,1377)" fill="none" ed:tosuperid="298" stroke-linecap="round" stroke="#696969" ed:parentid="132" stroke-linejoin="round"/><path id="301" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,877,1394)" fill="none" ed:tosuperid="300" stroke-linecap="round" stroke="#696969" ed:parentid="298" stroke-linejoin="round"/><path id="303" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,747,1392)" fill="none" ed:tosuperid="302" stroke-linecap="round" stroke="#696969" ed:parentid="132" stroke-linejoin="round"/><path id="305" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,877,1425)" fill="none" ed:tosuperid="304" stroke-linecap="round" stroke="#696969" ed:parentid="302" stroke-linejoin="round"/><path id="307" d="M-13.5,43.5C5,43.5,-12.6,-43.5,13.5,-43.5" transform="matrix(1,0,0,1,721,1500)" fill="none" ed:tosuperid="306" stroke-linecap="round" stroke="#696969" ed:parentid="134" stroke-linejoin="round"/><path id="309" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,721,1520)" fill="none" ed:tosuperid="308" stroke-linecap="round" stroke="#696969" ed:parentid="134" stroke-linejoin="round"/><path id="311" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,721,1548)" fill="none" ed:tosuperid="310" stroke-linecap="round" stroke="#696969" ed:parentid="134" stroke-linejoin="round"/><path id="313" d="M-13.5,-28C3.2,-28,-8.3,28,13.5,28" transform="matrix(1,0,0,1,721,1571)" fill="none" ed:tosuperid="312" stroke-linecap="round" stroke="#696969" ed:parentid="134" stroke-linejoin="round"/><path id="315" d="M-13.5,-43.5C5,-43.5,-12.6,43.5,13.5,43.5" transform="matrix(1,0,0,1,721,1587)" fill="none" ed:tosuperid="314" stroke-linecap="round" stroke="#696969" ed:parentid="134" stroke-linejoin="round"/><path id="317" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,851,1501)" fill="none" ed:tosuperid="316" stroke-linecap="round" stroke="#696969" ed:parentid="308" stroke-linejoin="round"/><path id="319" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,864,1545)" fill="none" ed:tosuperid="318" stroke-linecap="round" stroke="#696969" ed:parentid="310" stroke-linejoin="round"/><path id="321" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,864,1560)" fill="none" ed:tosuperid="320" stroke-linecap="round" stroke="#696969" ed:parentid="310" stroke-linejoin="round"/><path id="323" d="M-13.5,51.3C5.4,51.3,-13.4,-51.3,13.5,-51.3" transform="matrix(1,0,0,1,695,1712)" fill="none" ed:tosuperid="322" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="325" d="M-13.5,35.8C4.3,35.8,-10.9,-35.8,13.5,-35.8" transform="matrix(1,0,0,1,695,1728)" fill="none" ed:tosuperid="324" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="327" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,695,1756)" fill="none" ed:tosuperid="326" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="329" d="M-13.5,-35.8C4.3,-35.8,-10.9,35.8,13.5,35.8" transform="matrix(1,0,0,1,695,1799)" fill="none" ed:tosuperid="328" stroke-linecap="round" stroke="#696969" ed:parentid="136" stroke-linejoin="round"/><path id="331" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,838,1745)" fill="none" ed:tosuperid="330" stroke-linecap="round" stroke="#696969" ed:parentid="326" stroke-linejoin="round"/><path id="333" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,838,1761)" fill="none" ed:tosuperid="332" stroke-linecap="round" stroke="#696969" ed:parentid="326" stroke-linejoin="round"/><path id="335" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,864,1820)" fill="none" ed:tosuperid="334" stroke-linecap="round" stroke="#696969" ed:parentid="328" stroke-linejoin="round"/><path id="337" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,864,1843)" fill="none" ed:tosuperid="336" stroke-linecap="round" stroke="#696969" ed:parentid="328" stroke-linejoin="round"/><path id="339" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,987,1843)" fill="none" ed:tosuperid="338" stroke-linecap="round" stroke="#696969" ed:parentid="336" stroke-linejoin="round"/><path id="341" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,987,1858)" fill="none" ed:tosuperid="340" stroke-linecap="round" stroke="#696969" ed:parentid="336" stroke-linejoin="round"/><path id="343" d="M-13.5,68.5C5.4,68.5,-13.5,-68.5,13.5,-68.5" transform="matrix(1,0,0,1,682,1985)" fill="none" ed:tosuperid="342" stroke-linecap="round" stroke="#696969" ed:parentid="138" stroke-linejoin="round"/><path id="345" d="M-13.5,53C5.4,53,-13.5,-53,13.5,-53" transform="matrix(1,0,0,1,682,2000)" fill="none" ed:tosuperid="344" stroke-linecap="round" stroke="#696969" ed:parentid="138" stroke-linejoin="round"/><path id="347" d="M-13.5,37.5C4.5,37.5,-11.4,-37.5,13.5,-37.5" transform="matrix(1,0,0,1,682,2016)" fill="none" ed:tosuperid="346" stroke-linecap="round" stroke="#696969" ed:parentid="138" stroke-linejoin="round"/><path id="349" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,682,2041)" fill="none" ed:tosuperid="348" stroke-linecap="round" stroke="#696969" ed:parentid="138" stroke-linejoin="round"/><path id="353" d="M-13.5,-40.5C4.8,-40.5,-12.1,40.5,13.5,40.5" transform="matrix(1,0,0,1,682,2094)" fill="none" ed:tosuperid="352" stroke-linecap="round" stroke="#696969" ed:parentid="138" stroke-linejoin="round"/><path id="355" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,892,2106)" fill="none" ed:tosuperid="354" stroke-linecap="round" stroke="#696969" ed:parentid="352" stroke-linejoin="round"/><path id="357" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,892,2131)" fill="none" ed:tosuperid="356" stroke-linecap="round" stroke="#696969" ed:parentid="352" stroke-linejoin="round"/><path id="359" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,892,2147)" fill="none" ed:tosuperid="358" stroke-linecap="round" stroke="#696969" ed:parentid="352" stroke-linejoin="round"/><path id="361" d="M-13.5,-37.5C4.5,-37.5,-11.4,37.5,13.5,37.5" transform="matrix(1,0,0,1,892,2172)" fill="none" ed:tosuperid="360" stroke-linecap="round" stroke="#696969" ed:parentid="352" stroke-linejoin="round"/><path id="363" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,696,2279)" fill="none" ed:tosuperid="362" stroke-linecap="round" stroke="#696969" ed:parentid="140" stroke-linejoin="round"/><path id="365" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,696,2304)" fill="none" ed:tosuperid="364" stroke-linecap="round" stroke="#696969" ed:parentid="140" stroke-linejoin="round"/><path id="367" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" transform="matrix(1,0,0,1,696,2329)" fill="none" ed:tosuperid="366" stroke-linecap="round" stroke="#696969" ed:parentid="140" stroke-linejoin="round"/><path id="369" d="M-13.5,45.3C5.1,45.3,-12.9,-45.3,13.5,-45.3" transform="matrix(1,0,0,1,703,2541)" fill="none" ed:tosuperid="368" stroke-linecap="round" stroke="#696969" ed:parentid="142" stroke-linejoin="round"/><path id="371" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,703,2607)" fill="none" ed:tosuperid="370" stroke-linecap="round" stroke="#696969" ed:parentid="142" stroke-linejoin="round"/><path id="373" d="M-13.5,-73.3C5.4,-73.3,-13.5,73.3,13.5,73.3" transform="matrix(1,0,0,1,703,2660)" fill="none" ed:tosuperid="372" stroke-linecap="round" stroke="#696969" ed:parentid="142" stroke-linejoin="round"/><path id="377" d="M-13.5,10.8C-0.2,10.8,-0.4,-10.8,13.5,-10.8" transform="matrix(1,0,0,1,689,3009)" fill="none" ed:tosuperid="376" stroke-linecap="round" stroke="#696969" ed:parentid="146" stroke-linejoin="round"/><path id="379" d="M-13.5,-37.5C4.5,-37.5,-11.4,37.5,13.5,37.5" transform="matrix(1,0,0,1,689,3058)" fill="none" ed:tosuperid="378" stroke-linecap="round" stroke="#696969" ed:parentid="146" stroke-linejoin="round"/><path id="381" d="M-13.5,-78C5.4,-78,-13.5,78,13.5,78" transform="matrix(1,0,0,1,689,3098)" fill="none" ed:tosuperid="380" stroke-linecap="round" stroke="#696969" ed:parentid="146" stroke-linejoin="round"/><path id="383" d="M-13.5,-53C5.4,-53,-13.5,53,13.5,53" transform="matrix(1,0,0,1,664,3513)" fill="none" ed:tosuperid="382" stroke-linecap="round" stroke="#696969" ed:parentid="148" stroke-linejoin="round"/><path id="385" d="M-13.5,-113.8C5.4,-113.8,-13.5,113.8,13.5,113.8" transform="matrix(1,0,0,1,664,3573)" fill="none" ed:tosuperid="384" stroke-linecap="round" stroke="#696969" ed:parentid="148" stroke-linejoin="round"/><path id="387" d="M-13.5,98.3C5.4,98.3,-13.5,-98.3,13.5,-98.3" transform="matrix(1,0,0,1,703,2488)" fill="none" ed:tosuperid="386" stroke-linecap="round" stroke="#696969" ed:parentid="142" stroke-linejoin="round"/><path id="389" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,866,2468)" fill="none" ed:tosuperid="388" stroke-linecap="round" stroke="#696969" ed:parentid="368" stroke-linejoin="round"/><path id="391" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,866,2493)" fill="none" ed:tosuperid="390" stroke-linecap="round" stroke="#696969" ed:parentid="368" stroke-linejoin="round"/><path id="393" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,866,2509)" fill="none" ed:tosuperid="392" stroke-linecap="round" stroke="#696969" ed:parentid="368" stroke-linejoin="round"/><path id="395" d="M-13.5,-37.5C4.5,-37.5,-11.4,37.5,13.5,37.5" transform="matrix(1,0,0,1,866,2534)" fill="none" ed:tosuperid="394" stroke-linecap="round" stroke="#696969" ed:parentid="368" stroke-linejoin="round"/><path id="397" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,841,2615)" fill="none" ed:tosuperid="396" stroke-linecap="round" stroke="#696969" ed:parentid="370" stroke-linejoin="round"/><path id="399" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,841,2640)" fill="none" ed:tosuperid="398" stroke-linecap="round" stroke="#696969" ed:parentid="370" stroke-linejoin="round"/><path id="401" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,883,2718)" fill="none" ed:tosuperid="400" stroke-linecap="round" stroke="#696969" ed:parentid="372" stroke-linejoin="round"/><path id="403" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,883,2733)" fill="none" ed:tosuperid="402" stroke-linecap="round" stroke="#696969" ed:parentid="372" stroke-linejoin="round"/><path id="405" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,883,2758)" fill="none" ed:tosuperid="404" stroke-linecap="round" stroke="#696969" ed:parentid="372" stroke-linejoin="round"/><path id="407" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,729,2828)" fill="none" ed:tosuperid="406" stroke-linecap="round" stroke="#696969" ed:parentid="144" stroke-linejoin="round"/><path id="409" d="M-13.5,59C5.4,59,-13.5,-59,13.5,-59" transform="matrix(1,0,0,1,689,2961)" fill="none" ed:tosuperid="408" stroke-linecap="round" stroke="#696969" ed:parentid="146" stroke-linejoin="round"/><path id="411" d="M-13.5,34C4.1,34,-10.4,-34,13.5,-34" transform="matrix(1,0,0,1,689,2986)" fill="none" ed:tosuperid="410" stroke-linecap="round" stroke="#696969" ed:parentid="146" stroke-linejoin="round"/><path id="413" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,891,2991)" fill="none" ed:tosuperid="412" stroke-linecap="round" stroke="#696969" ed:parentid="376" stroke-linejoin="round"/><path id="415" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,891,3006)" fill="none" ed:tosuperid="414" stroke-linecap="round" stroke="#696969" ed:parentid="376" stroke-linejoin="round"/><path id="417" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,827,3080)" fill="none" ed:tosuperid="416" stroke-linecap="round" stroke="#696969" ed:parentid="378" stroke-linejoin="round"/><path id="419" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,827,3095)" fill="none" ed:tosuperid="418" stroke-linecap="round" stroke="#696969" ed:parentid="378" stroke-linejoin="round"/><path id="421" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,827,3120)" fill="none" ed:tosuperid="420" stroke-linecap="round" stroke="#696969" ed:parentid="378" stroke-linejoin="round"/><path id="423" d="M-13.5,116.8C5.4,116.8,-13.5,-116.8,13.5,-116.8" transform="matrix(1,0,0,1,664,3343)" fill="none" ed:tosuperid="422" stroke-linecap="round" stroke="#696969" ed:parentid="148" stroke-linejoin="round"/><path id="425" d="M-13.5,81C5.4,81,-13.5,-81,13.5,-81" transform="matrix(1,0,0,1,664,3379)" fill="none" ed:tosuperid="424" stroke-linecap="round" stroke="#696969" ed:parentid="148" stroke-linejoin="round"/><path id="427" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,813,3277)" fill="none" ed:tosuperid="426" stroke-linecap="round" stroke="#696969" ed:parentid="424" stroke-linejoin="round"/><path id="429" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,813,3302)" fill="none" ed:tosuperid="428" stroke-linecap="round" stroke="#696969" ed:parentid="424" stroke-linejoin="round"/><path id="431" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,813,3318)" fill="none" ed:tosuperid="430" stroke-linecap="round" stroke="#696969" ed:parentid="424" stroke-linejoin="round"/><path id="435" d="M-13.5,35.8C4.3,35.8,-10.9,-35.8,13.5,-35.8" transform="matrix(1,0,0,1,664,3424)" fill="none" ed:tosuperid="434" stroke-linecap="round" stroke="#696969" ed:parentid="148" stroke-linejoin="round"/><path id="437" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,664,3439)" fill="none" ed:tosuperid="436" stroke-linecap="round" stroke="#696969" ed:parentid="148" stroke-linejoin="round"/><path id="439" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,664,3464)" fill="none" ed:tosuperid="438" stroke-linecap="round" stroke="#696969" ed:parentid="148" stroke-linejoin="round"/><path id="441" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,802,3542)" fill="none" ed:tosuperid="440" stroke-linecap="round" stroke="#696969" ed:parentid="382" stroke-linejoin="round"/><path id="445" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,802,3558)" fill="none" ed:tosuperid="444" stroke-linecap="round" stroke="#696969" ed:parentid="382" stroke-linejoin="round"/><path id="447" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,802,3583)" fill="none" ed:tosuperid="446" stroke-linecap="round" stroke="#696969" ed:parentid="382" stroke-linejoin="round"/><path id="449" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,802,3598)" fill="none" ed:tosuperid="448" stroke-linecap="round" stroke="#696969" ed:parentid="382" stroke-linejoin="round"/><path id="451" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,867,3684)" fill="none" ed:tosuperid="450" stroke-linecap="round" stroke="#696969" ed:parentid="384" stroke-linejoin="round"/><path id="453" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,867,3700)" fill="none" ed:tosuperid="452" stroke-linecap="round" stroke="#696969" ed:parentid="384" stroke-linejoin="round"/><path id="455" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,664,3770)" fill="none" ed:tosuperid="454" stroke-linecap="round" stroke="#696969" ed:parentid="150" stroke-linejoin="round"/><path id="457" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,664,3795)" fill="none" ed:tosuperid="456" stroke-linecap="round" stroke="#696969" ed:parentid="150" stroke-linejoin="round"/><path id="459" d="M-13.5,53C5.4,53,-13.5,-53,13.5,-53" transform="matrix(1,0,0,1,701,3994)" fill="none" ed:tosuperid="458" stroke-linecap="round" stroke="#696969" ed:parentid="152" stroke-linejoin="round"/><path id="461" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,701,4019)" fill="none" ed:tosuperid="460" stroke-linecap="round" stroke="#696969" ed:parentid="152" stroke-linejoin="round"/><path id="463" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,701,4064)" fill="none" ed:tosuperid="462" stroke-linecap="round" stroke="#696969" ed:parentid="152" stroke-linejoin="round"/><path id="465" d="M-13.5,-57.8C5.4,-57.8,-13.5,57.8,13.5,57.8" transform="matrix(1,0,0,1,701,4105)" fill="none" ed:tosuperid="464" stroke-linecap="round" stroke="#696969" ed:parentid="152" stroke-linejoin="round"/><path id="467" d="M-13.5,-73.3C5.4,-73.3,-13.5,73.3,13.5,73.3" transform="matrix(1,0,0,1,701,4120)" fill="none" ed:tosuperid="466" stroke-linecap="round" stroke="#696969" ed:parentid="152" stroke-linejoin="round"/><path id="469" d="M-13.5,-88.8C5.4,-88.8,-13.5,88.8,13.5,88.8" transform="matrix(1,0,0,1,701,4136)" fill="none" ed:tosuperid="468" stroke-linecap="round" stroke="#696969" ed:parentid="152" stroke-linejoin="round"/><path id="471" d="M-13.5,88.8C5.4,88.8,-13.5,-88.8,13.5,-88.8" transform="matrix(1,0,0,1,701,4641)" fill="none" ed:tosuperid="470" stroke-linecap="round" stroke="#696969" ed:parentid="154" stroke-linejoin="round"/><path id="473" d="M-13.5,-34.5C4.1,-34.5,-10.5,34.5,13.5,34.5" transform="matrix(1,0,0,1,701,4764)" fill="none" ed:tosuperid="472" stroke-linecap="round" stroke="#696969" ed:parentid="154" stroke-linejoin="round"/><path id="475" d="M-13.5,-125C5.4,-125,-13.5,125,13.5,125" transform="matrix(1,0,0,1,701,4855)" fill="none" ed:tosuperid="474" stroke-linecap="round" stroke="#696969" ed:parentid="154" stroke-linejoin="round"/><path id="477" d="M-13.5,-190.5C5.4,-190.5,-13.5,190.5,13.5,190.5" transform="matrix(1,0,0,1,701,4920)" fill="none" ed:tosuperid="476" stroke-linecap="round" stroke="#696969" ed:parentid="154" stroke-linejoin="round"/><path id="479" d="M-13.5,-206C5.4,-206,-13.5,206,13.5,206" transform="matrix(1,0,0,1,701,4936)" fill="none" ed:tosuperid="478" stroke-linecap="round" stroke="#696969" ed:parentid="154" stroke-linejoin="round"/><path id="481" d="M-13.5,-229.3C5.4,-229.3,-13.5,229.3,13.5,229.3" transform="matrix(1,0,0,1,701,4959)" fill="none" ed:tosuperid="480" stroke-linecap="round" stroke="#696969" ed:parentid="154" stroke-linejoin="round"/><path id="483" d="M-13.5,230.5C5.4,230.5,-13.5,-230.5,13.5,-230.5" transform="matrix(1,0,0,1,688,5521)" fill="none" ed:tosuperid="482" stroke-linecap="round" stroke="#696969" ed:parentid="156" stroke-linejoin="round"/><path id="485" d="M-13.5,118.5C5.4,118.5,-13.5,-118.5,13.5,-118.5" transform="matrix(1,0,0,1,688,5633)" fill="none" ed:tosuperid="484" stroke-linecap="round" stroke="#696969" ed:parentid="156" stroke-linejoin="round"/><path id="487" d="M-13.5,-49.5C5.3,-49.5,-13.3,49.5,13.5,49.5" transform="matrix(1,0,0,1,688,5801)" fill="none" ed:tosuperid="486" stroke-linecap="round" stroke="#696969" ed:parentid="156" stroke-linejoin="round"/><path id="489" d="M-13.5,-158.5C5.4,-158.5,-13.5,158.5,13.5,158.5" transform="matrix(1,0,0,1,688,5910)" fill="none" ed:tosuperid="488" stroke-linecap="round" stroke="#696969" ed:parentid="156" stroke-linejoin="round"/><path id="491" d="M-13.5,-228.8C5.4,-228.8,-13.5,228.8,13.5,228.8" transform="matrix(1,0,0,1,688,5980)" fill="none" ed:tosuperid="490" stroke-linecap="round" stroke="#696969" ed:parentid="156" stroke-linejoin="round"/><path id="493" d="M-13.5,73.3C5.4,73.3,-13.5,-73.3,13.5,-73.3" transform="matrix(1,0,0,1,675,6398)" fill="none" ed:tosuperid="492" stroke-linecap="round" stroke="#696969" ed:parentid="158" stroke-linejoin="round"/><path id="495" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,675,6443)" fill="none" ed:tosuperid="494" stroke-linecap="round" stroke="#696969" ed:parentid="158" stroke-linejoin="round"/><path id="497" d="M-13.5,-37.5C4.5,-37.5,-11.4,37.5,13.5,37.5" transform="matrix(1,0,0,1,675,6509)" fill="none" ed:tosuperid="496" stroke-linecap="round" stroke="#696969" ed:parentid="158" stroke-linejoin="round"/><path id="499" d="M-13.5,-85.8C5.4,-85.8,-13.5,85.8,13.5,85.8" transform="matrix(1,0,0,1,675,6557)" fill="none" ed:tosuperid="498" stroke-linecap="round" stroke="#696969" ed:parentid="158" stroke-linejoin="round"/><path id="503" d="M-13.5,29.8C3.5,29.8,-9,-29.8,13.5,-29.8" transform="matrix(1,0,0,1,727,7293)" fill="none" ed:tosuperid="502" stroke-linecap="round" stroke="#696969" ed:parentid="162" stroke-linejoin="round"/><path id="505" d="M-13.5,-41.8C4.9,-41.8,-12.3,41.8,13.5,41.8" transform="matrix(1,0,0,1,727,7365)" fill="none" ed:tosuperid="504" stroke-linecap="round" stroke="#696969" ed:parentid="162" stroke-linejoin="round"/><path id="507" d="M-13.5,-135.3C5.4,-135.3,-13.5,135.3,13.5,135.3" transform="matrix(1,0,0,1,727,7458)" fill="none" ed:tosuperid="506" stroke-linecap="round" stroke="#696969" ed:parentid="162" stroke-linejoin="round"/><path id="509" d="M-13.5,40.5C4.8,40.5,-12.1,-40.5,13.5,-40.5" transform="matrix(1,0,0,1,700,8275)" fill="none" ed:tosuperid="508" stroke-linecap="round" stroke="#696969" ed:parentid="168" stroke-linejoin="round"/><path id="511" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,700,8316)" fill="none" ed:tosuperid="510" stroke-linecap="round" stroke="#696969" ed:parentid="168" stroke-linejoin="round"/><path id="513" d="M-13.5,-48.3C5.3,-48.3,-13.2,48.3,13.5,48.3" transform="matrix(1,0,0,1,700,8364)" fill="none" ed:tosuperid="512" stroke-linecap="round" stroke="#696969" ed:parentid="168" stroke-linejoin="round"/><path id="515" d="M-13.5,-3C-2,-3,3.8,3,13.5,3" transform="matrix(1,0,0,1,658,8618)" fill="none" ed:tosuperid="514" stroke-linecap="round" stroke="#696969" ed:parentid="170" stroke-linejoin="round"/><path id="517" d="M-13.5,-35.8C4.3,-35.8,-10.9,35.8,13.5,35.8" transform="matrix(1,0,0,1,658,8650)" fill="none" ed:tosuperid="516" stroke-linecap="round" stroke="#696969" ed:parentid="170" stroke-linejoin="round"/><path id="519" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,650,8990)" fill="none" ed:tosuperid="518" stroke-linecap="round" stroke="#696969" ed:parentid="174" stroke-linejoin="round"/><path id="521" d="M-13.5,88.8C5.4,88.8,-13.5,-88.8,13.5,-88.8" transform="matrix(1,0,0,1,701,3958)" fill="none" ed:tosuperid="520" stroke-linecap="round" stroke="#696969" ed:parentid="152" stroke-linejoin="round"/><path id="523" d="M-13.5,73.3C5.4,73.3,-13.5,-73.3,13.5,-73.3" transform="matrix(1,0,0,1,701,3974)" fill="none" ed:tosuperid="522" stroke-linecap="round" stroke="#696969" ed:parentid="152" stroke-linejoin="round"/><path id="525" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,805,3946)" fill="none" ed:tosuperid="524" stroke-linecap="round" stroke="#696969" ed:parentid="458" stroke-linejoin="round"/><path id="527" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,840,3996)" fill="none" ed:tosuperid="526" stroke-linecap="round" stroke="#696969" ed:parentid="460" stroke-linejoin="round"/><path id="529" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" transform="matrix(1,0,0,1,905,4057)" fill="none" ed:tosuperid="528" stroke-linecap="round" stroke="#696969" ed:parentid="462" stroke-linejoin="round"/><path id="531" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,905,4082)" fill="none" ed:tosuperid="530" stroke-linecap="round" stroke="#696969" ed:parentid="462" stroke-linejoin="round"/><path id="533" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,905,4107)" fill="none" ed:tosuperid="532" stroke-linecap="round" stroke="#696969" ed:parentid="462" stroke-linejoin="round"/><path id="535" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,857,4194)" fill="none" ed:tosuperid="534" stroke-linecap="round" stroke="#696969" ed:parentid="466" stroke-linejoin="round"/><path id="537" d="M-13.5,237C5.4,237,-13.5,-237,13.5,-237" transform="matrix(1,0,0,1,701,4493)" fill="none" ed:tosuperid="536" stroke-linecap="round" stroke="#696969" ed:parentid="154" stroke-linejoin="round"/><path id="539" d="M-13.5,212C5.4,212,-13.5,-212,13.5,-212" transform="matrix(1,0,0,1,701,4518)" fill="none" ed:tosuperid="538" stroke-linecap="round" stroke="#696969" ed:parentid="154" stroke-linejoin="round"/><path id="541" d="M-13.5,187C5.4,187,-13.5,-187,13.5,-187" transform="matrix(1,0,0,1,701,4543)" fill="none" ed:tosuperid="540" stroke-linecap="round" stroke="#696969" ed:parentid="154" stroke-linejoin="round"/><path id="543" d="M-13.5,73.3C5.4,73.3,-13.5,-73.3,13.5,-73.3" transform="matrix(1,0,0,1,805,4479)" fill="none" ed:tosuperid="542" stroke-linecap="round" stroke="#696969" ed:parentid="470" stroke-linejoin="round"/><path id="545" d="M-13.5,57.8C5.4,57.8,-13.5,-57.8,13.5,-57.8" transform="matrix(1,0,0,1,805,4494)" fill="none" ed:tosuperid="544" stroke-linecap="round" stroke="#696969" ed:parentid="470" stroke-linejoin="round"/><path id="547" d="M-13.5,32.8C3.9,32.8,-10,-32.8,13.5,-32.8" transform="matrix(1,0,0,1,805,4519)" fill="none" ed:tosuperid="546" stroke-linecap="round" stroke="#696969" ed:parentid="470" stroke-linejoin="round"/><path id="549" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,805,4544)" fill="none" ed:tosuperid="548" stroke-linecap="round" stroke="#696969" ed:parentid="470" stroke-linejoin="round"/><path id="551" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,805,4560)" fill="none" ed:tosuperid="550" stroke-linecap="round" stroke="#696969" ed:parentid="470" stroke-linejoin="round"/><path id="553" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,805,4585)" fill="none" ed:tosuperid="552" stroke-linecap="round" stroke="#696969" ed:parentid="470" stroke-linejoin="round"/><path id="555" d="M-13.5,-57.8C5.4,-57.8,-13.5,57.8,13.5,57.8" transform="matrix(1,0,0,1,805,4610)" fill="none" ed:tosuperid="554" stroke-linecap="round" stroke="#696969" ed:parentid="470" stroke-linejoin="round"/><path id="557" d="M-13.5,-82.8C5.4,-82.8,-13.5,82.8,13.5,82.8" transform="matrix(1,0,0,1,805,4635)" fill="none" ed:tosuperid="556" stroke-linecap="round" stroke="#696969" ed:parentid="470" stroke-linejoin="round"/><path id="559" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,844,4783)" fill="none" ed:tosuperid="558" stroke-linecap="round" stroke="#696969" ed:parentid="472" stroke-linejoin="round"/><path id="561" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,844,4799)" fill="none" ed:tosuperid="560" stroke-linecap="round" stroke="#696969" ed:parentid="472" stroke-linejoin="round"/><path id="563" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,844,4824)" fill="none" ed:tosuperid="562" stroke-linecap="round" stroke="#696969" ed:parentid="472" stroke-linejoin="round"/><path id="565" d="M-13.5,40.5C4.8,40.5,-12.1,-40.5,13.5,-40.5" transform="matrix(1,0,0,1,831,4939)" fill="none" ed:tosuperid="564" stroke-linecap="round" stroke="#696969" ed:parentid="474" stroke-linejoin="round"/><path id="567" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,831,4964)" fill="none" ed:tosuperid="566" stroke-linecap="round" stroke="#696969" ed:parentid="474" stroke-linejoin="round"/><path id="569" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" transform="matrix(1,0,0,1,831,4989)" fill="none" ed:tosuperid="568" stroke-linecap="round" stroke="#696969" ed:parentid="474" stroke-linejoin="round"/><path id="571" d="M-13.5,-34.5C4.1,-34.5,-10.5,34.5,13.5,34.5" transform="matrix(1,0,0,1,831,5014)" fill="none" ed:tosuperid="570" stroke-linecap="round" stroke="#696969" ed:parentid="474" stroke-linejoin="round"/><path id="573" d="M-13.5,-50C5.3,-50,-13.4,50,13.5,50" transform="matrix(1,0,0,1,831,5030)" fill="none" ed:tosuperid="572" stroke-linecap="round" stroke="#696969" ed:parentid="474" stroke-linejoin="round"/><path id="575" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,831,5111)" fill="none" ed:tosuperid="574" stroke-linecap="round" stroke="#696969" ed:parentid="476" stroke-linejoin="round"/><path id="577" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,872,5142)" fill="none" ed:tosuperid="576" stroke-linecap="round" stroke="#696969" ed:parentid="478" stroke-linejoin="round"/><path id="579" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,844,5188)" fill="none" ed:tosuperid="578" stroke-linecap="round" stroke="#696969" ed:parentid="480" stroke-linejoin="round"/><path id="581" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,967,5180)" fill="none" ed:tosuperid="580" stroke-linecap="round" stroke="#696969" ed:parentid="578" stroke-linejoin="round"/><path id="583" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,967,5196)" fill="none" ed:tosuperid="582" stroke-linecap="round" stroke="#696969" ed:parentid="578" stroke-linejoin="round"/><path id="585" d="M-13.5,258.5C5.4,258.5,-13.5,-258.5,13.5,-258.5" transform="matrix(1,0,0,1,688,5493)" fill="none" ed:tosuperid="584" stroke-linecap="round" stroke="#696969" ed:parentid="156" stroke-linejoin="round"/><path id="587" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,805,5288)" fill="none" ed:tosuperid="586" stroke-linecap="round" stroke="#696969" ed:parentid="482" stroke-linejoin="round"/><path id="589" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,805,5303)" fill="none" ed:tosuperid="588" stroke-linecap="round" stroke="#696969" ed:parentid="482" stroke-linejoin="round"/><path id="591" d="M-13.5,84C5.4,84,-13.5,-84,13.5,-84" transform="matrix(1,0,0,1,792,5431)" fill="none" ed:tosuperid="590" stroke-linecap="round" stroke="#696969" ed:parentid="484" stroke-linejoin="round"/><path id="593" d="M-13.5,68.5C5.4,68.5,-13.5,-68.5,13.5,-68.5" transform="matrix(1,0,0,1,792,5446)" fill="none" ed:tosuperid="592" stroke-linecap="round" stroke="#696969" ed:parentid="484" stroke-linejoin="round"/><path id="595" d="M-13.5,22C2.1,22,-5.9,-22,13.5,-22" transform="matrix(1,0,0,1,792,5493)" fill="none" ed:tosuperid="594" stroke-linecap="round" stroke="#696969" ed:parentid="484" stroke-linejoin="round"/><path id="597" d="M-13.5,31C3.7,31,-9.4,-31,13.5,-31" transform="matrix(1,0,0,1,863,5440)" fill="none" ed:tosuperid="596" stroke-linecap="round" stroke="#696969" ed:parentid="594" stroke-linejoin="round"/><path id="599" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,863,5455)" fill="none" ed:tosuperid="598" stroke-linecap="round" stroke="#696969" ed:parentid="594" stroke-linejoin="round"/><path id="601" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,863,5471)" fill="none" ed:tosuperid="600" stroke-linecap="round" stroke="#696969" ed:parentid="594" stroke-linejoin="round"/><path id="603" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,863,5486)" fill="none" ed:tosuperid="602" stroke-linecap="round" stroke="#696969" ed:parentid="594" stroke-linejoin="round"/><path id="605" d="M-13.5,-31C3.7,-31,-9.4,31,13.5,31" transform="matrix(1,0,0,1,863,5502)" fill="none" ed:tosuperid="604" stroke-linecap="round" stroke="#696969" ed:parentid="594" stroke-linejoin="round"/><path id="607" d="M-13.5,-24.5C2.6,-24.5,-7,24.5,13.5,24.5" transform="matrix(1,0,0,1,792,5539)" fill="none" ed:tosuperid="606" stroke-linecap="round" stroke="#696969" ed:parentid="484" stroke-linejoin="round"/><path id="609" d="M-13.5,-49.5C5.3,-49.5,-13.3,49.5,13.5,49.5" transform="matrix(1,0,0,1,792,5564)" fill="none" ed:tosuperid="608" stroke-linecap="round" stroke="#696969" ed:parentid="484" stroke-linejoin="round"/><path id="611" d="M-13.5,-84C5.4,-84,-13.5,84,13.5,84" transform="matrix(1,0,0,1,792,5599)" fill="none" ed:tosuperid="610" stroke-linecap="round" stroke="#696969" ed:parentid="484" stroke-linejoin="round"/><path id="613" d="M-13.5,68.5C5.4,68.5,-13.5,-68.5,13.5,-68.5" transform="matrix(1,0,0,1,805,5782)" fill="none" ed:tosuperid="612" stroke-linecap="round" stroke="#696969" ed:parentid="486" stroke-linejoin="round"/><path id="615" d="M-13.5,43.5C5,43.5,-12.6,-43.5,13.5,-43.5" transform="matrix(1,0,0,1,805,5807)" fill="none" ed:tosuperid="614" stroke-linecap="round" stroke="#696969" ed:parentid="486" stroke-linejoin="round"/><path id="617" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,805,5823)" fill="none" ed:tosuperid="616" stroke-linecap="round" stroke="#696969" ed:parentid="486" stroke-linejoin="round"/><path id="619" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,805,5838)" fill="none" ed:tosuperid="618" stroke-linecap="round" stroke="#696969" ed:parentid="486" stroke-linejoin="round"/><path id="621" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,805,5863)" fill="none" ed:tosuperid="620" stroke-linecap="round" stroke="#696969" ed:parentid="486" stroke-linejoin="round"/><path id="623" d="M-13.5,-28C3.2,-28,-8.3,28,13.5,28" transform="matrix(1,0,0,1,805,5879)" fill="none" ed:tosuperid="622" stroke-linecap="round" stroke="#696969" ed:parentid="486" stroke-linejoin="round"/><path id="625" d="M-13.5,-43.5C5,-43.5,-12.6,43.5,13.5,43.5" transform="matrix(1,0,0,1,805,5894)" fill="none" ed:tosuperid="624" stroke-linecap="round" stroke="#696969" ed:parentid="486" stroke-linejoin="round"/><path id="627" d="M-13.5,-68.5C5.4,-68.5,-13.5,68.5,13.5,68.5" transform="matrix(1,0,0,1,805,5919)" fill="none" ed:tosuperid="626" stroke-linecap="round" stroke="#696969" ed:parentid="486" stroke-linejoin="round"/><path id="629" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" transform="matrix(1,0,0,1,831,6044)" fill="none" ed:tosuperid="628" stroke-linecap="round" stroke="#696969" ed:parentid="488" stroke-linejoin="round"/><path id="631" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,831,6069)" fill="none" ed:tosuperid="630" stroke-linecap="round" stroke="#696969" ed:parentid="488" stroke-linejoin="round"/><path id="633" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,831,6094)" fill="none" ed:tosuperid="632" stroke-linecap="round" stroke="#696969" ed:parentid="488" stroke-linejoin="round"/><path id="635" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,818,6189)" fill="none" ed:tosuperid="634" stroke-linecap="round" stroke="#696969" ed:parentid="490" stroke-linejoin="round"/><path id="639" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,818,6214)" fill="none" ed:tosuperid="638" stroke-linecap="round" stroke="#696969" ed:parentid="490" stroke-linejoin="round"/><path id="641" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" transform="matrix(1,0,0,1,818,6239)" fill="none" ed:tosuperid="640" stroke-linecap="round" stroke="#696969" ed:parentid="490" stroke-linejoin="round"/><path id="643" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,782,6312)" fill="none" ed:tosuperid="642" stroke-linecap="round" stroke="#696969" ed:parentid="492" stroke-linejoin="round"/><path id="645" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,782,6337)" fill="none" ed:tosuperid="644" stroke-linecap="round" stroke="#696969" ed:parentid="492" stroke-linejoin="round"/><path id="648" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,840,6407)" fill="none" ed:tosuperid="647" stroke-linecap="round" stroke="#696969" ed:parentid="494" stroke-linejoin="round"/><path id="650" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,840,6432)" fill="none" ed:tosuperid="649" stroke-linecap="round" stroke="#696969" ed:parentid="494" stroke-linejoin="round"/><path id="652" d="M-13.5,32.8C3.9,32.8,-10,-32.8,13.5,-32.8" transform="matrix(1,0,0,1,818,6513)" fill="none" ed:tosuperid="651" stroke-linecap="round" stroke="#696969" ed:parentid="496" stroke-linejoin="round"/><path id="654" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,818,6538)" fill="none" ed:tosuperid="653" stroke-linecap="round" stroke="#696969" ed:parentid="496" stroke-linejoin="round"/><path id="656" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,818,6563)" fill="none" ed:tosuperid="655" stroke-linecap="round" stroke="#696969" ed:parentid="496" stroke-linejoin="round"/><path id="658" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,818,6579)" fill="none" ed:tosuperid="657" stroke-linecap="round" stroke="#696969" ed:parentid="496" stroke-linejoin="round"/><path id="660" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,786,6643)" fill="none" ed:tosuperid="659" stroke-linecap="round" stroke="#696969" ed:parentid="498" stroke-linejoin="round"/><path id="662" d="M-13.5,32.8C3.9,32.8,-10,-32.8,13.5,-32.8" transform="matrix(1,0,0,1,688,6725)" fill="none" ed:tosuperid="661" stroke-linecap="round" stroke="#696969" ed:parentid="160" stroke-linejoin="round"/><path id="664" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,688,6750)" fill="none" ed:tosuperid="663" stroke-linecap="round" stroke="#696969" ed:parentid="160" stroke-linejoin="round"/><path id="666" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,688,6775)" fill="none" ed:tosuperid="665" stroke-linecap="round" stroke="#696969" ed:parentid="160" stroke-linejoin="round"/><path id="668" d="M-13.5,-42.3C4.9,-42.3,-12.4,42.3,13.5,42.3" transform="matrix(1,0,0,1,688,6800)" fill="none" ed:tosuperid="667" stroke-linecap="round" stroke="#696969" ed:parentid="160" stroke-linejoin="round"/><path id="670" d="M-13.5,260.1C5.4,260.1,-13.5,-260.1,13.5,-260.1" transform="matrix(1,0,0,1,611,7160)" fill="none" ed:tosuperid="669" stroke-linecap="round" stroke="#696969" ed:parentid="108" stroke-linejoin="round"/><path id="672" d="M-13.5,244.6C5.4,244.6,-13.5,-244.6,13.5,-244.6" transform="matrix(1,0,0,1,611,7176)" fill="none" ed:tosuperid="671" stroke-linecap="round" stroke="#696969" ed:parentid="108" stroke-linejoin="round"/><path id="674" d="M-13.5,46.5C5.2,46.5,-13.1,-46.5,13.5,-46.5" transform="matrix(1,0,0,1,798,7028)" fill="none" ed:tosuperid="673" stroke-linecap="round" stroke="#696969" ed:parentid="675" stroke-linejoin="round"/><path id="676" d="M-13.5,124.5C5.4,124.5,-13.5,-124.5,13.5,-124.5" transform="matrix(1,0,0,1,727,7199)" fill="none" ed:tosuperid="675" stroke-linecap="round" stroke="#696969" ed:parentid="162" stroke-linejoin="round"/><path id="678" d="M-13.5,31C3.7,31,-9.4,-31,13.5,-31" transform="matrix(1,0,0,1,798,7043)" fill="none" ed:tosuperid="677" stroke-linecap="round" stroke="#696969" ed:parentid="675" stroke-linejoin="round"/><path id="680" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,798,7059)" fill="none" ed:tosuperid="679" stroke-linecap="round" stroke="#696969" ed:parentid="675" stroke-linejoin="round"/><path id="682" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" transform="matrix(1,0,0,1,798,7084)" fill="none" ed:tosuperid="681" stroke-linecap="round" stroke="#696969" ed:parentid="675" stroke-linejoin="round"/><path id="684" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,798,7099)" fill="none" ed:tosuperid="683" stroke-linecap="round" stroke="#696969" ed:parentid="675" stroke-linejoin="round"/><path id="686" d="M-13.5,-40.5C4.8,-40.5,-12.1,40.5,13.5,40.5" transform="matrix(1,0,0,1,798,7115)" fill="none" ed:tosuperid="685" stroke-linecap="round" stroke="#696969" ed:parentid="675" stroke-linejoin="round"/><path id="688" d="M-13.5,-56C5.4,-56,-13.5,56,13.5,56" transform="matrix(1,0,0,1,798,7130)" fill="none" ed:tosuperid="687" stroke-linecap="round" stroke="#696969" ed:parentid="675" stroke-linejoin="round"/><path id="690" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,919,7240)" fill="none" ed:tosuperid="689" stroke-linecap="round" stroke="#696969" ed:parentid="502" stroke-linejoin="round"/><path id="692" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,919,7256)" fill="none" ed:tosuperid="691" stroke-linecap="round" stroke="#696969" ed:parentid="502" stroke-linejoin="round"/><path id="694" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,919,7271)" fill="none" ed:tosuperid="693" stroke-linecap="round" stroke="#696969" ed:parentid="502" stroke-linejoin="round"/><path id="696" d="M-13.5,-23.3C2.4,-23.3,-6.4,23.3,13.5,23.3" transform="matrix(1,0,0,1,919,7287)" fill="none" ed:tosuperid="695" stroke-linecap="round" stroke="#696969" ed:parentid="502" stroke-linejoin="round"/><path id="698" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,860,7383)" fill="none" ed:tosuperid="697" stroke-linecap="round" stroke="#696969" ed:parentid="504" stroke-linejoin="round"/><path id="700" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,860,7399)" fill="none" ed:tosuperid="699" stroke-linecap="round" stroke="#696969" ed:parentid="504" stroke-linejoin="round"/><path id="702" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,860,7424)" fill="none" ed:tosuperid="701" stroke-linecap="round" stroke="#696969" ed:parentid="504" stroke-linejoin="round"/><path id="704" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,860,7439)" fill="none" ed:tosuperid="703" stroke-linecap="round" stroke="#696969" ed:parentid="504" stroke-linejoin="round"/><path id="706" d="M-13.5,45.3C5.1,45.3,-12.9,-45.3,13.5,-45.3" transform="matrix(1,0,0,1,879,7548)" fill="none" ed:tosuperid="705" stroke-linecap="round" stroke="#696969" ed:parentid="506" stroke-linejoin="round"/><path id="708" d="M-13.5,29.8C3.5,29.8,-9,-29.8,13.5,-29.8" transform="matrix(1,0,0,1,879,7564)" fill="none" ed:tosuperid="707" stroke-linecap="round" stroke="#696969" ed:parentid="506" stroke-linejoin="round"/><path id="710" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" transform="matrix(1,0,0,1,879,7589)" fill="none" ed:tosuperid="709" stroke-linecap="round" stroke="#696969" ed:parentid="506" stroke-linejoin="round"/><path id="712" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,879,7614)" fill="none" ed:tosuperid="711" stroke-linecap="round" stroke="#696969" ed:parentid="506" stroke-linejoin="round"/><path id="714" d="M-13.5,-45.3C5.1,-45.3,-12.9,45.3,13.5,45.3" transform="matrix(1,0,0,1,879,7639)" fill="none" ed:tosuperid="713" stroke-linecap="round" stroke="#696969" ed:parentid="506" stroke-linejoin="round"/><path id="716" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,776,7757)" fill="none" ed:tosuperid="715" stroke-linecap="round" stroke="#696969" ed:parentid="164" stroke-linejoin="round"/><path id="718" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,776,7773)" fill="none" ed:tosuperid="717" stroke-linecap="round" stroke="#696969" ed:parentid="164" stroke-linejoin="round"/><path id="720" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,776,7788)" fill="none" ed:tosuperid="719" stroke-linecap="round" stroke="#696969" ed:parentid="164" stroke-linejoin="round"/><path id="722" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,776,7813)" fill="none" ed:tosuperid="721" stroke-linecap="round" stroke="#696969" ed:parentid="164" stroke-linejoin="round"/><path id="724" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,704,7918)" fill="none" ed:tosuperid="723" stroke-linecap="round" stroke="#696969" ed:parentid="166" stroke-linejoin="round"/><path id="726" d="M-13.5,-22C2.1,-22,-5.9,22,13.5,22" transform="matrix(1,0,0,1,704,7943)" fill="none" ed:tosuperid="725" stroke-linecap="round" stroke="#696969" ed:parentid="166" stroke-linejoin="round"/><path id="1018" d="M-13.5,183.5C5.4,183.5,-13.5,-183.5,13.5,-183.5" transform="matrix(1,0,0,1,689,9586)" fill="none" ed:tosuperid="1017" stroke-linecap="round" stroke="#696969" ed:parentid="180" stroke-linejoin="round"/><path id="1020" d="M-13.5,74.5C5.4,74.5,-13.5,-74.5,13.5,-74.5" transform="matrix(1,0,0,1,689,9695)" fill="none" ed:tosuperid="1019" stroke-linecap="round" stroke="#696969" ed:parentid="180" stroke-linejoin="round"/><path id="1022" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,689,9794)" fill="none" ed:tosuperid="1021" stroke-linecap="round" stroke="#696969" ed:parentid="180" stroke-linejoin="round"/><path id="1024" d="M-13.5,-56C5.4,-56,-13.5,56,13.5,56" transform="matrix(1,0,0,1,689,9825)" fill="none" ed:tosuperid="1023" stroke-linecap="round" stroke="#696969" ed:parentid="180" stroke-linejoin="round"/><path id="1026" d="M-13.5,-94.8C5.4,-94.8,-13.5,94.8,13.5,94.8" transform="matrix(1,0,0,1,689,9864)" fill="none" ed:tosuperid="1025" stroke-linecap="round" stroke="#696969" ed:parentid="180" stroke-linejoin="round"/><path id="1028" d="M-13.5,-138.3C5.4,-138.3,-13.5,138.3,13.5,138.3" transform="matrix(1,0,0,1,689,9907)" fill="none" ed:tosuperid="1027" stroke-linecap="round" stroke="#696969" ed:parentid="180" stroke-linejoin="round"/><path id="1030" d="M-13.5,-178.8C5.4,-178.8,-13.5,178.8,13.5,178.8" transform="matrix(1,0,0,1,689,9948)" fill="none" ed:tosuperid="1029" stroke-linecap="round" stroke="#696969" ed:parentid="180" stroke-linejoin="round"/><path id="1032" d="M-13.5,-203.8C5.4,-203.8,-13.5,203.8,13.5,203.8" transform="matrix(1,0,0,1,689,9973)" fill="none" ed:tosuperid="1031" stroke-linecap="round" stroke="#696969" ed:parentid="180" stroke-linejoin="round"/><path id="1034" d="M-13.5,51.3C5.4,51.3,-13.4,-51.3,13.5,-51.3" transform="matrix(1,0,0,1,697,10299)" fill="none" ed:tosuperid="1033" stroke-linecap="round" stroke="#696969" ed:parentid="182" stroke-linejoin="round"/><path id="1036" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,697,10330)" fill="none" ed:tosuperid="1035" stroke-linecap="round" stroke="#696969" ed:parentid="182" stroke-linejoin="round"/><path id="1038" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" transform="matrix(1,0,0,1,697,10346)" fill="none" ed:tosuperid="1037" stroke-linecap="round" stroke="#696969" ed:parentid="182" stroke-linejoin="round"/><path id="1040" d="M-13.5,-38.8C4.6,-38.8,-11.7,38.8,13.5,38.8" transform="matrix(1,0,0,1,697,10389)" fill="none" ed:tosuperid="1039" stroke-linecap="round" stroke="#696969" ed:parentid="182" stroke-linejoin="round"/><path id="1042" d="M-13.5,45.3C5.1,45.3,-12.9,-45.3,13.5,-45.3" transform="matrix(1,0,0,1,707,10651)" fill="none" ed:tosuperid="1041" stroke-linecap="round" stroke="#696969" ed:parentid="186" stroke-linejoin="round"/><path id="1044" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,707,10681)" fill="none" ed:tosuperid="1043" stroke-linecap="round" stroke="#696969" ed:parentid="186" stroke-linejoin="round"/><path id="1046" d="M-13.5,-14.3C0.6,-14.3,-2.2,14.3,13.5,14.3" transform="matrix(1,0,0,1,707,10710)" fill="none" ed:tosuperid="1045" stroke-linecap="round" stroke="#696969" ed:parentid="186" stroke-linejoin="round"/><path id="1048" d="M-13.5,-54.8C5.4,-54.8,-13.5,54.8,13.5,54.8" transform="matrix(1,0,0,1,707,10751)" fill="none" ed:tosuperid="1047" stroke-linecap="round" stroke="#696969" ed:parentid="186" stroke-linejoin="round"/><path id="1050" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,695,10940)" fill="none" ed:tosuperid="1049" stroke-linecap="round" stroke="#696969" ed:parentid="188" stroke-linejoin="round"/><path id="1052" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" transform="matrix(1,0,0,1,695,10977)" fill="none" ed:tosuperid="1051" stroke-linecap="round" stroke="#696969" ed:parentid="188" stroke-linejoin="round"/><path id="1054" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" transform="matrix(1,0,0,1,695,10997)" fill="none" ed:tosuperid="1053" stroke-linecap="round" stroke="#696969" ed:parentid="188" stroke-linejoin="round"/><path id="1056" d="M-13.5,-45.3C5.1,-45.3,-12.9,45.3,13.5,45.3" transform="matrix(1,0,0,1,695,11013)" fill="none" ed:tosuperid="1055" stroke-linecap="round" stroke="#696969" ed:parentid="188" stroke-linejoin="round"/><path id="1058" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,709,13113)" fill="none" ed:tosuperid="1057" stroke-linecap="round" stroke="#696969" ed:parentid="208" stroke-linejoin="round"/><path id="1062" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,749,13287)" fill="none" ed:tosuperid="1061" stroke-linecap="round" stroke="#696969" ed:parentid="210" stroke-linejoin="round"/><path id="1064" d="M-13.5,-40.5C4.8,-40.5,-12.1,40.5,13.5,40.5" transform="matrix(1,0,0,1,749,13303)" fill="none" ed:tosuperid="1063" stroke-linecap="round" stroke="#696969" ed:parentid="210" stroke-linejoin="round"/><path id="1066" d="M-13.5,302.4C5.4,302.4,-13.5,-302.4,13.5,-302.4" transform="matrix(1,0,0,1,563,8344)" fill="none" ed:tosuperid="1065" stroke-linecap="round" stroke="#696969" ed:parentid="110" stroke-linejoin="round"/><path id="1068" d="M-13.5,277.4C5.4,277.4,-13.5,-277.4,13.5,-277.4" transform="matrix(1,0,0,1,563,8369)" fill="none" ed:tosuperid="1067" stroke-linecap="round" stroke="#696969" ed:parentid="110" stroke-linejoin="round"/><path id="1070" d="M-13.5,261.9C5.4,261.9,-13.5,-261.9,13.5,-261.9" transform="matrix(1,0,0,1,563,8384)" fill="none" ed:tosuperid="1069" stroke-linecap="round" stroke="#696969" ed:parentid="110" stroke-linejoin="round"/><path id="1072" d="M-13.5,81C5.4,81,-13.5,-81,13.5,-81" transform="matrix(1,0,0,1,700,8235)" fill="none" ed:tosuperid="1071" stroke-linecap="round" stroke="#696969" ed:parentid="168" stroke-linejoin="round"/><path id="1074" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,817,8219)" fill="none" ed:tosuperid="1073" stroke-linecap="round" stroke="#696969" ed:parentid="508" stroke-linejoin="round"/><path id="1076" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" transform="matrix(1,0,0,1,817,8244)" fill="none" ed:tosuperid="1075" stroke-linecap="round" stroke="#696969" ed:parentid="508" stroke-linejoin="round"/><path id="1078" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,817,8260)" fill="none" ed:tosuperid="1077" stroke-linecap="round" stroke="#696969" ed:parentid="508" stroke-linejoin="round"/><path id="1080" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,817,8316)" fill="none" ed:tosuperid="1079" stroke-linecap="round" stroke="#696969" ed:parentid="510" stroke-linejoin="round"/><path id="1082" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,869,8389)" fill="none" ed:tosuperid="1081" stroke-linecap="round" stroke="#696969" ed:parentid="512" stroke-linejoin="round"/><path id="1084" d="M-13.5,-1.8C-2.3,-1.8,4.4,1.8,13.5,1.8" transform="matrix(1,0,0,1,869,8414)" fill="none" ed:tosuperid="1083" stroke-linecap="round" stroke="#696969" ed:parentid="512" stroke-linejoin="round"/><path id="1086" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,869,8429)" fill="none" ed:tosuperid="1085" stroke-linecap="round" stroke="#696969" ed:parentid="512" stroke-linejoin="round"/><path id="1088" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,869,8445)" fill="none" ed:tosuperid="1087" stroke-linecap="round" stroke="#696969" ed:parentid="512" stroke-linejoin="round"/><path id="1090" d="M-13.5,53C5.4,53,-13.5,-53,13.5,-53" transform="matrix(1,0,0,1,658,8562)" fill="none" ed:tosuperid="1089" stroke-linecap="round" stroke="#696969" ed:parentid="170" stroke-linejoin="round"/><path id="1092" d="M-13.5,37.5C4.5,37.5,-11.4,-37.5,13.5,-37.5" transform="matrix(1,0,0,1,658,8577)" fill="none" ed:tosuperid="1091" stroke-linecap="round" stroke="#696969" ed:parentid="170" stroke-linejoin="round"/><path id="1094" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,658,8602)" fill="none" ed:tosuperid="1093" stroke-linecap="round" stroke="#696969" ed:parentid="170" stroke-linejoin="round"/><path id="1096" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,777,8678)" fill="none" ed:tosuperid="1095" stroke-linecap="round" stroke="#696969" ed:parentid="516" stroke-linejoin="round"/><path id="1098" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,777,8703)" fill="none" ed:tosuperid="1097" stroke-linecap="round" stroke="#696969" ed:parentid="516" stroke-linejoin="round"/><path id="1100" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" transform="matrix(1,0,0,1,692,8794)" fill="none" ed:tosuperid="1099" stroke-linecap="round" stroke="#696969" ed:parentid="172" stroke-linejoin="round"/><path id="1102" d="M-13.5,-1.8C-2.3,-1.8,4.4,1.8,13.5,1.8" transform="matrix(1,0,0,1,692,8819)" fill="none" ed:tosuperid="1101" stroke-linecap="round" stroke="#696969" ed:parentid="172" stroke-linejoin="round"/><path id="1104" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,692,8834)" fill="none" ed:tosuperid="1103" stroke-linecap="round" stroke="#696969" ed:parentid="172" stroke-linejoin="round"/><path id="1106" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" transform="matrix(1,0,0,1,692,8850)" fill="none" ed:tosuperid="1105" stroke-linecap="round" stroke="#696969" ed:parentid="172" stroke-linejoin="round"/><path id="1108" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,650,8942)" fill="none" ed:tosuperid="1107" stroke-linecap="round" stroke="#696969" ed:parentid="174" stroke-linejoin="round"/><path id="1110" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,650,8967)" fill="none" ed:tosuperid="1109" stroke-linecap="round" stroke="#696969" ed:parentid="174" stroke-linejoin="round"/><path id="1112" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,754,9002)" fill="none" ed:tosuperid="1111" stroke-linecap="round" stroke="#696969" ed:parentid="518" stroke-linejoin="round"/><path id="1114" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,754,9018)" fill="none" ed:tosuperid="1113" stroke-linecap="round" stroke="#696969" ed:parentid="518" stroke-linejoin="round"/><path id="1116" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,684,9079)" fill="none" ed:tosuperid="1115" stroke-linecap="round" stroke="#696969" ed:parentid="176" stroke-linejoin="round"/><path id="1118" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,684,9094)" fill="none" ed:tosuperid="1117" stroke-linecap="round" stroke="#696969" ed:parentid="176" stroke-linejoin="round"/><path id="1120" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,656,9196)" fill="none" ed:tosuperid="1119" stroke-linecap="round" stroke="#696969" ed:parentid="178" stroke-linejoin="round"/><path id="1122" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,656,9221)" fill="none" ed:tosuperid="1121" stroke-linecap="round" stroke="#696969" ed:parentid="178" stroke-linejoin="round"/><path id="1124" d="M-13.5,-39.3C4.7,-39.3,-11.8,39.3,13.5,39.3" transform="matrix(1,0,0,1,656,9255)" fill="none" ed:tosuperid="1123" stroke-linecap="round" stroke="#696969" ed:parentid="178" stroke-linejoin="round"/><path id="1126" d="M-13.5,208.5C5.4,208.5,-13.5,-208.5,13.5,-208.5" transform="matrix(1,0,0,1,689,9561)" fill="none" ed:tosuperid="1125" stroke-linecap="round" stroke="#696969" ed:parentid="180" stroke-linejoin="round"/><path id="1128" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" transform="matrix(1,0,0,1,860,9412)" fill="none" ed:tosuperid="1127" stroke-linecap="round" stroke="#696969" ed:parentid="1017" stroke-linejoin="round"/><path id="1130" d="M-13.5,74.5C5.4,74.5,-13.5,-74.5,13.5,-74.5" transform="matrix(1,0,0,1,877,9546)" fill="none" ed:tosuperid="1129" stroke-linecap="round" stroke="#696969" ed:parentid="1019" stroke-linejoin="round"/><path id="1132" d="M-13.5,59C5.4,59,-13.5,-59,13.5,-59" transform="matrix(1,0,0,1,877,9561)" fill="none" ed:tosuperid="1131" stroke-linecap="round" stroke="#696969" ed:parentid="1019" stroke-linejoin="round"/><path id="1134" d="M-13.5,43.5C5,43.5,-12.6,-43.5,13.5,-43.5" transform="matrix(1,0,0,1,877,9577)" fill="none" ed:tosuperid="1133" stroke-linecap="round" stroke="#696969" ed:parentid="1019" stroke-linejoin="round"/><path id="1136" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,877,9628)" fill="none" ed:tosuperid="1135" stroke-linecap="round" stroke="#696969" ed:parentid="1019" stroke-linejoin="round"/><path id="1138" d="M-13.5,35.8C4.3,35.8,-10.9,-35.8,13.5,-35.8" transform="matrix(1,0,0,1,998,9600)" fill="none" ed:tosuperid="1137" stroke-linecap="round" stroke="#696969" ed:parentid="1135" stroke-linejoin="round"/><path id="1140" d="M-13.5,10.8C-0.2,10.8,-0.4,-10.8,13.5,-10.8" transform="matrix(1,0,0,1,998,9625)" fill="none" ed:tosuperid="1139" stroke-linecap="round" stroke="#696969" ed:parentid="1135" stroke-linejoin="round"/><path id="1142" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,998,9640)" fill="none" ed:tosuperid="1141" stroke-linecap="round" stroke="#696969" ed:parentid="1135" stroke-linejoin="round"/><path id="1144" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,998,9656)" fill="none" ed:tosuperid="1143" stroke-linecap="round" stroke="#696969" ed:parentid="1135" stroke-linejoin="round"/><path id="1146" d="M-13.5,-35.8C4.3,-35.8,-10.9,35.8,13.5,35.8" transform="matrix(1,0,0,1,998,9671)" fill="none" ed:tosuperid="1145" stroke-linecap="round" stroke="#696969" ed:parentid="1135" stroke-linejoin="round"/><path id="1148" d="M-13.5,-71.5C5.4,-71.5,-13.5,71.5,13.5,71.5" transform="matrix(1,0,0,1,877,9692)" fill="none" ed:tosuperid="1147" stroke-linecap="round" stroke="#696969" ed:parentid="1019" stroke-linejoin="round"/><path id="1150" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,959,9751)" fill="none" ed:tosuperid="1149" stroke-linecap="round" stroke="#696969" ed:parentid="1147" stroke-linejoin="round"/><path id="1152" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,959,9776)" fill="none" ed:tosuperid="1151" stroke-linecap="round" stroke="#696969" ed:parentid="1147" stroke-linejoin="round"/><path id="1154" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,849,9819)" fill="none" ed:tosuperid="1153" stroke-linecap="round" stroke="#696969" ed:parentid="1021" stroke-linejoin="round"/><path id="1156" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,889,9866)" fill="none" ed:tosuperid="1155" stroke-linecap="round" stroke="#696969" ed:parentid="1023" stroke-linejoin="round"/><path id="1158" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,889,9881)" fill="none" ed:tosuperid="1157" stroke-linecap="round" stroke="#696969" ed:parentid="1023" stroke-linejoin="round"/><path id="1160" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,889,9897)" fill="none" ed:tosuperid="1159" stroke-linecap="round" stroke="#696969" ed:parentid="1023" stroke-linejoin="round"/><path id="1162" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,825,9951)" fill="none" ed:tosuperid="1161" stroke-linecap="round" stroke="#696969" ed:parentid="1025" stroke-linejoin="round"/><path id="1164" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" transform="matrix(1,0,0,1,825,9966)" fill="none" ed:tosuperid="1163" stroke-linecap="round" stroke="#696969" ed:parentid="1025" stroke-linejoin="round"/><path id="1166" d="M-13.5,10.8C-0.2,10.8,-0.4,-10.8,13.5,-10.8" transform="matrix(1,0,0,1,835,10035)" fill="none" ed:tosuperid="1165" stroke-linecap="round" stroke="#696969" ed:parentid="1027" stroke-linejoin="round"/><path id="1168" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,835,10050)" fill="none" ed:tosuperid="1167" stroke-linecap="round" stroke="#696969" ed:parentid="1027" stroke-linejoin="round"/><path id="1170" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,835,10066)" fill="none" ed:tosuperid="1169" stroke-linecap="round" stroke="#696969" ed:parentid="1027" stroke-linejoin="round"/><path id="1172" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,869,10131)" fill="none" ed:tosuperid="1171" stroke-linecap="round" stroke="#696969" ed:parentid="1029" stroke-linejoin="round"/><path id="1174" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,953,10181)" fill="none" ed:tosuperid="1173" stroke-linecap="round" stroke="#696969" ed:parentid="1031" stroke-linejoin="round"/><path id="1176" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,872,10233)" fill="none" ed:tosuperid="1175" stroke-linecap="round" stroke="#696969" ed:parentid="1033" stroke-linejoin="round"/><path id="1178" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,872,10248)" fill="none" ed:tosuperid="1177" stroke-linecap="round" stroke="#696969" ed:parentid="1033" stroke-linejoin="round"/><path id="1180" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,872,10264)" fill="none" ed:tosuperid="1179" stroke-linecap="round" stroke="#696969" ed:parentid="1033" stroke-linejoin="round"/><path id="1182" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,1017,10310)" fill="none" ed:tosuperid="1181" stroke-linecap="round" stroke="#696969" ed:parentid="1035" stroke-linejoin="round"/><path id="1184" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,958,10341)" fill="none" ed:tosuperid="1183" stroke-linecap="round" stroke="#696969" ed:parentid="1037" stroke-linejoin="round"/><path id="1186" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,901,10400)" fill="none" ed:tosuperid="1185" stroke-linecap="round" stroke="#696969" ed:parentid="1039" stroke-linejoin="round"/><path id="1188" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,901,10425)" fill="none" ed:tosuperid="1187" stroke-linecap="round" stroke="#696969" ed:parentid="1039" stroke-linejoin="round"/><path id="1190" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,901,10441)" fill="none" ed:tosuperid="1189" stroke-linecap="round" stroke="#696969" ed:parentid="1039" stroke-linejoin="round"/><path id="1192" d="M-13.5,-28C3.2,-28,-8.3,28,13.5,28" transform="matrix(1,0,0,1,901,10456)" fill="none" ed:tosuperid="1191" stroke-linecap="round" stroke="#696969" ed:parentid="1039" stroke-linejoin="round"/><path id="1194" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,689,10515)" fill="none" ed:tosuperid="1193" stroke-linecap="round" stroke="#696969" ed:parentid="184" stroke-linejoin="round"/><path id="1196" d="M-13.5,65.5C5.4,65.5,-13.5,-65.5,13.5,-65.5" transform="matrix(1,0,0,1,707,10631)" fill="none" ed:tosuperid="1195" stroke-linecap="round" stroke="#696969" ed:parentid="186" stroke-linejoin="round"/><path id="1198" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,815,10610)" fill="none" ed:tosuperid="1197" stroke-linecap="round" stroke="#696969" ed:parentid="1041" stroke-linejoin="round"/><path id="1200" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" transform="matrix(1,0,0,1,921,10675)" fill="none" ed:tosuperid="1199" stroke-linecap="round" stroke="#696969" ed:parentid="1043" stroke-linejoin="round"/><path id="1204" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,925,10729)" fill="none" ed:tosuperid="1203" stroke-linecap="round" stroke="#696969" ed:parentid="1045" stroke-linejoin="round"/><path id="1206" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,867,10785)" fill="none" ed:tosuperid="1205" stroke-linecap="round" stroke="#696969" ed:parentid="1047" stroke-linejoin="round"/><path id="1208" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" transform="matrix(1,0,0,1,867,10801)" fill="none" ed:tosuperid="1207" stroke-linecap="round" stroke="#696969" ed:parentid="1047" stroke-linejoin="round"/><path id="1210" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,867,10826)" fill="none" ed:tosuperid="1209" stroke-linecap="round" stroke="#696969" ed:parentid="1047" stroke-linejoin="round"/><path id="1214" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" transform="matrix(1,0,0,1,828,10904)" fill="none" ed:tosuperid="1213" stroke-linecap="round" stroke="#696969" ed:parentid="1049" stroke-linejoin="round"/><path id="1216" d="M-13.5,-17.3C1.2,-17.3,-3.7,17.3,13.5,17.3" transform="matrix(1,0,0,1,828,10929)" fill="none" ed:tosuperid="1215" stroke-linecap="round" stroke="#696969" ed:parentid="1049" stroke-linejoin="round"/><path id="1218" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,879,10991)" fill="none" ed:tosuperid="1217" stroke-linecap="round" stroke="#696969" ed:parentid="1051" stroke-linejoin="round"/><path id="1222" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,856,11027)" fill="none" ed:tosuperid="1221" stroke-linecap="round" stroke="#696969" ed:parentid="1053" stroke-linejoin="round"/><path id="1226" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,842,11058)" fill="none" ed:tosuperid="1225" stroke-linecap="round" stroke="#696969" ed:parentid="1055" stroke-linejoin="round"/><path id="1228" d="M-13.5,417.9C5.4,417.9,-13.5,-417.9,13.5,-417.9" transform="matrix(1,0,0,1,579,11614)" fill="none" ed:tosuperid="1227" stroke-linecap="round" stroke="#696969" ed:parentid="114" stroke-linejoin="round"/><path id="1230" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" transform="matrix(1,0,0,1,676,11172)" fill="none" ed:tosuperid="1229" stroke-linecap="round" stroke="#696969" ed:parentid="1227" stroke-linejoin="round"/><path id="1232" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,676,11197)" fill="none" ed:tosuperid="1231" stroke-linecap="round" stroke="#696969" ed:parentid="1227" stroke-linejoin="round"/><path id="1234" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" transform="matrix(1,0,0,1,676,11222)" fill="none" ed:tosuperid="1233" stroke-linecap="round" stroke="#696969" ed:parentid="1227" stroke-linejoin="round"/><path id="1236" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,698,11292)" fill="none" ed:tosuperid="1235" stroke-linecap="round" stroke="#696969" ed:parentid="192" stroke-linejoin="round"/><path id="1238" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,685,11340)" fill="none" ed:tosuperid="1237" stroke-linecap="round" stroke="#696969" ed:parentid="194" stroke-linejoin="round"/><path id="1240" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,685,11365)" fill="none" ed:tosuperid="1239" stroke-linecap="round" stroke="#696969" ed:parentid="194" stroke-linejoin="round"/><path id="1242" d="M-13.5,103C5.4,103,-13.5,-103,13.5,-103" transform="matrix(1,0,0,1,698,11531)" fill="none" ed:tosuperid="1241" stroke-linecap="round" stroke="#696969" ed:parentid="196" stroke-linejoin="round"/><path id="1244" d="M-13.5,78C5.4,78,-13.5,-78,13.5,-78" transform="matrix(1,0,0,1,698,11556)" fill="none" ed:tosuperid="1243" stroke-linecap="round" stroke="#696969" ed:parentid="196" stroke-linejoin="round"/><path id="1246" d="M-13.5,53C5.4,53,-13.5,-53,13.5,-53" transform="matrix(1,0,0,1,698,11581)" fill="none" ed:tosuperid="1245" stroke-linecap="round" stroke="#696969" ed:parentid="196" stroke-linejoin="round"/><path id="1248" d="M-13.5,37.5C4.5,37.5,-11.4,-37.5,13.5,-37.5" transform="matrix(1,0,0,1,698,11596)" fill="none" ed:tosuperid="1247" stroke-linecap="round" stroke="#696969" ed:parentid="196" stroke-linejoin="round"/><path id="1250" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,698,11621)" fill="none" ed:tosuperid="1249" stroke-linecap="round" stroke="#696969" ed:parentid="196" stroke-linejoin="round"/><path id="1252" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,698,11646)" fill="none" ed:tosuperid="1251" stroke-linecap="round" stroke="#696969" ed:parentid="196" stroke-linejoin="round"/><path id="1254" d="M-13.5,-37.5C4.5,-37.5,-11.4,37.5,13.5,37.5" transform="matrix(1,0,0,1,698,11671)" fill="none" ed:tosuperid="1253" stroke-linecap="round" stroke="#696969" ed:parentid="196" stroke-linejoin="round"/><path id="1256" d="M-13.5,-72C5.4,-72,-13.5,72,13.5,72" transform="matrix(1,0,0,1,698,11706)" fill="none" ed:tosuperid="1255" stroke-linecap="round" stroke="#696969" ed:parentid="196" stroke-linejoin="round"/><path id="1258" d="M-13.5,-97C5.4,-97,-13.5,97,13.5,97" transform="matrix(1,0,0,1,698,11731)" fill="none" ed:tosuperid="1257" stroke-linecap="round" stroke="#696969" ed:parentid="196" stroke-linejoin="round"/><path id="1260" d="M-13.5,-112.5C5.4,-112.5,-13.5,112.5,13.5,112.5" transform="matrix(1,0,0,1,698,11746)" fill="none" ed:tosuperid="1259" stroke-linecap="round" stroke="#696969" ed:parentid="196" stroke-linejoin="round"/><path id="1262" d="M-13.5,93.5C5.4,93.5,-13.5,-93.5,13.5,-93.5" transform="matrix(1,0,0,1,672,11983)" fill="none" ed:tosuperid="1261" stroke-linecap="round" stroke="#696969" ed:parentid="198" stroke-linejoin="round"/><path id="1264" d="M-13.5,68.5C5.4,68.5,-13.5,-68.5,13.5,-68.5" transform="matrix(1,0,0,1,672,12008)" fill="none" ed:tosuperid="1263" stroke-linecap="round" stroke="#696969" ed:parentid="198" stroke-linejoin="round"/><path id="1266" d="M-13.5,32.8C3.9,32.8,-10,-32.8,13.5,-32.8" transform="matrix(1,0,0,1,672,12044)" fill="none" ed:tosuperid="1265" stroke-linecap="round" stroke="#696969" ed:parentid="198" stroke-linejoin="round"/><path id="1268" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,815,11991)" fill="none" ed:tosuperid="1267" stroke-linecap="round" stroke="#696969" ed:parentid="1265" stroke-linejoin="round"/><path id="1270" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" transform="matrix(1,0,0,1,815,12006)" fill="none" ed:tosuperid="1269" stroke-linecap="round" stroke="#696969" ed:parentid="1265" stroke-linejoin="round"/><path id="1272" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" transform="matrix(1,0,0,1,815,12031)" fill="none" ed:tosuperid="1271" stroke-linecap="round" stroke="#696969" ed:parentid="1265" stroke-linejoin="round"/><path id="1274" d="M-13.5,-40.5C4.8,-40.5,-12.1,40.5,13.5,40.5" transform="matrix(1,0,0,1,672,12117)" fill="none" ed:tosuperid="1273" stroke-linecap="round" stroke="#696969" ed:parentid="198" stroke-linejoin="round"/><path id="1276" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" transform="matrix(1,0,0,1,815,12130)" fill="none" ed:tosuperid="1275" stroke-linecap="round" stroke="#696969" ed:parentid="1273" stroke-linejoin="round"/><path id="1278" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,815,12155)" fill="none" ed:tosuperid="1277" stroke-linecap="round" stroke="#696969" ed:parentid="1273" stroke-linejoin="round"/><path id="1280" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,815,12170)" fill="none" ed:tosuperid="1279" stroke-linecap="round" stroke="#696969" ed:parentid="1273" stroke-linejoin="round"/><path id="1282" d="M-13.5,-37.5C4.5,-37.5,-11.4,37.5,13.5,37.5" transform="matrix(1,0,0,1,815,12195)" fill="none" ed:tosuperid="1281" stroke-linecap="round" stroke="#696969" ed:parentid="1273" stroke-linejoin="round"/><path id="1284" d="M-13.5,-93.5C5.4,-93.5,-13.5,93.5,13.5,93.5" transform="matrix(1,0,0,1,672,12170)" fill="none" ed:tosuperid="1283" stroke-linecap="round" stroke="#696969" ed:parentid="198" stroke-linejoin="round"/><path id="1286" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,802,12264)" fill="none" ed:tosuperid="1285" stroke-linecap="round" stroke="#696969" ed:parentid="1283" stroke-linejoin="round"/><path id="1288" d="M-13.5,71.5C5.4,71.5,-13.5,-71.5,13.5,-71.5" transform="matrix(1,0,0,1,713,12366)" fill="none" ed:tosuperid="1287" stroke-linecap="round" stroke="#696969" ed:parentid="200" stroke-linejoin="round"/><path id="1290" d="M-13.5,56C5.4,56,-13.5,-56,13.5,-56" transform="matrix(1,0,0,1,713,12382)" fill="none" ed:tosuperid="1289" stroke-linecap="round" stroke="#696969" ed:parentid="200" stroke-linejoin="round"/><path id="1292" d="M-13.5,31C3.7,31,-9.4,-31,13.5,-31" transform="matrix(1,0,0,1,713,12407)" fill="none" ed:tosuperid="1291" stroke-linecap="round" stroke="#696969" ed:parentid="200" stroke-linejoin="round"/><path id="1294" d="M-13.5,6C-1.3,6,2.1,-6,13.5,-6" transform="matrix(1,0,0,1,713,12432)" fill="none" ed:tosuperid="1293" stroke-linecap="round" stroke="#696969" ed:parentid="200" stroke-linejoin="round"/><path id="1296" d="M-13.5,-40.5C4.8,-40.5,-12.1,40.5,13.5,40.5" transform="matrix(1,0,0,1,713,12478)" fill="none" ed:tosuperid="1295" stroke-linecap="round" stroke="#696969" ed:parentid="200" stroke-linejoin="round"/><path id="1298" d="M-13.5,31C3.7,31,-9.4,-31,13.5,-31" transform="matrix(1,0,0,1,810,12488)" fill="none" ed:tosuperid="1297" stroke-linecap="round" stroke="#696969" ed:parentid="1295" stroke-linejoin="round"/><path id="1300" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,810,12503)" fill="none" ed:tosuperid="1299" stroke-linecap="round" stroke="#696969" ed:parentid="1295" stroke-linejoin="round"/><path id="1302" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,810,12534)" fill="none" ed:tosuperid="1301" stroke-linecap="round" stroke="#696969" ed:parentid="1295" stroke-linejoin="round"/><path id="1304" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,907,12534)" fill="none" ed:tosuperid="1303" stroke-linecap="round" stroke="#696969" ed:parentid="1301" stroke-linejoin="round"/><path id="1306" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,907,12550)" fill="none" ed:tosuperid="1305" stroke-linecap="round" stroke="#696969" ed:parentid="1301" stroke-linejoin="round"/><path id="1308" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" transform="matrix(1,0,0,1,907,12565)" fill="none" ed:tosuperid="1307" stroke-linecap="round" stroke="#696969" ed:parentid="1301" stroke-linejoin="round"/><path id="1310" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" transform="matrix(1,0,0,1,698,12624)" fill="none" ed:tosuperid="1309" stroke-linecap="round" stroke="#696969" ed:parentid="202" stroke-linejoin="round"/><path id="1312" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,698,12649)" fill="none" ed:tosuperid="1311" stroke-linecap="round" stroke="#696969" ed:parentid="202" stroke-linejoin="round"/><path id="1314" d="M-13.5,45.3C5.1,45.3,-12.9,-45.3,13.5,-45.3" transform="matrix(1,0,0,1,711,12757)" fill="none" ed:tosuperid="1313" stroke-linecap="round" stroke="#696969" ed:parentid="204" stroke-linejoin="round"/><path id="1450" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" transform="matrix(1,0,0,1,711,12782)" fill="none" ed:tosuperid="1449" stroke-linecap="round" stroke="#696969" ed:parentid="204" stroke-linejoin="round"/><path id="1452" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,711,12807)" fill="none" ed:tosuperid="1451" stroke-linecap="round" stroke="#696969" ed:parentid="204" stroke-linejoin="round"/><path id="1454" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" transform="matrix(1,0,0,1,711,12832)" fill="none" ed:tosuperid="1453" stroke-linecap="round" stroke="#696969" ed:parentid="204" stroke-linejoin="round"/><path id="1458" d="M-13.5,-54.8C5.4,-54.8,-13.5,54.8,13.5,54.8" transform="matrix(1,0,0,1,711,12857)" fill="none" ed:tosuperid="1457" stroke-linecap="round" stroke="#696969" ed:parentid="204" stroke-linejoin="round"/><path id="1460" d="M-13.5,168.4C5.4,168.4,-13.5,-168.4,13.5,-168.4" transform="matrix(1,0,0,1,590,13187)" fill="none" ed:tosuperid="1459" stroke-linecap="round" stroke="#696969" ed:parentid="116" stroke-linejoin="round"/><path id="1462" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,709,13085)" fill="none" ed:tosuperid="1461" stroke-linecap="round" stroke="#696969" ed:parentid="208" stroke-linejoin="round"/><path id="1464" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,780,13122)" fill="none" ed:tosuperid="1463" stroke-linecap="round" stroke="#696969" ed:parentid="1057" stroke-linejoin="round"/><path id="1466" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,780,13138)" fill="none" ed:tosuperid="1465" stroke-linecap="round" stroke="#696969" ed:parentid="1057" stroke-linejoin="round"/><path id="1468" d="M-13.5,40.5C4.8,40.5,-12.1,-40.5,13.5,-40.5" transform="matrix(1,0,0,1,749,13222)" fill="none" ed:tosuperid="1467" stroke-linecap="round" stroke="#696969" ed:parentid="210" stroke-linejoin="round"/><path id="1470" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" transform="matrix(1,0,0,1,749,13247)" fill="none" ed:tosuperid="1469" stroke-linecap="round" stroke="#696969" ed:parentid="210" stroke-linejoin="round"/><path id="1472" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" transform="matrix(1,0,0,1,749,13272)" fill="none" ed:tosuperid="1471" stroke-linecap="round" stroke="#696969" ed:parentid="210" stroke-linejoin="round"/><path id="1474" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,896,13312)" fill="none" ed:tosuperid="1473" stroke-linecap="round" stroke="#696969" ed:parentid="1061" stroke-linejoin="round"/><path id="1476" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,709,13374)" fill="none" ed:tosuperid="1475" stroke-linecap="round" stroke="#696969" ed:parentid="212" stroke-linejoin="round"/><path id="1478" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,731,13405)" fill="none" ed:tosuperid="1477" stroke-linecap="round" stroke="#696969" ed:parentid="214" stroke-linejoin="round"/><path id="1480" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" transform="matrix(1,0,0,1,748,13458)" fill="none" ed:tosuperid="1479" stroke-linecap="round" stroke="#696969" ed:parentid="216" stroke-linejoin="round"/><path id="1482" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" transform="matrix(1,0,0,1,748,13474)" fill="none" ed:tosuperid="1481" stroke-linecap="round" stroke="#696969" ed:parentid="216" stroke-linejoin="round"/><path id="1484" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" transform="matrix(1,0,0,1,692,13517)" fill="none" ed:tosuperid="1483" stroke-linecap="round" stroke="#696969" ed:parentid="218" stroke-linejoin="round"/><path id="1486" d="M-13.5,29.8C3.5,29.8,-9,-29.8,13.5,-29.8" transform="matrix(1,0,0,1,812,13597)" fill="none" ed:tosuperid="1485" stroke-linecap="round" stroke="#696969" ed:parentid="220" stroke-linejoin="round"/><path id="1488" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" transform="matrix(1,0,0,1,812,13631)" fill="none" ed:tosuperid="1487" stroke-linecap="round" stroke="#696969" ed:parentid="220" stroke-linejoin="round"/><path id="1490" d="M-13.5,-39.3C4.7,-39.3,-11.8,39.3,13.5,39.3" transform="matrix(1,0,0,1,812,13666)" fill="none" ed:tosuperid="1489" stroke-linecap="round" stroke="#696969" ed:parentid="220" stroke-linejoin="round"/><g id="101" transform="matrix(1,0,0,1,23,6850)" ed:width="346" ed:topictype="mainidea" ed:height="57" ed:layout="rightmap"><path stroke-width="3" d="M4,0L342,0C344.7,0,346,1.3,346,4L346,53C346,55.7,344.7,57,342,57L4,57C1.3,57,0,55.7,0,53L0,4C0,1.3,1.3,0,4,0z" fill="#435fbc" stroke="#435fbc" stroke-linejoin="round"/><text class="st1"><tspan x="21" style="white-space:pre" y="34.5">《你不知道的JavaScript（下卷）》</tspan></text></g><g id="102" transform="matrix(1,0,0,1,432,124)" ed:width="199" ed:parentid="101" ed:height="37"><path d="M4,0L195,0C197.7,0,199,1.3,199,4L199,33C199,35.7,197.7,37,195,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第1章 ES？现在与未来</tspan></text></g><g id="104" transform="matrix(1,0,0,1,432,2036)" ed:width="117" ed:parentid="101" ed:height="37"><path d="M4,0L113,0C115.7,0,117,1.3,117,4L117,33C117,35.7,115.7,37,113,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第2章 语法</tspan></text></g><g id="106" transform="matrix(1,0,0,1,432,5325)" ed:width="149" ed:parentid="101" ed:height="37"><path d="M4,0L145,0C147.7,0,149,1.3,149,4L149,33C149,35.7,147.7,37,145,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第3章 代码组织</tspan></text></g><g id="108" transform="matrix(1,0,0,1,432,7402)" ed:width="165" ed:parentid="101" ed:height="37"><path d="M4,0L161,0C163.7,0,165,1.3,165,4L165,33C165,35.7,163.7,37,161,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第4章 异步流控制</tspan></text></g><g id="110" transform="matrix(1,0,0,1,432,8628)" ed:width="117" ed:parentid="101" ed:height="37"><path d="M4,0L113,0C115.7,0,117,1.3,117,4L117,33C117,35.7,115.7,37,113,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第5章 集合</tspan></text></g><g id="112" transform="matrix(1,0,0,1,432,10190)" ed:width="143" ed:parentid="101" ed:height="37"><path d="M4,0L139,0C141.7,0,143,1.3,143,4L143,33C143,35.7,141.7,37,139,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第6章 新增API</tspan></text></g><g id="114" transform="matrix(1,0,0,1,432,12014)" ed:width="133" ed:parentid="101" ed:height="37"><path d="M4,0L129,0C131.7,0,133,1.3,133,4L133,33C133,35.7,131.7,37,129,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第7章 元编程</tspan></text></g><g id="116" transform="matrix(1,0,0,1,432,13337)" ed:width="144" ed:parentid="101" ed:height="37"><path d="M4,0L140,0C142.7,0,144,1.3,144,4L144,33C144,35.7,142.7,37,140,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" fill="#ebecf3" stroke="#ebecf3" stroke-linejoin="round"/><text class="st2"><tspan x="18" style="white-space:pre" y="23.4">第8章 ES6之后</tspan></text></g><g id="118" transform="matrix(1,0,0,1,658,90)" ed:width="66" ed:parentid="102" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.1.版本</tspan></text></g><g id="120" transform="matrix(1,0,0,1,658,165)" ed:width="104" ed:parentid="102" ed:height="24.5"><path d="M0,24.5L104,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.2.transpiling</tspan></text></g><g id="122" transform="matrix(1,0,0,1,658,240)" ed:width="66" ed:parentid="102" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.3.小结</tspan></text></g><g id="124" transform="matrix(1,0,0,1,576,516)" ed:width="118" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L118,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.1.块作用域声明</tspan></text></g><g id="126" transform="matrix(1,0,0,1,576,799)" ed:width="110" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L110,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.2.spread/rest</tspan></text></g><g id="128" transform="matrix(1,0,0,1,576,955)" ed:width="105" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L105,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.3.默认参数值</tspan></text></g><g id="130" transform="matrix(1,0,0,1,576,1158)" ed:width="66" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.4.解构</tspan></text></g><g id="132" transform="matrix(1,0,0,1,576,1335)" ed:width="157" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L157,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.5.太多，太少，刚刚好</tspan></text></g><g id="134" transform="matrix(1,0,0,1,576,1519)" ed:width="131" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L131,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.6.对象字面量扩展</tspan></text></g><g id="136" transform="matrix(1,0,0,1,576,1739)" ed:width="105" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L105,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.7.模板字面量</tspan></text></g><g id="138" transform="matrix(1,0,0,1,576,2029)" ed:width="92" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L92,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.8.箭头函数</tspan></text></g><g id="140" transform="matrix(1,0,0,1,576,2275)" ed:width="106" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L106,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.9.for...of循环</tspan></text></g><g id="142" transform="matrix(1,0,0,1,576,2562)" ed:width="113" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L113,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.10.正则表达式</tspan></text></g><g id="144" transform="matrix(1,0,0,1,576,2799)" ed:width="139" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L139,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.11.数字字面量扩展</tspan></text></g><g id="146" transform="matrix(1,0,0,1,576,2996)" ed:width="99" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L99,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.12.Unicode</tspan></text></g><g id="148" transform="matrix(1,0,0,1,576,3435)" ed:width="74" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L74,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.13.符号</tspan></text></g><g id="150" transform="matrix(1,0,0,1,576,3753)" ed:width="74" ed:parentid="104" ed:height="24.5"><path d="M0,24.5L74,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.14.小结</tspan></text></g><g id="152" transform="matrix(1,0,0,1,608,4023)" ed:width="79" ed:parentid="106" ed:height="24.5"><path d="M0,24.5L79,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.1.迭代器</tspan></text></g><g id="154" transform="matrix(1,0,0,1,608,4705)" ed:width="79" ed:parentid="106" ed:height="24.5"><path d="M0,24.5L79,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.2.生成器</tspan></text></g><g id="156" transform="matrix(1,0,0,1,608,5727)" ed:width="66" ed:parentid="106" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.3.模块</tspan></text></g><g id="158" transform="matrix(1,0,0,1,608,6447)" ed:width="53" ed:parentid="106" ed:height="24.5"><path d="M0,24.5L53,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.4.类</tspan></text></g><g id="160" transform="matrix(1,0,0,1,608,6734)" ed:width="66" ed:parentid="106" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.5.小结</tspan></text></g><g id="162" transform="matrix(1,0,0,1,624,7299)" ed:width="89" ed:parentid="108" ed:height="24.5"><path d="M0,24.5L89,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.1.Promise</tspan></text></g><g id="164" transform="matrix(1,0,0,1,624,7756)" ed:width="138" ed:parentid="108" ed:height="24.5"><path d="M0,24.5L138,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.2.生成器+Promise</tspan></text></g><g id="166" transform="matrix(1,0,0,1,624,7897)" ed:width="66" ed:parentid="108" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.3.小结</tspan></text></g><g id="168" transform="matrix(1,0,0,1,576,8291)" ed:width="110" ed:parentid="110" ed:height="24.5"><path d="M0,24.5L110,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.1.TypedArray</tspan></text></g><g id="170" transform="matrix(1,0,0,1,576,8590)" ed:width="68" ed:parentid="110" ed:height="24.5"><path d="M0,24.5L68,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.2.Map</tspan></text></g><g id="172" transform="matrix(1,0,0,1,576,8793)" ed:width="102" ed:parentid="110" ed:height="24.5"><path d="M0,24.5L102,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.3.WeakMap</tspan></text></g><g id="174" transform="matrix(1,0,0,1,576,8945)" ed:width="60" ed:parentid="110" ed:height="24.5"><path d="M0,24.5L60,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.4.Set</tspan></text></g><g id="176" transform="matrix(1,0,0,1,576,9057)" ed:width="94" ed:parentid="110" ed:height="24.5"><path d="M0,24.5L94,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.5.WeakSet</tspan></text></g><g id="178" transform="matrix(1,0,0,1,576,9192)" ed:width="66" ed:parentid="110" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.6.小结</tspan></text></g><g id="180" transform="matrix(1,0,0,1,602,9745)" ed:width="73" ed:parentid="112" ed:height="24.5"><path d="M0,24.5L73,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.1.Array</tspan></text></g><g id="182" transform="matrix(1,0,0,1,602,10326)" ed:width="81" ed:parentid="112" ed:height="24.5"><path d="M0,24.5L81,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.2.Object</tspan></text></g><g id="184" transform="matrix(1,0,0,1,602,10491)" ed:width="73" ed:parentid="112" ed:height="24.5"><path d="M0,24.5L73,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.3.Math</tspan></text></g><g id="186" transform="matrix(1,0,0,1,602,10672)" ed:width="91" ed:parentid="112" ed:height="24.5"><path d="M0,24.5L91,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.4.Number</tspan></text></g><g id="188" transform="matrix(1,0,0,1,602,10943)" ed:width="79" ed:parentid="112" ed:height="24.5"><path d="M0,24.5L79,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.5.字符串</tspan></text></g><g id="190" transform="matrix(1,0,0,1,602,11065)" ed:width="66" ed:parentid="112" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.6.小结</tspan></text></g><g id="192" transform="matrix(1,0,0,1,592,11263)" ed:width="92" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L92,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.1.函数名称</tspan></text></g><g id="194" transform="matrix(1,0,0,1,592,11328)" ed:width="79" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L79,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.2.元属性</tspan></text></g><g id="196" transform="matrix(1,0,0,1,592,11609)" ed:width="92" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L92,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.3.公开符号</tspan></text></g><g id="198" transform="matrix(1,0,0,1,592,12052)" ed:width="66" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.4.代理</tspan></text></g><g id="200" transform="matrix(1,0,0,1,592,12413)" ed:width="107" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L107,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.5.Reflect API</tspan></text></g><g id="202" transform="matrix(1,0,0,1,592,12612)" ed:width="92" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L92,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.6.特性测试</tspan></text></g><g id="204" transform="matrix(1,0,0,1,592,12778)" ed:width="105" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L105,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.7.尾递归调用</tspan></text></g><g id="206" transform="matrix(1,0,0,1,592,12918)" ed:width="66" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.8.小结</tspan></text></g><g id="208" transform="matrix(1,0,0,1,603,13076)" ed:width="92" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L92,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.1.异步函数</tspan></text></g><g id="210" transform="matrix(1,0,0,1,603,13238)" ed:width="132" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L132,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.2.Object.observe</tspan></text></g><g id="212" transform="matrix(1,0,0,1,603,13350)" ed:width="92" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L92,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.3.幂运算符</tspan></text></g><g id="214" transform="matrix(1,0,0,1,603,13381)" ed:width="114" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L114,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.4.对象属性与...</tspan></text></g><g id="216" transform="matrix(1,0,0,1,603,13437)" ed:width="131" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L131,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.5.Array#includes</tspan></text></g><g id="218" transform="matrix(1,0,0,1,603,13493)" ed:width="75" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L75,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.6.SIMD</tspan></text></g><g id="220" transform="matrix(1,0,0,1,603,13602)" ed:width="195" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L195,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.7.WebAssembly（WASM）</tspan></text></g><g id="222" transform="matrix(1,0,0,1,603,13712)" ed:width="66" ed:parentid="116" ed:height="24.5"><path d="M0,24.5L66,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.8.小结</tspan></text></g><g id="224" transform="matrix(1,0,0,1,658,21)" ed:width="514" ed:parentid="102" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">与ES5不同，ES6并不仅仅是为这个语言新增一组API。它包括一组新的语法形式，其中</tspan><tspan x="8" style="white-space:pre" y="35.1">的一部分可能是要花些时间才能理解和熟悉的。它还包括各种各样的新的组织形式和操</tspan><tspan x="8" style="white-space:pre" y="54.1">作各种数据类型的新的辅助API</tspan></text></g><g id="226" transform="matrix(1,0,0,1,789,121)" ed:width="514" ed:parentid="120" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">transpiling（transformation+compiling，转换+编译）的技术。简单的说，其思路是</tspan><tspan x="8" style="white-space:pre" y="35.1">利用专门的工具把你的ES6代码转换为等价（或近似）的可以在ES5环境下工作的代码</tspan></text></g><g id="228" transform="matrix(1,0,0,1,789,171)" ed:width="514" ed:parentid="120" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">并非所有的ES6新特性都需要使用transpiler，还有polyfill（也称为shim）这种模式。</tspan><tspan x="8" style="white-space:pre" y="35.1">在可能的情况下，polyfill会为新环境中的行为定义在旧环境中的等价行为。语法不能</tspan><tspan x="8" style="white-space:pre" y="54.1">polyfill，而API通常可以</tspan></text></g><g id="230" transform="matrix(1,0,0,1,721,298)" ed:width="514" ed:parentid="124" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript中变量作用域的基本单元一直是function。如果需要创建一个块作用域，最</tspan><tspan x="8" style="white-space:pre" y="35.1">普遍的方法除了普通的函数声明之外，就是立即调用函数表达式（IIFE）</tspan></text></g><g id="232" transform="matrix(1,0,0,1,721,438)" ed:width="96" ed:parentid="124" ed:height="24.5"><path d="M0,24.5L96,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.1.1.let 声明</tspan></text></g><g id="234" transform="matrix(1,0,0,1,844,348)" ed:width="409" ed:parentid="232" ed:height="24.5"><path d="M0,24.5L409,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可以创建绑定到任意块的声明。只需要一对{..}就可以创建一个作用域</tspan></text></g><g id="236" transform="matrix(1,0,0,1,844,379)" ed:width="514" ed:parentid="232" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">过早访问let 声明的引用导致的这个ReferenceError严格说叫做临时死亡区错误(TDZ)--</tspan><tspan x="8" style="white-space:pre" y="35.1">你在访问一个已经声明但没有初始化的变量</tspan></text></g><g id="238" transform="matrix(1,0,0,1,844,429)" ed:width="514" ed:parentid="232" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">声明时没有赋值的变量会自动赋值为undefined，所以let b；就等价于let b = </tspan><tspan x="8" style="white-space:pre" y="35.1">undefined；</tspan></text></g><g id="240" transform="matrix(1,0,0,1,844,479)" ed:width="383" ed:parentid="232" ed:height="24.5"><path d="M0,24.5L383,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">未声明的变量，所以typeof是检查它是否存在的唯一安全的方法</tspan></text></g><g id="242" transform="matrix(1,0,0,1,844,510)" ed:width="514" ed:parentid="232" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">为什么我坚持认为应该把所有的let声明放在其所在作用域的最前面了，这样就完全避免</tspan><tspan x="8" style="white-space:pre" y="35.1">了不小心过早访问的问题</tspan></text></g><g id="244" transform="matrix(1,0,0,1,721,631)" ed:width="111" ed:parentid="124" ed:height="24.5"><path d="M0,24.5L111,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.1.2.const声明</tspan></text></g><g id="246" transform="matrix(1,0,0,1,859,560)" ed:width="147" ed:parentid="244" ed:height="24.5"><path d="M0,24.5L147,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">const ，用于创建常量</tspan></text></g><g id="248" transform="matrix(1,0,0,1,859,591)" ed:width="252" ed:parentid="244" ed:height="24.5"><path d="M0,24.5L252,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">它是一个设定了初始值之后就只读的变量</tspan></text></g><g id="250" transform="matrix(1,0,0,1,859,622)" ed:width="212" ed:parentid="244" ed:height="24.5"><path d="M0,24.5L212,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">const 声明必须要有显式的初始化</tspan></text></g><g id="252" transform="matrix(1,0,0,1,859,653)" ed:width="408" ed:parentid="244" ed:height="24.5"><path d="M0,24.5L408,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如果这个值是复杂值，比如对象或者数组，其内容仍然是可以修改的</tspan></text></g><g id="254" transform="matrix(1,0,0,1,859,684)" ed:width="514" ed:parentid="244" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">是否使用const，理论上说，引擎更容易了解这个变量的值/类型永远不会改变，那么它</tspan><tspan x="8" style="white-space:pre" y="35.1">就可以取消某些可能的追踪</tspan></text></g><g id="256" transform="matrix(1,0,0,1,721,734)" ed:width="129" ed:parentid="124" ed:height="24.5"><path d="M0,24.5L129,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.1.4.块作用域函数</tspan></text></g><g id="258" transform="matrix(1,0,0,1,877,734)" ed:width="314" ed:parentid="256" ed:height="24.5"><path d="M0,24.5L314,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">从ES6开始，块内声明的函数，其作用域在这个块内</tspan></text></g><g id="262" transform="matrix(1,0,0,1,713,765)" ed:width="514" ed:parentid="126" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">当...用在数组之前时（实际上是任何iterable），它会把这个变量“展开”为各个独立的</tspan><tspan x="8" style="white-space:pre" y="35.1">值</tspan></text></g><g id="264" transform="matrix(1,0,0,1,713,815)" ed:width="514" ed:parentid="126" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">...的另外一种常见用法基本上可以被看作反向的行为；...把一系列值收集到一起成为一</tspan><tspan x="8" style="white-space:pre" y="35.1">个数组</tspan></text></g><g id="266" transform="matrix(1,0,0,1,708,865)" ed:width="392" ed:parentid="128" ed:height="24.5"><path d="M0,24.5L392,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可能JavaScript最常见的一个技巧就是关于设定函数参数默认值的</tspan></text></g><g id="268" transform="matrix(1,0,0,1,708,896)" ed:width="514" ed:parentid="128" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">只能通过传入比“期望”更少的参数来省略最后的若干参数（例如，后侧的），而无法</tspan><tspan x="8" style="white-space:pre" y="35.1">省略位于参数列表中间或者起始处的参数</tspan></text></g><g id="270" transform="matrix(1,0,0,1,708,946)" ed:width="514" ed:parentid="128" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一个很重要的需要记住的JavaScript设计原则：undefined意味着缺失。也就是说，</tspan><tspan x="8" style="white-space:pre" y="35.1">undefined和缺失是无法区别的，至少对于函数参数来说是如此</tspan></text></g><g id="272" transform="matrix(1,0,0,1,708,1021)" ed:width="96" ed:parentid="128" ed:height="24.5"><path d="M0,24.5L96,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">默认值表达式</tspan></text></g><g id="274" transform="matrix(1,0,0,1,831,996)" ed:width="514" ed:parentid="272" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">默认值表达式是惰性求值的，这意味着它们只在需要的时候运行--也就是说，是在参数</tspan><tspan x="8" style="white-space:pre" y="35.1">的值省略或者为undefined的时候</tspan></text></g><g id="276" transform="matrix(1,0,0,1,831,1046)" ed:width="318" ed:parentid="272" ed:height="24.5"><path d="M0,24.5L318,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Function.prototype本身就是一个没有操作的空函数</tspan></text></g><g id="278" transform="matrix(1,0,0,1,669,1077)" ed:width="514" ed:parentid="130" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可以把将数组或者对象属性中带索引的值手动赋值看作结构化赋值。专门语法，专用于</tspan><tspan x="8" style="white-space:pre" y="35.1">数组解构和对象解构</tspan></text></g><g id="280" transform="matrix(1,0,0,1,669,1127)" ed:width="155" ed:parentid="130" ed:height="24.5"><path d="M0,24.5L155,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.4.1.对象属性赋值模式</tspan></text></g><g id="282" transform="matrix(1,0,0,1,669,1167)" ed:width="116" ed:parentid="130" ed:height="24.5"><path d="M0,24.5L116,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.4.2.不只是声明</tspan></text></g><g id="284" transform="matrix(1,0,0,1,669,1223)" ed:width="103" ed:parentid="130" ed:height="24.5"><path d="M0,24.5L103,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.4.3.重复赋值</tspan></text></g><g id="286" transform="matrix(1,0,0,1,812,1158)" ed:width="514" ed:parentid="282" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">除非需要把所有的赋值表达式都当作声明，否则不应该在赋值中混入声明。不然会出现</tspan><tspan x="8" style="white-space:pre" y="35.1">语法错误</tspan></text></g><g id="288" transform="matrix(1,0,0,1,799,1208)" ed:width="369" ed:parentid="284" ed:height="24.5"><path d="M0,24.5L369,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">对象解构形式允许多次列出同一个源属性（持有值类型任意）</tspan></text></g><g id="290" transform="matrix(1,0,0,1,799,1239)" ed:width="369" ed:parentid="284" ed:height="24.5"><path d="M0,24.5L369,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">记住：解构的目的不只是为了打字更少，而是为了可读性更强</tspan></text></g><g id="292" transform="matrix(1,0,0,1,760,1270)" ed:width="514" ed:parentid="132" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如果为比解构/分解出来的值更多的值赋值，那么就像期望的一样，多余的值会被赋为</tspan><tspan x="8" style="white-space:pre" y="35.1">undefined</tspan></text></g><g id="294" transform="matrix(1,0,0,1,760,1329)" ed:width="116" ed:parentid="132" ed:height="24.5"><path d="M0,24.5L116,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.5.1.默认值赋值</tspan></text></g><g id="296" transform="matrix(1,0,0,1,903,1320)" ed:width="514" ed:parentid="294" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">使用与前面默认函数参数值类似的=语法，解构的两种形式都可以提供一个用来赋值额</tspan><tspan x="8" style="white-space:pre" y="35.1">默认值</tspan></text></g><g id="298" transform="matrix(1,0,0,1,760,1370)" ed:width="103" ed:parentid="132" ed:height="24.5"><path d="M0,24.5L103,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.5.2.嵌套解构</tspan></text></g><g id="300" transform="matrix(1,0,0,1,890,1370)" ed:width="330" ed:parentid="298" ed:height="24.5"><path d="M0,24.5L330,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可以把嵌套解构当作一种展开对象名字空间的简单方法</tspan></text></g><g id="302" transform="matrix(1,0,0,1,760,1401)" ed:width="103" ed:parentid="132" ed:height="24.5"><path d="M0,24.5L103,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.5.3.解构参数</tspan></text></g><g id="304" transform="matrix(1,0,0,1,890,1401)" ed:width="504" ed:parentid="302" ed:height="24.5"><path d="M0,24.5L504,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">解构赋值/默认值会被放在参数列表中，而重组的过程会被放在函数体的return语句中</tspan></text></g><g id="306" transform="matrix(1,0,0,1,734,1432)" ed:width="103" ed:parentid="134" ed:height="24.5"><path d="M0,24.5L103,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.6.1.简洁属性</tspan></text></g><g id="308" transform="matrix(1,0,0,1,734,1472)" ed:width="103" ed:parentid="134" ed:height="24.5"><path d="M0,24.5L103,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.6.2.简洁方法</tspan></text></g><g id="310" transform="matrix(1,0,0,1,734,1528)" ed:width="116" ed:parentid="134" ed:height="24.5"><path d="M0,24.5L116,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.6.3.计算属性名</tspan></text></g><g id="312" transform="matrix(1,0,0,1,734,1575)" ed:width="154" ed:parentid="134" ed:height="24.5"><path d="M0,24.5L154,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.6.4.设定[[Prototype]]</tspan></text></g><g id="314" transform="matrix(1,0,0,1,734,1606)" ed:width="111" ed:parentid="134" ed:height="24.5"><path d="M0,24.5L111,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.6.5.super对象</tspan></text></g><g id="316" transform="matrix(1,0,0,1,864,1463)" ed:width="514" ed:parentid="308" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">严格说来，ES5定义了getter/setter字面量形式，但是没怎么被使用，主要是因为缺少</tspan><tspan x="8" style="white-space:pre" y="35.1">transpiler来处理这个新语法（实际上也是ES5新增的唯一主要新语法）</tspan></text></g><g id="318" transform="matrix(1,0,0,1,877,1513)" ed:width="344" ed:parentid="310" ed:height="24.5"><path d="M0,24.5L344,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">对象字面定义属性名位置的[..]中可以放置任意合法表达式</tspan></text></g><g id="320" transform="matrix(1,0,0,1,877,1544)" ed:width="330" ed:parentid="310" ed:height="24.5"><path d="M0,24.5L330,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">计算属性名最常见的用法可能就是和Symbols共同使用</tspan></text></g><g id="322" transform="matrix(1,0,0,1,708,1637)" ed:width="457" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L457,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">这个特性的名称非常具有误导性，其根据你对单词模板(template)的理解而定</tspan></text></g><g id="324" transform="matrix(1,0,0,1,708,1668)" ed:width="356" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L356,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">插入字符串字面量中的换行（新行）会在字符串值中被保留</tspan></text></g><g id="326" transform="matrix(1,0,0,1,708,1724)" ed:width="116" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L116,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.7.1.插入表达式</tspan></text></g><g id="328" transform="matrix(1,0,0,1,708,1811)" ed:width="142" ed:parentid="136" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.7.2.标签模板字面量</tspan></text></g><g id="330" transform="matrix(1,0,0,1,851,1699)" ed:width="514" ed:parentid="326" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在插入字符串字面量的${..}内可以出现任何合法的表达式，包括函数调用、在线函数表</tspan><tspan x="8" style="white-space:pre" y="35.1">达式调用，甚至其他插入字符串字面量</tspan></text></g><g id="332" transform="matrix(1,0,0,1,851,1749)" ed:width="434" ed:parentid="326" ed:height="24.5"><path d="M0,24.5L434,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">插入字符串字面量在它出现的词法作用域内，没有任何形式的动态作用域</tspan></text></g><g id="334" transform="matrix(1,0,0,1,877,1780)" ed:width="343" ed:parentid="328" ed:height="24.5"><path d="M0,24.5L343,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">重新命名这个特性来明确表达其功能：标签字符串字面量</tspan></text></g><g id="336" transform="matrix(1,0,0,1,877,1826)" ed:width="96" ed:parentid="328" ed:height="24.5"><path d="M0,24.5L96,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">哪些实际应用</tspan></text></g><g id="338" transform="matrix(1,0,0,1,1000,1811)" ed:width="200" ed:parentid="336" ed:height="24.5"><path d="M0,24.5L200,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">用来把数字格式化为美元表示法</tspan></text></g><g id="340" transform="matrix(1,0,0,1,1000,1842)" ed:width="265" ed:parentid="336" ed:height="24.5"><path d="M0,24.5L265,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">其他应用包括全球化、本地化等的特殊处理</tspan></text></g><g id="342" transform="matrix(1,0,0,1,695,1873)" ed:width="514" ed:parentid="138" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">箭头函数定义包括一个参数列表（零个或多个参数，如果参数个数不是一个的话要用(..)</tspan><tspan x="8" style="white-space:pre" y="35.1">包围起来），然后是标识=>，函数体放在最后</tspan></text></g><g id="344" transform="matrix(1,0,0,1,695,1923)" ed:width="304" ed:parentid="138" ed:height="24.5"><path d="M0,24.5L304,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">箭头函数总是函数表达式；并不存在箭头函数声明</tspan></text></g><g id="346" transform="matrix(1,0,0,1,695,1954)" ed:width="478" ed:parentid="138" ed:height="24.5"><path d="M0,24.5L478,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">箭头函数是匿名函数表达式--他们没有用于递归或者事件绑定/解绑定的命名引用</tspan></text></g><g id="348" transform="matrix(1,0,0,1,695,1985)" ed:width="514" ed:parentid="138" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">我认为=>箭头函数转变带来的可读性与被转化函数的长度负相关。这个函数越长，=></tspan><tspan x="8" style="white-space:pre" y="35.1">带来的好处就越小；函数越短，=>带来的好处就越大</tspan></text></g><g id="352" transform="matrix(1,0,0,1,695,2110)" ed:width="183" ed:parentid="138" ed:height="24.5"><path d="M0,24.5L183,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">不只是更短的语法，而是this</tspan></text></g><g id="354" transform="matrix(1,0,0,1,905,2035)" ed:width="514" ed:parentid="352" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">对=>的关注多数都在于从代码中去掉function、return和{..}节省了那些宝贵的键盘输</tspan><tspan x="8" style="white-space:pre" y="35.1">入</tspan></text></g><g id="356" transform="matrix(1,0,0,1,905,2085)" ed:width="514" ed:parentid="352" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">实际上，=>箭头函数的主要设计目的就是以特定的方式改变this的行为特性，解决this</tspan><tspan x="8" style="white-space:pre" y="35.1">相关编码的一个特殊而又常见的痛点</tspan></text></g><g id="358" transform="matrix(1,0,0,1,905,2135)" ed:width="313" ed:parentid="352" ed:height="24.5"><path d="M0,24.5L313,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在箭头函数内部，this绑定不是动态的，而是词法的</tspan></text></g><g id="360" transform="matrix(1,0,0,1,905,2166)" ed:width="514" ed:parentid="352" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">底线：=>是关于this、arguments和super的词法绑定。这个ES6的特性设计用来修正</tspan><tspan x="8" style="white-space:pre" y="35.1">一些常见的问题，而不是bug、巧合或者错误</tspan></text></g><g id="362" transform="matrix(1,0,0,1,709,2216)" ed:width="514" ed:parentid="140" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">for..of循环的值必须是一个iterable，或者说它必须可以转换/封箱到一个iterable对象</tspan><tspan x="8" style="white-space:pre" y="35.1">的值。iterable就是一个能够产生迭代器供循环使用的对象</tspan></text></g><g id="364" transform="matrix(1,0,0,1,709,2266)" ed:width="514" ed:parentid="140" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript中默认为（或提供）iterable的标准内建值包括：Arrays、Strings、</tspan><tspan x="8" style="white-space:pre" y="35.1">Generators、Collections/TypedArrays</tspan></text></g><g id="366" transform="matrix(1,0,0,1,709,2316)" ed:width="514" ed:parentid="140" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">for..of循环也可以通过break、continue、return（如果在函数中的话）提前终止，并</tspan><tspan x="8" style="white-space:pre" y="35.1">抛出异常</tspan></text></g><g id="368" transform="matrix(1,0,0,1,716,2472)" ed:width="136" ed:parentid="142" ed:height="24.5"><path d="M0,24.5L136,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.10.1.Unicode标识</tspan></text></g><g id="370" transform="matrix(1,0,0,1,716,2603)" ed:width="111" ed:parentid="142" ed:height="24.5"><path d="M0,24.5L111,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.10.2.定点标识</tspan></text></g><g id="372" transform="matrix(1,0,0,1,716,2709)" ed:width="153" ed:parentid="142" ed:height="24.5"><path d="M0,24.5L153,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.10.3.正则表达式flags</tspan></text></g><g id="376" transform="matrix(1,0,0,1,702,2974)" ed:width="175" ed:parentid="146" ed:height="24.5"><path d="M0,24.5L175,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.12.1.支持Unicode的字符</tspan></text></g><g id="378" transform="matrix(1,0,0,1,702,3071)" ed:width="111" ed:parentid="146" ed:height="24.5"><path d="M0,24.5L111,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.12.2.字符定位</tspan></text></g><g id="380" transform="matrix(1,0,0,1,702,3152)" ed:width="162" ed:parentid="146" ed:height="24.5"><path d="M0,24.5L162,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.12.3.Unicode标识符名</tspan></text></g><g id="382" transform="matrix(1,0,0,1,677,3541)" ed:width="111" ed:parentid="148" ed:height="24.5"><path d="M0,24.5L111,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.13.1.符号注册</tspan></text></g><g id="384" transform="matrix(1,0,0,1,677,3663)" ed:width="176" ed:parentid="148" ed:height="24.5"><path d="M0,24.5L176,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.13.2.作为对象属性的符号</tspan></text></g><g id="386" transform="matrix(1,0,0,1,716,2366)" ed:width="431" ed:parentid="142" ed:height="24.5"><path d="M0,24.5L431,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一个事实：JavaScript中的正则表达式很长时间以来基本上没有什么变化</tspan></text></g><g id="388" transform="matrix(1,0,0,1,879,2397)" ed:width="514" ed:parentid="368" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在ES6之前，正则表达式只能基于PMB字符匹配，这意味着那些扩展字符会被当作两个</tspan><tspan x="8" style="white-space:pre" y="35.1">独立的字符来匹配</tspan></text></g><g id="390" transform="matrix(1,0,0,1,879,2447)" ed:width="514" ed:parentid="368" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在ES6中，u标识符表示正则表达式用Unicode（UTF-16）字符来解释处理字符串，把</tspan><tspan x="8" style="white-space:pre" y="35.1">这样的扩展字符串当作单个实体来匹配</tspan></text></g><g id="392" transform="matrix(1,0,0,1,879,2497)" ed:width="161" ed:parentid="368" ed:height="24.5"><path d="M0,24.5L161,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">影响的是匹配部分的长度</tspan></text></g><g id="394" transform="matrix(1,0,0,1,879,2528)" ed:width="514" ed:parentid="368" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">还有一点需要注意，u标识符使得+和*这样的量词把整个Unicode码点作为单个字符而</tspan><tspan x="8" style="white-space:pre" y="35.1">应用，而不仅仅是应用于字符的低位（也就是符号的最右部分）</tspan></text></g><g id="396" transform="matrix(1,0,0,1,854,2578)" ed:width="486" ed:parentid="370" ed:height="24.5"><path d="M0,24.5L486,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6正则表达式中另外一个新增的标签模式是y，通常称为“定点（sticky）模式”</tspan></text></g><g id="398" transform="matrix(1,0,0,1,854,2609)" ed:width="514" ed:parentid="370" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">定点主要是指在正则表达式的起点有一个虚拟的锚点，只从正则表达式的lastIndex属</tspan><tspan x="8" style="white-space:pre" y="35.1">性指定的位置开始匹配</tspan></text></g><g id="400" transform="matrix(1,0,0,1,896,2659)" ed:width="514" ed:parentid="372" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6之前，想要通过检查一个正则表达式对象来判断它应用了哪些标识，需要把它从</tspan><tspan x="8" style="white-space:pre" y="35.1">source属性的内容中解析出来</tspan></text></g><g id="402" transform="matrix(1,0,0,1,896,2709)" ed:width="317" ed:parentid="372" ed:height="24.5"><path d="M0,24.5L317,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在ES6中，现在可以用新的flags属性直接得到这些值</tspan></text></g><g id="404" transform="matrix(1,0,0,1,896,2740)" ed:width="514" ed:parentid="372" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6的另一个调整是如果把标识传给已有的正则表达式，RegExp(..)构造器现在支持</tspan><tspan x="8" style="white-space:pre" y="35.1">flags</tspan></text></g><g id="406" transform="matrix(1,0,0,1,742,2790)" ed:width="514" ed:parentid="144" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">虽然可以用不同进制形式指定数字，但是数字的数字值还是保存的值，并且默认的输出</tspan><tspan x="8" style="white-space:pre" y="35.1">解释形式总是十进制</tspan></text></g><g id="408" transform="matrix(1,0,0,1,702,2840)" ed:width="514" ed:parentid="146" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Unicode字符范围从0x0000到0xFFFF，包含可能看到和接触到的所有（各种语言的）</tspan><tspan x="8" style="white-space:pre" y="35.1">标准打印字符。这组字符称为基本多语言平面（BMP）。BMP甚至包含了像雪人这样</tspan><tspan x="8" style="white-space:pre" y="54.1">的有趣的符号</tspan></text></g><g id="410" transform="matrix(1,0,0,1,702,2909)" ed:width="514" ed:parentid="146" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">现在有了可以用于作Unicode转义（在字符串和正则表达式中）的新形式，称为</tspan><tspan x="8" style="white-space:pre" y="35.1">Unicode码点转义</tspan></text></g><g id="412" transform="matrix(1,0,0,1,904,2959)" ed:width="438" ed:parentid="376" ed:height="24.5"><path d="M0,24.5L438,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">默认情况下，JavaScript字符串运算和方法不能感知字符串中俄astral符号</tspan></text></g><g id="414" transform="matrix(1,0,0,1,904,2990)" ed:width="302" ed:parentid="376" ed:height="24.5"><path d="M0,24.5L302,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如何精确计算这样的字符串长度。[...gclef].length</tspan></text></g><g id="416" transform="matrix(1,0,0,1,840,3021)" ed:width="514" ed:parentid="378" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">原生的ES6对此的答案是charAt，但不支持astral字符的原子性，也不会考虑组合符号</tspan><tspan x="8" style="white-space:pre" y="35.1">的因素</tspan></text></g><g id="418" transform="matrix(1,0,0,1,840,3071)" ed:width="156" ed:parentid="378" ed:height="24.5"><path d="M0,24.5L156,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6提供了codePointAt</tspan></text></g><g id="420" transform="matrix(1,0,0,1,840,3102)" ed:width="514" ed:parentid="378" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">组合String.fromCodePoint和codePointAt来获得支持Unicode的charAt的更简单且</tspan><tspan x="8" style="white-space:pre" y="35.1">更优的方法</tspan></text></g><g id="422" transform="matrix(1,0,0,1,677,3183)" ed:width="514" ed:parentid="148" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6为JavaScript引入了一个新的原生类型：Symbol。它和其他原生类型不一样，</tspan><tspan x="8" style="white-space:pre" y="35.1">symbol没有字面量形式</tspan></text></g><g id="424" transform="matrix(1,0,0,1,677,3273)" ed:width="122" ed:parentid="148" ed:height="24.5"><path d="M0,24.5L122,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">以下几点需要注意</tspan></text></g><g id="426" transform="matrix(1,0,0,1,826,3233)" ed:width="474" ed:parentid="424" ed:height="24.5"><path d="M0,24.5L474,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">不能也不应该对Symbol()使用new。它并不是一个构造器，也不会创建一个对象</tspan></text></g><g id="428" transform="matrix(1,0,0,1,826,3264)" ed:width="514" ed:parentid="424" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">传给Symbol()的参数是可选的。如果传入了的话，应该是一个为这个symbol的用途给</tspan><tspan x="8" style="white-space:pre" y="35.1">出用户友好描述的字符串</tspan></text></g><g id="430" transform="matrix(1,0,0,1,826,3314)" ed:width="413" ed:parentid="424" ed:height="24.5"><path d="M0,24.5L413,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">typeof的输出是一个新的值("symbol")，这是识别symbol的首选方法</tspan></text></g><g id="434" transform="matrix(1,0,0,1,677,3345)" ed:width="514" ed:parentid="148" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">符号本身的内部值-称为它的名称（name）-是不在代码中出现且无法获得的。可以把</tspan><tspan x="8" style="white-space:pre" y="35.1">这个符号值想象为一个自动生成的、（在应用内部）唯一的字符串值</tspan></text></g><g id="436" transform="matrix(1,0,0,1,677,3395)" ed:width="408" ed:parentid="148" ed:height="24.5"><path d="M0,24.5L408,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">符号的主要意义是创建一个类似字符串的不会与其他任何值冲突的值</tspan></text></g><g id="438" transform="matrix(1,0,0,1,677,3426)" ed:width="514" ed:parentid="148" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如果需要把符号值作为一个真正的字符串使用，那么它就需要用String()或者toString()</tspan><tspan x="8" style="white-space:pre" y="35.1">进行显式类型转换，因为不允许隐式地把符号转换为字符串</tspan></text></g><g id="440" transform="matrix(1,0,0,1,815,3476)" ed:width="514" ed:parentid="382" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Symbol.for()在全局符号注册表中搜索，来查看是否有描述文字相同的符号已经存在，</tspan><tspan x="8" style="white-space:pre" y="35.1">如果有的话就返回它</tspan></text></g><g id="444" transform="matrix(1,0,0,1,815,3526)" ed:width="395" ed:parentid="382" ed:height="24.5"><path d="M0,24.5L395,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">换句话说，全局注册表把符号值本身根据其描述文字作为单例处理</tspan></text></g><g id="446" transform="matrix(1,0,0,1,815,3557)" ed:width="514" ed:parentid="382" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">具有讽刺意义的是，基本上符号的目的是为了取代应用中的magic字符串（赋予特殊意</tspan><tspan x="8" style="white-space:pre" y="35.1">义的任意字符串）</tspan></text></g><g id="448" transform="matrix(1,0,0,1,815,3607)" ed:width="363" ed:parentid="382" ed:height="24.5"><path d="M0,24.5L363,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可以使用Symbol.keyFor()提取注册符号的描述文本（键值）</tspan></text></g><g id="450" transform="matrix(1,0,0,1,880,3638)" ed:width="514" ed:parentid="384" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如果把符号用作对象的属性/键值，那么它会以一种特殊的方式存储，使得这个属性不</tspan><tspan x="8" style="white-space:pre" y="35.1">出现在对这个对象的一般属性枚举中</tspan></text></g><g id="452" transform="matrix(1,0,0,1,880,3688)" ed:width="385" ed:parentid="384" ed:height="24.5"><path d="M0,24.5L385,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">要取得对象的符号属性，使用Object.getOwnPropertySymbols</tspan></text></g><g id="454" transform="matrix(1,0,0,1,677,3719)" ed:width="514" ed:parentid="150" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">这些新语法形式中大多数的设计目的都是消除常见编程技巧中德痛点，比如为函数设定</tspan><tspan x="8" style="white-space:pre" y="35.1">默认值以及把参数的“其余”部分收集到数组中</tspan></text></g><g id="456" transform="matrix(1,0,0,1,677,3769)" ed:width="514" ed:parentid="150" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">而像=>箭头函数这样的特性看起来是为了使代码更简洁的语法，实际上它有非常特别</tspan><tspan x="8" style="white-space:pre" y="35.1">的行为特性，应该只在适当的时候使用</tspan></text></g><g id="458" transform="matrix(1,0,0,1,714,3917)" ed:width="77" ed:parentid="152" ed:height="24.5"><path d="M0,24.5L77,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.1.1.接口</tspan></text></g><g id="460" transform="matrix(1,0,0,1,714,3967)" ed:width="112" ed:parentid="152" ed:height="24.5"><path d="M0,24.5L112,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.1.2.next()迭代</tspan></text></g><g id="462" transform="matrix(1,0,0,1,714,4057)" ed:width="177" ed:parentid="152" ed:height="24.5"><path d="M0,24.5L177,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.1.3.可选的return和throw</tspan></text></g><g id="464" transform="matrix(1,0,0,1,714,4138)" ed:width="116" ed:parentid="152" ed:height="24.5"><path d="M0,24.5L116,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.1.4.迭代器循环</tspan></text></g><g id="466" transform="matrix(1,0,0,1,714,4169)" ed:width="129" ed:parentid="152" ed:height="24.5"><path d="M0,24.5L129,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.1.5.自定义迭代器</tspan></text></g><g id="468" transform="matrix(1,0,0,1,714,4200)" ed:width="116" ed:parentid="152" ed:height="24.5"><path d="M0,24.5L116,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.1.6.迭代器消耗</tspan></text></g><g id="470" transform="matrix(1,0,0,1,714,4528)" ed:width="77" ed:parentid="154" ed:height="24.5"><path d="M0,24.5L77,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.2.1.语法</tspan></text></g><g id="472" transform="matrix(1,0,0,1,714,4774)" ed:width="116" ed:parentid="154" ed:height="24.5"><path d="M0,24.5L116,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.2.2.迭代器控制</tspan></text></g><g id="474" transform="matrix(1,0,0,1,714,4955)" ed:width="103" ed:parentid="154" ed:height="24.5"><path d="M0,24.5L103,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.2.3.提前完成</tspan></text></g><g id="476" transform="matrix(1,0,0,1,714,5086)" ed:width="103" ed:parentid="154" ed:height="24.5"><path d="M0,24.5L103,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.2.4.错误处理</tspan></text></g><g id="478" transform="matrix(1,0,0,1,714,5117)" ed:width="144" ed:parentid="154" ed:height="24.5"><path d="M0,24.5L144,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.2.5.Transpile生成器</tspan></text></g><g id="480" transform="matrix(1,0,0,1,714,5164)" ed:width="116" ed:parentid="154" ed:height="24.5"><path d="M0,24.5L116,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.2.6.生成器使用</tspan></text></g><g id="482" transform="matrix(1,0,0,1,701,5266)" ed:width="90" ed:parentid="156" ed:height="24.5"><path d="M0,24.5L90,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.3.1.旧方法</tspan></text></g><g id="484" transform="matrix(1,0,0,1,701,5490)" ed:width="77" ed:parentid="156" ed:height="24.5"><path d="M0,24.5L77,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.3.2.前进</tspan></text></g><g id="486" transform="matrix(1,0,0,1,701,5826)" ed:width="90" ed:parentid="156" ed:height="24.5"><path d="M0,24.5L90,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.3.3.新方法</tspan></text></g><g id="488" transform="matrix(1,0,0,1,701,6044)" ed:width="116" ed:parentid="156" ed:height="24.5"><path d="M0,24.5L116,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.3.4.模块依赖环</tspan></text></g><g id="490" transform="matrix(1,0,0,1,701,6185)" ed:width="103" ed:parentid="156" ed:height="24.5"><path d="M0,24.5L103,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.3.5.模块加载</tspan></text></g><g id="492" transform="matrix(1,0,0,1,688,6300)" ed:width="80" ed:parentid="158" ed:height="24.5"><path d="M0,24.5L80,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.4.1.class</tspan></text></g><g id="494" transform="matrix(1,0,0,1,688,6391)" ed:width="138" ed:parentid="158" ed:height="24.5"><path d="M0,24.5L138,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.4.2.extens和super</tspan></text></g><g id="496" transform="matrix(1,0,0,1,688,6522)" ed:width="116" ed:parentid="158" ed:height="24.5"><path d="M0,24.5L116,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.4.3.new.target</tspan></text></g><g id="498" transform="matrix(1,0,0,1,688,6618)" ed:width="84" ed:parentid="158" ed:height="24.5"><path d="M0,24.5L84,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.4.4.static</tspan></text></g><g id="502" transform="matrix(1,0,0,1,740,7239)" ed:width="165" ed:parentid="162" ed:height="24.5"><path d="M0,24.5L165,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.1.1.构造和使用Promise</tspan></text></g><g id="504" transform="matrix(1,0,0,1,740,7382)" ed:width="106" ed:parentid="162" ed:height="24.5"><path d="M0,24.5L106,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.1.2.Thenable</tspan></text></g><g id="506" transform="matrix(1,0,0,1,740,7569)" ed:width="125" ed:parentid="162" ed:height="24.5"><path d="M0,24.5L125,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.1.3.Promise API</tspan></text></g><g id="508" transform="matrix(1,0,0,1,713,8210)" ed:width="90" ed:parentid="168" ed:height="24.5"><path d="M0,24.5L90,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.1.1.大小端</tspan></text></g><g id="510" transform="matrix(1,0,0,1,713,8291)" ed:width="90" ed:parentid="168" ed:height="24.5"><path d="M0,24.5L90,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.1.2.多视图</tspan></text></g><g id="512" transform="matrix(1,0,0,1,713,8388)" ed:width="142" ed:parentid="168" ed:height="24.5"><path d="M0,24.5L142,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.1.3.带类数组构造器</tspan></text></g><g id="514" transform="matrix(1,0,0,1,671,8596)" ed:width="92" ed:parentid="170" ed:height="24.5"><path d="M0,24.5L92,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.2.1.Map值</tspan></text></g><g id="516" transform="matrix(1,0,0,1,671,8662)" ed:width="92" ed:parentid="170" ed:height="24.5"><path d="M0,24.5L92,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.2.2.Map键</tspan></text></g><g id="518" transform="matrix(1,0,0,1,663,8986)" ed:width="77" ed:parentid="174" ed:height="24.5"><path d="M0,24.5L77,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Set迭代器</tspan></text></g><g id="520" transform="matrix(1,0,0,1,714,3845)" ed:width="466" ed:parentid="152" ed:height="24.5"><path d="M0,24.5L466,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">迭代器（iterator）是一个结构化的模式，用于从源以一次一个的方式提取数据</tspan></text></g><g id="522" transform="matrix(1,0,0,1,714,3876)" ed:width="408" ed:parentid="152" ed:height="24.5"><path d="M0,24.5L408,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">迭代器是一种有序的、连续的、基于拉取的用于消耗数据的组织方式</tspan></text></g><g id="524" transform="matrix(1,0,0,1,818,3907)" ed:width="514" ed:parentid="458" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">IteratorResult接口指定了从任何迭代器操作返回的值必须是下面这种形式的对象：</tspan><tspan x="8" style="white-space:pre" y="35.1">{value: ..， done: true/false}</tspan></text></g><g id="526" transform="matrix(1,0,0,1,853,3957)" ed:width="514" ed:parentid="460" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">迭代器的next(..)方法可以接受一个或多个可选参数。绝大多数内置迭代器没有利用这个</tspan><tspan x="8" style="white-space:pre" y="35.1">功能</tspan></text></g><g id="528" transform="matrix(1,0,0,1,918,4007)" ed:width="403" ed:parentid="462" ed:height="24.5"><path d="M0,24.5L403,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">多数内置迭代器都没有实现可选的迭代器接口-return (..)和throw(..)</tspan></text></g><g id="530" transform="matrix(1,0,0,1,918,4038)" ed:width="514" ed:parentid="462" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">return(..)被定义为向迭代器发送一个信号，表明消费者代码已经完毕，不会再从其中提</tspan><tspan x="8" style="white-space:pre" y="35.1">取任何值</tspan></text></g><g id="532" transform="matrix(1,0,0,1,918,4088)" ed:width="514" ed:parentid="462" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">throw(..)用于向迭代器报告一个异常/错误，迭代器针对这个信号的反应可能不同于针</tspan><tspan x="8" style="white-space:pre" y="35.1">对return(..)意味着的完成信号</tspan></text></g><g id="534" transform="matrix(1,0,0,1,870,4169)" ed:width="460" ed:parentid="466" ed:height="24.5"><path d="M0,24.5L460,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">这种特定的用法强调了迭代器可以作为一个模式来组织功能，而不仅仅是数据</tspan></text></g><g id="536" transform="matrix(1,0,0,1,714,4231)" ed:width="405" ed:parentid="154" ed:height="24.5"><path d="M0,24.5L405,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6引入了一个全新的某种程度上说是奇异的函数形式，称为生成器</tspan></text></g><g id="538" transform="matrix(1,0,0,1,714,4262)" ed:width="514" ed:parentid="154" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">生成器可以在执行当中暂停自身，可以立即恢复执行也可以过一段时间之后恢复执行。</tspan><tspan x="8" style="white-space:pre" y="35.1">所以显然它并不像普通函数那样保证运行到完毕</tspan></text></g><g id="540" transform="matrix(1,0,0,1,714,4312)" ed:width="514" ed:parentid="154" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在执行当中的每次暂停/恢复循环都提供了一个双向信息传递的机会，生成器可以返回</tspan><tspan x="8" style="white-space:pre" y="35.1">一个值，恢复它的控制代码也可以发回一个值</tspan></text></g><g id="542" transform="matrix(1,0,0,1,818,4362)" ed:width="514" ed:parentid="470" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">执行生成器，比如foo(5, 10)，并不实际在生成器中运行代码。相反，它会产生一个迭</tspan><tspan x="8" style="white-space:pre" y="35.1">代器控制这个生成器执行其代码</tspan></text></g><g id="544" transform="matrix(1,0,0,1,818,4412)" ed:width="410" ed:parentid="470" ed:height="24.5"><path d="M0,24.5L410,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">生成器还有一个可以在其中使用的新关键字，用来标示暂停点：yield</tspan></text></g><g id="546" transform="matrix(1,0,0,1,818,4443)" ed:width="514" ed:parentid="470" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一个永不结束的循环就意味着一个永不结束的生成器，这是完全有效的，有时候完全就</tspan><tspan x="8" style="white-space:pre" y="35.1">是你所需要的</tspan></text></g><g id="548" transform="matrix(1,0,0,1,818,4493)" ed:width="514" ed:parentid="470" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">yield严格上说不是一个运算符，尽管像yield 1这样使用它的时候确实看起来像是运算</tspan><tspan x="8" style="white-space:pre" y="35.1">符</tspan></text></g><g id="550" transform="matrix(1,0,0,1,818,4543)" ed:width="390" ed:parentid="470" ed:height="24.5"><path d="M0,24.5L390,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">yield..表达式和赋值表达式行为上的类似性有一定概念上的合理性</tspan></text></g><g id="552" transform="matrix(1,0,0,1,818,4574)" ed:width="514" ed:parentid="470" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">因为yield关键字的优先级很低，几乎yield..之后的任何表达式都会首先计算，然后再通</tspan><tspan x="8" style="white-space:pre" y="35.1">过yield发送</tspan></text></g><g id="554" transform="matrix(1,0,0,1,818,4624)" ed:width="514" ed:parentid="470" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">和=赋值一样，yield也是“右结合”的，也就是说多个yield表达式连续出现等价于用(..)</tspan><tspan x="8" style="white-space:pre" y="35.1">从右向左分组</tspan></text></g><g id="556" transform="matrix(1,0,0,1,818,4674)" ed:width="514" ed:parentid="470" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">yield * 可以调用另外一个生成器（通过委托到其迭代器），所以它也是可以通过调用</tspan><tspan x="8" style="white-space:pre" y="35.1">自身执行某种生成器递归</tspan></text></g><g id="558" transform="matrix(1,0,0,1,857,4724)" ed:width="514" ed:parentid="472" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6之后 的一个早期提案会通过生成器内部一个独立的元属性，支持访问传入最初</tspan><tspan x="8" style="white-space:pre" y="35.1">next(..)调用的值</tspan></text></g><g id="560" transform="matrix(1,0,0,1,857,4774)" ed:width="421" ed:parentid="472" ed:height="24.5"><path d="M0,24.5L421,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可以把生成器看作是值的产生器，其中每次迭代就是产生一个值来消费</tspan></text></g><g id="562" transform="matrix(1,0,0,1,857,4805)" ed:width="514" ed:parentid="472" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">从更通用的意义上来说，可能更合理的角度是把生成器看作一个受控的、可传递的代码</tspan><tspan x="8" style="white-space:pre" y="35.1">执行</tspan></text></g><g id="564" transform="matrix(1,0,0,1,844,4855)" ed:width="514" ed:parentid="474" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">生成器上附着的迭代器支持可选的return(..)和throw(..)方法。这两种方法都有立即终止</tspan><tspan x="8" style="white-space:pre" y="35.1">一个暂停的生成器的效果</tspan></text></g><g id="566" transform="matrix(1,0,0,1,844,4905)" ed:width="514" ed:parentid="474" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">return(..)除了可以手动调用，还可以在每次迭代的末尾被任何消耗迭代器的ES6构件自</tspan><tspan x="8" style="white-space:pre" y="35.1">动调用，比如for...of循环和spread运算符</tspan></text></g><g id="568" transform="matrix(1,0,0,1,844,4955)" ed:width="514" ed:parentid="474" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">这个功能的目的是通知生成器如果控制代码不再在它上面迭代，那么它可能就会执行清</tspan><tspan x="8" style="white-space:pre" y="35.1">理任务（释放资源，重置状态等）</tspan></text></g><g id="570" transform="matrix(1,0,0,1,844,5005)" ed:width="514" ed:parentid="474" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">不要把yield语句放在finally子句内部，虽然这是有效且合法的，但确实是一个可怕的思</tspan><tspan x="8" style="white-space:pre" y="35.1">路。它会延后你的return(..)调用的完成</tspan></text></g><g id="572" transform="matrix(1,0,0,1,844,5055)" ed:width="367" ed:parentid="474" ed:height="24.5"><path d="M0,24.5L367,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">和return(..)不同，迭代器的throw(..)方法从来不会被自动调用</tspan></text></g><g id="574" transform="matrix(1,0,0,1,844,5086)" ed:width="507" ed:parentid="476" ed:height="24.5"><path d="M0,24.5L507,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">生成器的错误处理可以表达为try...catch，它可以在由内向外和由外向内两个方向工作</tspan></text></g><g id="576" transform="matrix(1,0,0,1,885,5117)" ed:width="395" ed:parentid="478" ed:height="24.5"><path d="M0,24.5L395,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一个练习巩固了生成器实际上就是状态机逻辑的简化语法这个概念</tspan></text></g><g id="578" transform="matrix(1,0,0,1,857,5164)" ed:width="96" ed:parentid="480" ed:height="24.5"><path d="M0,24.5L96,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">两个主要模式</tspan></text></g><g id="580" transform="matrix(1,0,0,1,980,5148)" ed:width="96" ed:parentid="578" ed:height="24.5"><path d="M0,24.5L96,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">产生一系列值</tspan></text></g><g id="582" transform="matrix(1,0,0,1,980,5179)" ed:width="135" ed:parentid="578" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">顺序执行的任务队列</tspan></text></g><g id="584" transform="matrix(1,0,0,1,701,5210)" ed:width="366" ed:parentid="156" ed:height="24.5"><path d="M0,24.5L366,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在所有JavaScript代码中，唯一最重要的代码组织模式是模块</tspan></text></g><g id="586" transform="matrix(1,0,0,1,818,5241)" ed:width="514" ed:parentid="482" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">传统的模块模式基于一个带有内部变量和函数的外层函数，以及一个被返回的“public </tspan><tspan x="8" style="white-space:pre" y="35.1">API”</tspan></text></g><g id="588" transform="matrix(1,0,0,1,818,5291)" ed:width="447" ed:parentid="482" ed:height="24.5"><path d="M0,24.5L447,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">其中常见的是异步模块定义（AMD），还有一种是通用模块定义（UMD）</tspan></text></g><g id="590" transform="matrix(1,0,0,1,805,5322)" ed:width="392" ed:parentid="484" ed:height="24.5"><path d="M0,24.5L392,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">对于ES6来说，我们不再需要依赖于封装函数和闭包提供模块支持</tspan></text></g><g id="592" transform="matrix(1,0,0,1,805,5353)" ed:width="340" ed:parentid="484" ed:height="24.5"><path d="M0,24.5L340,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6模块和过去我们处理模块的方式之间的显著概念区别</tspan></text></g><g id="594" transform="matrix(1,0,0,1,805,5446)" ed:width="44" ed:parentid="484" ed:height="24.5"><path d="M0,24.5L44,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">区别</tspan></text></g><g id="596" transform="matrix(1,0,0,1,876,5384)" ed:width="327" ed:parentid="594" ed:height="24.5"><path d="M0,24.5L327,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6使用基于文件的模块，也就是说一个文件一个模块</tspan></text></g><g id="598" transform="matrix(1,0,0,1,876,5415)" ed:width="153" ed:parentid="594" ed:height="24.5"><path d="M0,24.5L153,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6模块的API是静态的</tspan></text></g><g id="600" transform="matrix(1,0,0,1,876,5446)" ed:width="119" ed:parentid="594" ed:height="24.5"><path d="M0,24.5L119,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6模块式单例的</tspan></text></g><g id="602" transform="matrix(1,0,0,1,876,5477)" ed:width="416" ed:parentid="594" ed:height="24.5"><path d="M0,24.5L416,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">模块的公开API中暴露的属性和方法并不仅仅是普通的值或引用的赋值</tspan></text></g><g id="604" transform="matrix(1,0,0,1,876,5508)" ed:width="395" ed:parentid="594" ed:height="24.5"><path d="M0,24.5L395,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">导入模块和静态请求加载（如果还没加载的话）这个模块式一样的</tspan></text></g><g id="606" transform="matrix(1,0,0,1,805,5539)" ed:width="491" ed:parentid="484" ed:height="24.5"><path d="M0,24.5L491,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6模块将会为代码组织提供完整支持，包括封装、控制公开API以及引用依赖导入</tspan></text></g><g id="608" transform="matrix(1,0,0,1,805,5570)" ed:width="514" ed:parentid="484" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">长远来看，ES6模块从本质上说必然会取代之前所有的模块格式和标准，即使是</tspan><tspan x="8" style="white-space:pre" y="35.1">CommonJS，因为ES6模块是建立在语言的语法支持基础上的</tspan></text></g><g id="610" transform="matrix(1,0,0,1,805,5620)" ed:width="514" ed:parentid="484" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">模块transpiler/转换工具是必不可少的。不管你是在编写普通模块、AMD、UMD、</tspan><tspan x="8" style="white-space:pre" y="35.1">CommonJS还是ES6，这些工具都不得不解析转化为对代码运行的所有环境都适用的形</tspan><tspan x="8" style="white-space:pre" y="54.1">式</tspan></text></g><g id="612" transform="matrix(1,0,0,1,818,5689)" ed:width="317" ed:parentid="486" ed:height="24.5"><path d="M0,24.5L317,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">支撑ES6模块的两个主要新关键字是import和export</tspan></text></g><g id="614" transform="matrix(1,0,0,1,818,5720)" ed:width="514" ed:parentid="486" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">import和export都必须出现在使用它们的最顶层作用域。它们必须出现在所有代码块</tspan><tspan x="8" style="white-space:pre" y="35.1">和函数的外面</tspan></text></g><g id="616" transform="matrix(1,0,0,1,818,5770)" ed:width="487" ed:parentid="486" ed:height="24.5"><path d="M0,24.5L487,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">没有用export标示的一切都在模块作用域内部保持私有。在模块内没有全局作用域</tspan></text></g><g id="618" transform="matrix(1,0,0,1,818,5801)" ed:width="468" ed:parentid="486" ed:height="24.5"><path d="M0,24.5L468,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">模块还能访问window和所有的“全局”变量，只是不作为词法上的顶层作用域</tspan></text></g><g id="620" transform="matrix(1,0,0,1,818,5832)" ed:width="514" ed:parentid="486" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">模块导出不是像你熟悉的赋值运算符=那样只是值或者引用的普通赋值。实际上，导出</tspan><tspan x="8" style="white-space:pre" y="35.1">的是对这些东西（变量等）的绑定（类似于指针）</tspan></text></g><g id="622" transform="matrix(1,0,0,1,818,5882)" ed:width="503" ed:parentid="486" ed:height="24.5"><path d="M0,24.5L503,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">默认导出把一个特定导出绑定设置为导入模块时的默认导出。绑定的名称就是default</tspan></text></g><g id="624" transform="matrix(1,0,0,1,818,5913)" ed:width="178" ed:parentid="486" ed:height="24.5"><path d="M0,24.5L178,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">每个模块只能有一个default</tspan></text></g><g id="626" transform="matrix(1,0,0,1,818,5944)" ed:width="514" ed:parentid="486" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript引擎无法静态分析平凡对象的内容，这意味着它无法对静态import进行性能</tspan><tspan x="8" style="white-space:pre" y="35.1">优化。让每个成员独立且显式地导出的优点是引擎可以对其进行静态分析和优化</tspan></text></g><g id="628" transform="matrix(1,0,0,1,844,5994)" ed:width="330" ed:parentid="488" ed:height="24.5"><path d="M0,24.5L330,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">首先必须声明，尽量避免故意设计带有环形依赖的系统</tspan></text></g><g id="630" transform="matrix(1,0,0,1,844,6025)" ed:width="514" ed:parentid="488" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">本质上说，相互导入，加上检验两个import语句的有效性的静态验证，虚拟组合了两个</tspan><tspan x="8" style="white-space:pre" y="35.1">独立的模块空间（通过绑定），这样foo(..)可以调用bar(..)，反过来也是一样</tspan></text></g><g id="632" transform="matrix(1,0,0,1,844,6075)" ed:width="514" ed:parentid="488" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">import语句的静态加载语义意味着可以确保通过import相互依赖</tspan><tspan x="8" style="white-space:pre" y="35.1">的“foo”和“bar”在其中任何一个运行之前，二者都会被加载、解析和编译</tspan></text></g><g id="634" transform="matrix(1,0,0,1,831,6125)" ed:width="525" ed:parentid="490" ed:height="43.5"><path d="M0,43.5L525,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">import语句使用外部环境（浏览器、Node.js等）提供的独立机制，来实际把模块标识符</tspan><tspan x="8" style="white-space:pre" y="35.1">字符串解析成可用的指令，用于寻找和加载所需的模块。这个机制就是系统模块加载器</tspan></text></g><g id="638" transform="matrix(1,0,0,1,831,6175)" ed:width="514" ed:parentid="490" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如果在浏览器中，环境提供的默认模块加载器会把模块标识符解析为URL。如果在像</tspan><tspan x="8" style="white-space:pre" y="35.1">Node.js这样的服务器上就解析为本地文件系统路径</tspan></text></g><g id="640" transform="matrix(1,0,0,1,831,6225)" ed:width="514" ed:parentid="490" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">模块加载器本身不是由ES6指定的。他是独立的、平行的标准，目前由WHATWG浏览</tspan><tspan x="8" style="white-space:pre" y="35.1">器标准工作组管理</tspan></text></g><g id="642" transform="matrix(1,0,0,1,795,6275)" ed:width="512" ed:parentid="492" ed:height="24.5"><path d="M0,24.5L512,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">新的ES6类机制的核心是关键字class，表示一个块，其内容定义了一个函数原型的成员</tspan></text></g><g id="644" transform="matrix(1,0,0,1,795,6306)" ed:width="514" ed:parentid="492" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6 class 本身并不是一个真正的实体，而是一个包裹着其他像函数和属性这样的具体</tspan><tspan x="8" style="white-space:pre" y="35.1">实体并把他们组合到一起的元概念</tspan></text></g><g id="647" transform="matrix(1,0,0,1,853,6356)" ed:width="514" ed:parentid="494" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6还通过面向类的常用术语extends提供了一个语法糖，用来在两个函数原型之间建</tspan><tspan x="8" style="white-space:pre" y="35.1">立[[Prototype]]委托链接-通常被误称为“继承”或者令人迷惑的标识为“原型继承”</tspan></text></g><g id="649" transform="matrix(1,0,0,1,853,6406)" ed:width="514" ed:parentid="494" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在构造器中，super自动指向“父构造器”，在方法中，super会指向“父对象”，这</tspan><tspan x="8" style="white-space:pre" y="35.1">样就可以访问其属性/方法了</tspan></text></g><g id="651" transform="matrix(1,0,0,1,831,6456)" ed:width="135" ed:parentid="496" ed:height="24.5"><path d="M0,24.5L135,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">新概念，称为元属性</tspan></text></g><g id="653" transform="matrix(1,0,0,1,831,6487)" ed:width="514" ed:parentid="496" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">new target是一个新的在所有函数中都可用的“魔法”值，尽管在一般函数中它通常是</tspan><tspan x="8" style="white-space:pre" y="35.1">undefined</tspan></text></g><g id="655" transform="matrix(1,0,0,1,831,6537)" ed:width="514" ed:parentid="496" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在任何构造器中，new.target总是指向new实际上直接调用的构造器，即使构造器是在</tspan><tspan x="8" style="white-space:pre" y="35.1">父类中且通过子类构造器用super(..)委托调用</tspan></text></g><g id="657" transform="matrix(1,0,0,1,831,6587)" ed:width="453" ed:parentid="496" ed:height="24.5"><path d="M0,24.5L453,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">除了访问静态/方法之外，类构造器中的new.target元属性没有什么其他用处</tspan></text></g><g id="659" transform="matrix(1,0,0,1,799,6618)" ed:width="456" ed:parentid="498" ed:height="24.5"><path d="M0,24.5L456,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">直接添加到这个类的函数对象上，而不是在这个函数对象的prototype对象上</tspan></text></g><g id="661" transform="matrix(1,0,0,1,701,6649)" ed:width="514" ed:parentid="160" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">迭代器提供了对数组或运算的顺序访问。可以通过像for..of和...这些新语言特性来消耗</tspan><tspan x="8" style="white-space:pre" y="35.1">迭代器</tspan></text></g><g id="663" transform="matrix(1,0,0,1,701,6699)" ed:width="514" ed:parentid="160" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">生成器是支持本地暂停/恢复的函数。通过迭代器来控制。它们可以用于编程（也是交</tspan><tspan x="8" style="white-space:pre" y="35.1">互地，通过yield/next消息传递）生成供迭代消耗的值</tspan></text></g><g id="665" transform="matrix(1,0,0,1,701,6749)" ed:width="514" ed:parentid="160" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">模块支持对实现细节的私有封装，并提供公开导出API。模块定义是基于文件的单例实</tspan><tspan x="8" style="white-space:pre" y="35.1">例，在编译时静态决议</tspan></text></g><g id="667" transform="matrix(1,0,0,1,701,6799)" ed:width="514" ed:parentid="160" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">类对基于原型的编码提供了更清晰的语法。新增的super也解决了[[prototype]]链中相</tspan><tspan x="8" style="white-space:pre" y="35.1">对引用的棘手问题</tspan></text></g><g id="669" transform="matrix(1,0,0,1,624,6876)" ed:width="265" ed:parentid="108" ed:height="24.5"><path d="M0,24.5L265,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">管理异步的主要机制一直以来都是函数回调</tspan></text></g><g id="671" transform="matrix(1,0,0,1,624,6907)" ed:width="454" ed:parentid="108" ed:height="24.5"><path d="M0,24.5L454,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6增加了一个新的特性来帮助解决只用回调实现异步的严重缺陷：Promise</tspan></text></g><g id="673" transform="matrix(1,0,0,1,811,6938)" ed:width="514" ed:parentid="675" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一些错误观念：Promise不是对回调的替代。Promise在回调代码和将要执行这个任务</tspan><tspan x="8" style="white-space:pre" y="35.1">的异步代码之间提供了一种可靠的中间机制来管理回调</tspan></text></g><g id="675" transform="matrix(1,0,0,1,740,7050)" ed:width="44" ed:parentid="162" ed:height="24.5"><path d="M0,24.5L44,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">介绍</tspan></text></g><g id="677" transform="matrix(1,0,0,1,811,6988)" ed:width="418" ed:parentid="675" ed:height="24.5"><path d="M0,24.5L418,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可以把Promise链接到一起，这就把一系列异步完成的步骤串联了起来</tspan></text></g><g id="679" transform="matrix(1,0,0,1,811,7019)" ed:width="249" ed:parentid="675" ed:height="24.5"><path d="M0,24.5L249,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Promise链提供了一个近似的异步控制流</tspan></text></g><g id="681" transform="matrix(1,0,0,1,811,7050)" ed:width="514" ed:parentid="675" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">还有一种定义Promise的方式，就是把它看作一个未来值，对一个值得独立于时间的封</tspan><tspan x="8" style="white-space:pre" y="35.1">装容器</tspan></text></g><g id="683" transform="matrix(1,0,0,1,811,7100)" ed:width="366" ed:parentid="675" ed:height="24.5"><path d="M0,24.5L366,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">换句话说，Promise可以被看作是同步函数返回值的异步版本</tspan></text></g><g id="685" transform="matrix(1,0,0,1,811,7131)" ed:width="431" ed:parentid="675" ed:height="24.5"><path d="M0,24.5L431,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Promise的决议结果只有两种可能：完成或拒绝，附带一个可选的单个值</tspan></text></g><g id="687" transform="matrix(1,0,0,1,811,7162)" ed:width="262" ed:parentid="675" ed:height="24.5"><path d="M0,24.5L262,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Promise只能被决议（完成或者拒绝）一次</tspan></text></g><g id="689" transform="matrix(1,0,0,1,932,7193)" ed:width="459" ed:parentid="502" ed:height="24.5"><path d="M0,24.5L459,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">提供给构造器Promise(..)的两个参数都是函数，一般称为resolve(..)和reject(..)</tspan></text></g><g id="691" transform="matrix(1,0,0,1,932,7224)" ed:width="382" ed:parentid="502" ed:height="24.5"><path d="M0,24.5L382,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Promise有一个then(..)方法，接受一个或两个回调函数作为参数</tspan></text></g><g id="693" transform="matrix(1,0,0,1,932,7255)" ed:width="395" ed:parentid="502" ed:height="24.5"><path d="M0,24.5L395,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">默认的成功回调把完成值传出，默认的出错回调会传递拒绝原因值</tspan></text></g><g id="695" transform="matrix(1,0,0,1,932,7286)" ed:width="472" ed:parentid="502" ed:height="24.5"><path d="M0,24.5L472,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如果永远不通过then(..)或catch(..)调用来观察的话，它就会一直保持未处理状态</tspan></text></g><g id="697" transform="matrix(1,0,0,1,873,7317)" ed:width="514" ed:parentid="504" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Promise(..)构造器的真正实例是Promise。但还有一些类promise对象，称为</tspan><tspan x="8" style="white-space:pre" y="35.1">thenable，一般来说，它们也可以用Promise机制解释</tspan></text></g><g id="699" transform="matrix(1,0,0,1,873,7367)" ed:width="373" ed:parentid="504" ed:height="24.5"><path d="M0,24.5L373,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">任何提供了then(..)函数的对象（或函数）都被认为是thenable</tspan></text></g><g id="701" transform="matrix(1,0,0,1,873,7398)" ed:width="514" ed:parentid="504" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一般来说，如果从某个其他系统接收到一个自称promise或者thenable的东西，不应该</tspan><tspan x="8" style="white-space:pre" y="35.1">盲目信任它</tspan></text></g><g id="703" transform="matrix(1,0,0,1,873,7448)" ed:width="341" ed:parentid="504" ed:height="24.5"><path d="M0,24.5L341,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">避免把可能被误认为thenable的值直接用于Promise机制</tspan></text></g><g id="705" transform="matrix(1,0,0,1,892,7479)" ed:width="336" ed:parentid="506" ed:height="24.5"><path d="M0,24.5L336,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Promise API还提供了一些静态方法与Promise一起工作</tspan></text></g><g id="707" transform="matrix(1,0,0,1,892,7510)" ed:width="332" ed:parentid="506" ed:height="24.5"><path d="M0,24.5L332,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Promise.resolve(..)创建了一个决议到传入值的promise</tspan></text></g><g id="709" transform="matrix(1,0,0,1,892,7541)" ed:width="514" ed:parentid="506" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">resolve(..)和Promise.resolve(..)可以接受promise并接受它的状态/决议，而reject(..)和</tspan><tspan x="8" style="white-space:pre" y="35.1">Promise.reject(..)并不区分接收的值是什么</tspan></text></g><g id="711" transform="matrix(1,0,0,1,892,7591)" ed:width="514" ed:parentid="506" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Promise.all([..])等待所有都完成（或者第一个拒绝），而Promise.race([..])等待第一个</tspan><tspan x="8" style="white-space:pre" y="35.1">完成或者拒绝</tspan></text></g><g id="713" transform="matrix(1,0,0,1,892,7641)" ed:width="514" ed:parentid="506" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Promise.all([])将会立即完成（没有完成值），Promise.race([])将会永远挂起。因此建</tspan><tspan x="8" style="white-space:pre" y="35.1">议，永远不要用空数组使用这些方法</tspan></text></g><g id="715" transform="matrix(1,0,0,1,789,7691)" ed:width="514" ed:parentid="164" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">这个重要的模式需要理解一下：生成器可以yield一个promise，然后这个promise可以</tspan><tspan x="8" style="white-space:pre" y="35.1">被绑定，用其完成值来恢复这个生成器的运行</tspan></text></g><g id="717" transform="matrix(1,0,0,1,789,7741)" ed:width="404" ed:parentid="164" ed:height="24.5"><path d="M0,24.5L404,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Promise是一种把普通回调或者chunk控制反转反转回来的可靠系统</tspan></text></g><g id="719" transform="matrix(1,0,0,1,789,7772)" ed:width="509" ed:parentid="164" ed:height="24.5"><path d="M0,24.5L509,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">把Promise的可信任性与生成器的同步代码组合在一起有效解决了回调所有的重要缺陷</tspan></text></g><g id="721" transform="matrix(1,0,0,1,789,7803)" ed:width="514" ed:parentid="164" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">本质上说，只要代码中出现超过两个异步步骤的流控制逻辑，都可以也应该使用由run</tspan><tspan x="8" style="white-space:pre" y="35.1">工具驱动的promise-yield生成器以异步风格表达控制流</tspan></text></g><g id="723" transform="matrix(1,0,0,1,717,7853)" ed:width="514" ed:parentid="166" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6新增了Promise来弥补回调的主要缺陷之一：缺少对可预测行为方式的保证。</tspan><tspan x="8" style="white-space:pre" y="35.1">Promise代表了来自可能异步的任务的未来完成值，跨越同步和异步边界对行为进行规</tspan><tspan x="8" style="white-space:pre" y="54.1">范化</tspan></text></g><g id="725" transform="matrix(1,0,0,1,717,7922)" ed:width="514" ed:parentid="166" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Promise与生成器的结合完全实现了重新安排异步流控制代码来消除丑陋的回调乱炖</tspan><tspan x="8" style="white-space:pre" y="35.1">（或称地狱）</tspan></text></g><g id="1017" transform="matrix(1,0,0,1,702,9378)" ed:width="144" ed:parentid="180" ed:height="24.5"><path d="M0,24.5L144,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.静态函数Array.of(..)</tspan></text></g><g id="1019" transform="matrix(1,0,0,1,702,9596)" ed:width="161" ed:parentid="180" ed:height="24.5"><path d="M0,24.5L161,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.静态函数Array.from(..)</tspan></text></g><g id="1021" transform="matrix(1,0,0,1,702,9795)" ed:width="133" ed:parentid="180" ed:height="24.5"><path d="M0,24.5L133,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.创建数组和子类型</tspan></text></g><g id="1023" transform="matrix(1,0,0,1,702,9857)" ed:width="173" ed:parentid="180" ed:height="24.5"><path d="M0,24.5L173,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.原型方法copyWidthin(..)</tspan></text></g><g id="1025" transform="matrix(1,0,0,1,702,9934)" ed:width="109" ed:parentid="180" ed:height="24.5"><path d="M0,24.5L109,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">5.原型方法fill(..)</tspan></text></g><g id="1027" transform="matrix(1,0,0,1,702,10021)" ed:width="119" ed:parentid="180" ed:height="24.5"><path d="M0,24.5L119,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">6.原型方法find(..)</tspan></text></g><g id="1029" transform="matrix(1,0,0,1,702,10102)" ed:width="153" ed:parentid="180" ed:height="24.5"><path d="M0,24.5L153,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.原型方法findIndex(..)</tspan></text></g><g id="1031" transform="matrix(1,0,0,1,702,10152)" ed:width="237" ed:parentid="180" ed:height="24.5"><path d="M0,24.5L237,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">8.原型方法entries()、values()、keys()</tspan></text></g><g id="1033" transform="matrix(1,0,0,1,710,10224)" ed:width="148" ed:parentid="182" ed:height="24.5"><path d="M0,24.5L148,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.静态函数Object.is(..)</tspan></text></g><g id="1035" transform="matrix(1,0,0,1,710,10286)" ed:width="293" ed:parentid="182" ed:height="24.5"><path d="M0,24.5L293,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.静态函数Object.getOwnPropertySymbols(..)</tspan></text></g><g id="1037" transform="matrix(1,0,0,1,710,10317)" ed:width="234" ed:parentid="182" ed:height="24.5"><path d="M0,24.5L234,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.静态函数Object.setPrototypeOf(..)</tspan></text></g><g id="1039" transform="matrix(1,0,0,1,710,10404)" ed:width="177" ed:parentid="182" ed:height="24.5"><path d="M0,24.5L177,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.静态函数Object.assign(..)</tspan></text></g><g id="1041" transform="matrix(1,0,0,1,720,10581)" ed:width="81" ed:parentid="186" ed:height="24.5"><path d="M0,24.5L81,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.静态属性</tspan></text></g><g id="1043" transform="matrix(1,0,0,1,720,10641)" ed:width="187" ed:parentid="186" ed:height="24.5"><path d="M0,24.5L187,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.静态属性Number.isNaN(..)</tspan></text></g><g id="1045" transform="matrix(1,0,0,1,720,10700)" ed:width="191" ed:parentid="186" ed:height="24.5"><path d="M0,24.5L191,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.静态属性Number.isFinite(..)</tspan></text></g><g id="1047" transform="matrix(1,0,0,1,720,10781)" ed:width="133" ed:parentid="186" ed:height="24.5"><path d="M0,24.5L133,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.整型相关静态函数</tspan></text></g><g id="1049" transform="matrix(1,0,0,1,708,10887)" ed:width="106" ed:parentid="188" ed:height="24.5"><path d="M0,24.5L106,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.Unicode函数</tspan></text></g><g id="1051" transform="matrix(1,0,0,1,708,10962)" ed:width="157" ed:parentid="188" ed:height="24.5"><path d="M0,24.5L157,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.静态函数String.raw(..)</tspan></text></g><g id="1053" transform="matrix(1,0,0,1,708,11003)" ed:width="134" ed:parentid="188" ed:height="24.5"><path d="M0,24.5L134,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">3.原型函数repeat(..)</tspan></text></g><g id="1055" transform="matrix(1,0,0,1,708,11034)" ed:width="120" ed:parentid="188" ed:height="24.5"><path d="M0,24.5L120,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">4.字符串检查函数</tspan></text></g><g id="1057" transform="matrix(1,0,0,1,722,13101)" ed:width="44" ed:parentid="208" ed:height="24.5"><path d="M0,24.5L44,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">警告</tspan></text></g><g id="1061" transform="matrix(1,0,0,1,762,13288)" ed:width="120" ed:parentid="210" ed:height="24.5"><path d="M0,24.5L120,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.自定义改变事件</tspan></text></g><g id="1063" transform="matrix(1,0,0,1,762,13319)" ed:width="81" ed:parentid="210" ed:height="24.5"><path d="M0,24.5L81,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.结束观测</tspan></text></g><g id="1065" transform="matrix(1,0,0,1,576,7998)" ed:width="514" ed:parentid="110" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Map就像是一个对象（键/值对），但是键值并非只能为字符串，而是可以使用任何值-</tspan><tspan x="8" style="white-space:pre" y="35.1">甚至是另一个对象或map</tspan></text></g><g id="1067" transform="matrix(1,0,0,1,576,8048)" ed:width="514" ed:parentid="110" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Set与数组（值的序列）类似，但是其中的值是唯一的；如果新增的值是重复的，就会</tspan><tspan x="8" style="white-space:pre" y="35.1">被忽略。</tspan></text></g><g id="1069" transform="matrix(1,0,0,1,576,8098)" ed:width="413" ed:parentid="110" ed:height="24.5"><path d="M0,24.5L413,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">还有相应的弱（与内存/垃圾回收相关）版本：WeakMap和WeakSet</tspan></text></g><g id="1071" transform="matrix(1,0,0,1,713,8129)" ed:width="512" ed:parentid="168" ed:height="24.5"><path d="M0,24.5L512,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">实际上带类型的数组更多是为了使用类数组语义（索引访问等）结构化访问二进制数据</tspan></text></g><g id="1073" transform="matrix(1,0,0,1,830,8160)" ed:width="514" ed:parentid="508" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">理解下面这点很重要：arr的映射是按照运行JavaScript的平台的大小端设置（大端或小</tspan><tspan x="8" style="white-space:pre" y="35.1">端）进行的</tspan></text></g><g id="1075" transform="matrix(1,0,0,1,830,8210)" ed:width="514" ed:parentid="508" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">大小端的意思是多字节数字（比如前面代码片段中创建的16位无符号整型）中低字节</tspan><tspan x="8" style="white-space:pre" y="35.1">（8位）位于这个数字字节表示中德右侧还是左侧</tspan></text></g><g id="1077" transform="matrix(1,0,0,1,830,8260)" ed:width="462" ed:parentid="508" ed:height="24.5"><path d="M0,24.5L462,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">目前Web上最常用的是小端表示方式，但是肯定存在不采用这种方式的浏览器</tspan></text></g><g id="1079" transform="matrix(1,0,0,1,830,8291)" ed:width="186" ed:parentid="510" ed:height="24.5"><path d="M0,24.5L186,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">单个buffer可以关联多个视图</tspan></text></g><g id="1081" transform="matrix(1,0,0,1,882,8322)" ed:width="514" ed:parentid="512" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">带类型数组构造器的实例几乎和普通原生数组完全一样。一些区别包括具有固定的长度</tspan><tspan x="8" style="white-space:pre" y="35.1">以及值都属于某种“类型”</tspan></text></g><g id="1083" transform="matrix(1,0,0,1,882,8372)" ed:width="514" ed:parentid="512" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">不能对TypedArray使用不合理的Array.prototype方法，比如修改器(splice(..)、</tspan><tspan x="8" style="white-space:pre" y="35.1">push(..)等)和concat(..)</tspan></text></g><g id="1085" transform="matrix(1,0,0,1,882,8422)" ed:width="348" ed:parentid="512" ed:height="24.5"><path d="M0,24.5L348,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">要清楚TypedArray中德元素是限制在声明的位数大小中的</tspan></text></g><g id="1087" transform="matrix(1,0,0,1,882,8453)" ed:width="369" ed:parentid="512" ed:height="24.5"><path d="M0,24.5L369,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">要解决平方值溢出的局限，可以使用TypedArray.from(..)函数</tspan></text></g><g id="1089" transform="matrix(1,0,0,1,671,8484)" ed:width="423" ed:parentid="170" ed:height="24.5"><path d="M0,24.5L423,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">了解对象是创建无序键/值对数据结构[也称为映射（map）的主要机制]</tspan></text></g><g id="1091" transform="matrix(1,0,0,1,671,8515)" ed:width="330" ed:parentid="170" ed:height="24.5"><path d="M0,24.5L330,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">对象作为映射的主要缺点是不能使用非字符串值作为键</tspan></text></g><g id="1093" transform="matrix(1,0,0,1,671,8546)" ed:width="514" ed:parentid="170" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">唯一的缺点就是不能使用方括号[ ]语法设置和获取值，但完全可以使用get(..)和set(..)方</tspan><tspan x="8" style="white-space:pre" y="35.1">法完美代替</tspan></text></g><g id="1095" transform="matrix(1,0,0,1,790,8627)" ed:width="514" ed:parentid="516" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">map的本质是允许你把某些额外的信息（值）关联到一个对象（键）上，而无需把这个</tspan><tspan x="8" style="white-space:pre" y="35.1">信息放入对象本身</tspan></text></g><g id="1097" transform="matrix(1,0,0,1,790,8677)" ed:width="514" ed:parentid="516" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">对于map来说，尽管可以使用任意类型的值作为键，但通常我们会使用对象，因为字符</tspan><tspan x="8" style="white-space:pre" y="35.1">串或者其他基本类型已经可以作为普通对象的键使用</tspan></text></g><g id="1099" transform="matrix(1,0,0,1,705,8727)" ed:width="514" ed:parentid="172" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">WeakMap是map的变体，二者的多数外部行为都是一样的，区别在于内部内存分配</tspan><tspan x="8" style="white-space:pre" y="35.1">（特别是其GC）的工作方式</tspan></text></g><g id="1101" transform="matrix(1,0,0,1,705,8777)" ed:width="514" ed:parentid="172" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">WeakMap（只）接受对象作为键。这些对象是被弱持有的，也就是说如果对象本身被</tspan><tspan x="8" style="white-space:pre" y="35.1">垃圾回收的话，在WeakMap中的这个项目也会被移除</tspan></text></g><g id="1103" transform="matrix(1,0,0,1,705,8827)" ed:width="477" ed:parentid="172" ed:height="24.5"><path d="M0,24.5L477,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">WeakMap没有size属性或clear()方法，也不会暴露任何键、值或项目上的迭代器</tspan></text></g><g id="1105" transform="matrix(1,0,0,1,705,8858)" ed:width="340" ed:parentid="172" ed:height="24.5"><path d="M0,24.5L340,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">需要注意的是，WeakMap只是弱持有它的键，而不是值</tspan></text></g><g id="1107" transform="matrix(1,0,0,1,663,8889)" ed:width="322" ed:parentid="174" ed:height="24.5"><path d="M0,24.5L322,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">set是一个值的集合，其中的值唯一（重复会被忽略）</tspan></text></g><g id="1109" transform="matrix(1,0,0,1,663,8920)" ed:width="514" ed:parentid="174" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">除了会把-0和0当作是一样的而不加区别之外，has(..)中的比较算法和Object.is(..)几乎</tspan><tspan x="8" style="white-space:pre" y="35.1">一样</tspan></text></g><g id="1111" transform="matrix(1,0,0,1,767,8970)" ed:width="218" ed:parentid="518" ed:height="24.5"><path d="M0,24.5L218,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">set固有的唯一性是它最有用的特性</tspan></text></g><g id="1113" transform="matrix(1,0,0,1,767,9001)" ed:width="377" ed:parentid="518" ed:height="24.5"><path d="M0,24.5L377,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">set的唯一性不允许强制转换，所以1和“1”被认为是不同的值</tspan></text></g><g id="1115" transform="matrix(1,0,0,1,697,9032)" ed:width="514" ed:parentid="176" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">就像WeakMap弱持有它的键（对其值是强持有的）一样，WeakSet对其值也是弱持有</tspan><tspan x="8" style="white-space:pre" y="35.1">的（这里并没有键）</tspan></text></g><g id="1117" transform="matrix(1,0,0,1,697,9082)" ed:width="376" ed:parentid="176" ed:height="24.5"><path d="M0,24.5L376,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">WeakSet的值必须是对象，而并不像set一样可以是原生类型值</tspan></text></g><g id="1119" transform="matrix(1,0,0,1,669,9113)" ed:width="514" ed:parentid="178" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">TypedArray提供了对二进制数据buffer的各种整型类型“视图”，比如8位无符号整型</tspan><tspan x="8" style="white-space:pre" y="35.1">和32位浮点型。对二进制数据的数组访问使得运算更容易表达和维护，从而可以更容</tspan><tspan x="8" style="white-space:pre" y="54.1">易操纵视频、音频、canvas数据等这样的复杂数据</tspan></text></g><g id="1121" transform="matrix(1,0,0,1,669,9182)" ed:width="514" ed:parentid="178" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Map是键/值对，其中的键不只是字符串/原生类型，也可以是对象。Set是成员值（任</tspan><tspan x="8" style="white-space:pre" y="35.1">意类型）唯一的列表</tspan></text></g><g id="1123" transform="matrix(1,0,0,1,669,9232)" ed:width="514" ed:parentid="178" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">WeakMap也是map，其中的键（对象）是弱持有的，因此当它是对这个对象的最后一</tspan><tspan x="8" style="white-space:pre" y="35.1">个引用的时候，GC（垃圾回收）可以回收这个项目。WeakSet也是set，其中的值是弱</tspan><tspan x="8" style="white-space:pre" y="54.1">持有的，也就是如果其中的项目是对这个对象最后一个引用的时候，GC可以移除它</tspan></text></g><g id="1125" transform="matrix(1,0,0,1,702,9328)" ed:width="399" ed:parentid="180" ed:height="24.5"><path d="M0,24.5L399,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">各种JavaScript用户库扩展最多的特性之一就是数组（Array）类型</tspan></text></g><g id="1127" transform="matrix(1,0,0,1,873,9359)" ed:width="514" ed:parentid="1017" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Array(..)构造器有一个众所周知的陷阱，就是如果只传入一个参数，并且这个参数是数</tspan><tspan x="8" style="white-space:pre" y="35.1">字的话，那么不会构造一个值为这个数字的单个元素的数组，而是构造一个空数组，其</tspan><tspan x="8" style="white-space:pre" y="54.1">length属性为这个数字</tspan></text></g><g id="1129" transform="matrix(1,0,0,1,890,9428)" ed:width="514" ed:parentid="1019" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript中的“类（似）数组对象”是指一个有length属性，具体说是大于等于0的</tspan><tspan x="8" style="white-space:pre" y="35.1">整数值的对象</tspan></text></g><g id="1131" transform="matrix(1,0,0,1,890,9478)" ed:width="450" ed:parentid="1019" ed:height="24.5"><path d="M0,24.5L450,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">普遍的需求就是把他们转为真正的数组，Array.prototype.slice.call(arrLike)</tspan></text></g><g id="1133" transform="matrix(1,0,0,1,890,9509)" ed:width="424" ed:parentid="1019" ed:height="24.5"><path d="M0,24.5L424,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">新的ES6 Array.from(..)方法都是更好理解、更优雅、更简洁的替代方法</tspan></text></g><g id="1135" transform="matrix(1,0,0,1,890,9611)" ed:width="94" ed:parentid="1019" ed:height="24.5"><path d="M0,24.5L94,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">1.避免空槽位</tspan></text></g><g id="1137" transform="matrix(1,0,0,1,1011,9540)" ed:width="215" ed:parentid="1135" ed:height="24.5"><path d="M0,24.5L215,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Array.from(..)永远不会产生空槽位</tspan></text></g><g id="1139" transform="matrix(1,0,0,1,1011,9571)" ed:width="514" ed:parentid="1135" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如果想要产生一个初始化为某个长度，在每个槽位上都是真正的undefined值（不是空</tspan><tspan x="8" style="white-space:pre" y="35.1">槽位！）的数组</tspan></text></g><g id="1141" transform="matrix(1,0,0,1,1011,9621)" ed:width="243" ed:parentid="1135" ed:height="24.5"><path d="M0,24.5L243,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6前，Array.apply(null, { length: 4 })</tspan></text></g><g id="1143" transform="matrix(1,0,0,1,1011,9652)" ed:width="198" ed:parentid="1135" ed:height="24.5"><path d="M0,24.5L198,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6，Array.from({ length: 4 })</tspan></text></g><g id="1145" transform="matrix(1,0,0,1,1011,9683)" ed:width="505" ed:parentid="1135" ed:height="24.5"><path d="M0,24.5L505,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">永远不要故意利用空槽位工作，因为它几乎肯定会导致程序出现诡异/意料之外的行为</tspan></text></g><g id="1147" transform="matrix(1,0,0,1,890,9739)" ed:width="55" ed:parentid="1019" ed:height="24.5"><path d="M0,24.5L55,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">2.映射</tspan></text></g><g id="1149" transform="matrix(1,0,0,1,972,9714)" ed:width="507" ed:parentid="1147" ed:height="24.5"><path d="M0,24.5L507,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Array.from(..)第二个参数是一个映射回调，把来自于源的每一个值映射/转换到返回值</tspan></text></g><g id="1151" transform="matrix(1,0,0,1,972,9745)" ed:width="514" ed:parentid="1147" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Array.from(..)接收一个可选的第三个参数，如果设置了的话，这个参数为作为第二个参</tspan><tspan x="8" style="white-space:pre" y="35.1">数传入的回调指定this绑定</tspan></text></g><g id="1153" transform="matrix(1,0,0,1,862,9795)" ed:width="310" ed:parentid="1021" ed:height="24.5"><path d="M0,24.5L310,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">of(..)和from(..)都使用访问它们的构造器来构造数组</tspan></text></g><g id="1155" transform="matrix(1,0,0,1,902,9826)" ed:width="372" ed:parentid="1023" ed:height="24.5"><path d="M0,24.5L372,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Array.copyWithin(..)是一个新的修改器方法，所有数组都支持</tspan></text></g><g id="1157" transform="matrix(1,0,0,1,902,9857)" ed:width="499" ed:parentid="1023" ed:height="24.5"><path d="M0,24.5L499,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">它从一个数组中复制一部分到同一个数组的另一个位置，覆盖这个位置所有原来的值</tspan></text></g><g id="1159" transform="matrix(1,0,0,1,902,9888)" ed:width="414" ed:parentid="1023" ed:height="24.5"><path d="M0,24.5L414,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">copyWithin(..)方法不会增加数组的长度。到达数组结尾复制就会停止</tspan></text></g><g id="1161" transform="matrix(1,0,0,1,838,9919)" ed:width="265" ed:parentid="1025" ed:height="24.5"><path d="M0,24.5L265,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">用指定值完全（或部分）填充已存在的数组</tspan></text></g><g id="1163" transform="matrix(1,0,0,1,838,9950)" ed:width="368" ed:parentid="1025" ed:height="24.5"><path d="M0,24.5L368,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可选接收参数start和end，它们指定了数组要填充的子集位置</tspan></text></g><g id="1165" transform="matrix(1,0,0,1,848,9981)" ed:width="514" ed:parentid="1027" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在数组中搜索一个值得最常用方法一直是indexOf(..)方法，这个方法返回找到值的索</tspan><tspan x="8" style="white-space:pre" y="35.1">引，如果没有找到就返回-1</tspan></text></g><g id="1167" transform="matrix(1,0,0,1,848,10031)" ed:width="189" ed:parentid="1027" ed:height="24.5"><path d="M0,24.5L189,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">indexOf(..)需要严格匹配===</tspan></text></g><g id="1169" transform="matrix(1,0,0,1,848,10062)" ed:width="357" ed:parentid="1027" ed:height="24.5"><path d="M0,24.5L357,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6的find(..)一旦回到返回true/真值，会返回实际的数组值</tspan></text></g><g id="1171" transform="matrix(1,0,0,1,882,10093)" ed:width="514" ed:parentid="1029" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如果需要严格匹配的索引值，那么使用indexOf(..)，如果需要自定义匹配的索引值，那</tspan><tspan x="8" style="white-space:pre" y="35.1">么使用findIndex(..)</tspan></text></g><g id="1173" transform="matrix(1,0,0,1,966,10143)" ed:width="514" ed:parentid="1031" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">它提供了同样的迭代器方法entries()、values()和keys()，从这个意义上说，他是一个集</tspan><tspan x="8" style="white-space:pre" y="35.1">合</tspan></text></g><g id="1175" transform="matrix(1,0,0,1,885,10193)" ed:width="323" ed:parentid="1033" ed:height="24.5"><path d="M0,24.5L323,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">静态函数Object.is(..)执行比===比较更严格的值比较</tspan></text></g><g id="1177" transform="matrix(1,0,0,1,885,10224)" ed:width="244" ed:parentid="1033" ed:height="24.5"><path d="M0,24.5L244,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Object.is(..)调用底层的SameValue算法</tspan></text></g><g id="1179" transform="matrix(1,0,0,1,885,10255)" ed:width="349" ed:parentid="1033" ed:height="24.5"><path d="M0,24.5L349,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">如果需要严格识别NaN或者-0，那么应该选择Object.is(..)</tspan></text></g><g id="1181" transform="matrix(1,0,0,1,1030,10286)" ed:width="226" ed:parentid="1035" ed:height="24.5"><path d="M0,24.5L226,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">它直接从对象上取得所有的符号属性</tspan></text></g><g id="1183" transform="matrix(1,0,0,1,971,10317)" ed:width="238" ed:parentid="1037" ed:height="24.5"><path d="M0,24.5L238,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">设置对象的[[Prototype]]用于行为委托</tspan></text></g><g id="1185" transform="matrix(1,0,0,1,914,10348)" ed:width="508" ed:parentid="1039" ed:height="24.5"><path d="M0,24.5L508,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">很多JavaScript库/框架提供了用于把一个对象的属性复制/混合到另一个对象中德工具</tspan></text></g><g id="1187" transform="matrix(1,0,0,1,914,10379)" ed:width="514" ed:parentid="1039" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6新增了Object.assign(..)，对于每个源来说，它的可枚举和自己拥有的（也就是不</tspan><tspan x="8" style="white-space:pre" y="35.1">是“继承来的”）键值，包括符号都会通过简单=赋值被复制</tspan></text></g><g id="1189" transform="matrix(1,0,0,1,914,10429)" ed:width="343" ed:parentid="1039" ed:height="24.5"><path d="M0,24.5L343,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">不可枚举的属性和非自有的属性都被排除在赋值过程之外</tspan></text></g><g id="1191" transform="matrix(1,0,0,1,914,10460)" ed:width="396" ed:parentid="1039" ed:height="24.5"><path d="M0,24.5L396,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Object.create(..)是ES5工具，创建一个[[Prototype]]链接的空对象</tspan></text></g><g id="1193" transform="matrix(1,0,0,1,702,10491)" ed:width="369" ed:parentid="184" ed:height="24.5"><path d="M0,24.5L369,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">更优化地执行这些计算，或者执行比手动版本精度更高的计算</tspan></text></g><g id="1195" transform="matrix(1,0,0,1,720,10522)" ed:width="514" ed:parentid="186" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">两个新增内容就是指向已有的全局函数的引用：Number.parseInt(..)和</tspan><tspan x="8" style="white-space:pre" y="35.1">Number.parseFloat(..)</tspan></text></g><g id="1197" transform="matrix(1,0,0,1,828,10572)" ed:width="514" ed:parentid="1041" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">新增了一些辅助数字常量：Number.EPSOLON、Number.MAX_SAFE_INTEGER、</tspan><tspan x="8" style="white-space:pre" y="35.1">Number.MIN_SAFE_INTEGER</tspan></text></g><g id="1199" transform="matrix(1,0,0,1,934,10622)" ed:width="514" ed:parentid="1043" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">标准全局工具isNaN(..)自出现以来就是有缺陷的，它对非数字的东西都返回true，而不</tspan><tspan x="8" style="white-space:pre" y="35.1">是只对真实的NaN值返回true，因为它把参数强制转换为数字类型（可能会错误地导致</tspan><tspan x="8" style="white-space:pre" y="54.1">NaN）。ES6增加了一个修正工具Number.isNaN，可以按照期望工作</tspan></text></g><g id="1203" transform="matrix(1,0,0,1,938,10691)" ed:width="514" ed:parentid="1045" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">标准的全局isFinite(..)会对参数进行强制类型转换，但是Number.isFinite(..)会略去这种</tspan><tspan x="8" style="white-space:pre" y="35.1">强制行为</tspan></text></g><g id="1205" transform="matrix(1,0,0,1,880,10741)" ed:width="297" ed:parentid="1047" ed:height="24.5"><path d="M0,24.5L297,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript的数字值永远都是浮点数（IEE-754）</tspan></text></g><g id="1207" transform="matrix(1,0,0,1,880,10772)" ed:width="521" ed:parentid="1047" ed:height="24.5"><path d="M0,24.5L521,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">检查一个值得小数部分是否非0，x===Math.floor(x)，ES6新增了Number.isInteger(..)</tspan></text></g><g id="1209" transform="matrix(1,0,0,1,880,10803)" ed:width="514" ed:parentid="1047" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript代码本身不会因为只使用整数而运行得更快，但是，只有在使用整数时，引</tspan><tspan x="8" style="white-space:pre" y="35.1">擎才可以采用优化技术（比如asm.js）</tspan></text></g><g id="1213" transform="matrix(1,0,0,1,841,10853)" ed:width="514" ed:parentid="1049" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">String.fromCodePoint(..)、String.codePointAt(..)和String.normalize(..)新增这些函数</tspan><tspan x="8" style="white-space:pre" y="35.1">是为了提高JavaScript字符串值uiUnicode的支持</tspan></text></g><g id="1215" transform="matrix(1,0,0,1,841,10903)" ed:width="514" ed:parentid="1049" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">字符串原型方法normalize(..)用于执行Unicode规范化，或者把字符用“合并符”连接</tspan><tspan x="8" style="white-space:pre" y="35.1">起来或者把合并的字符解开</tspan></text></g><g id="1217" transform="matrix(1,0,0,1,892,10953)" ed:width="514" ed:parentid="1051" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">String.raw(..)工具作为内置标签函数提供，与模板字符串字面值一起使用，用于获得不</tspan><tspan x="8" style="white-space:pre" y="35.1">应用任何转义序列的原始字符串</tspan></text></g><g id="1221" transform="matrix(1,0,0,1,869,11003)" ed:width="83" ed:parentid="1053" ed:height="24.5"><path d="M0,24.5L83,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">重复字符串</tspan></text></g><g id="1225" transform="matrix(1,0,0,1,855,11034)" ed:width="453" ed:parentid="1055" ed:height="24.5"><path d="M0,24.5L453,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">又新增了3个用于搜索/检查的新方法：startsWidth、endsWidth和includes</tspan></text></g><g id="1227" transform="matrix(1,0,0,1,592,11172)" ed:width="70" ed:parentid="114" ed:height="24.5"><path d="M0,24.5L70,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">写在前面</tspan></text></g><g id="1229" transform="matrix(1,0,0,1,689,11122)" ed:width="512" ed:parentid="1227" ed:height="24.5"><path d="M0,24.5L512,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">元编程是指操作目标是程序本身的行为特性的编程。换句话说，它是程序的编程的编程</tspan></text></g><g id="1231" transform="matrix(1,0,0,1,689,11153)" ed:width="514" ed:parentid="1227" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">元编程关注以下一点或几点：代码查看自身，代码修改自身，代码修改默认语言特性，</tspan><tspan x="8" style="white-space:pre" y="35.1">以便影响其他代码</tspan></text></g><g id="1233" transform="matrix(1,0,0,1,689,11203)" ed:width="514" ed:parentid="1227" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">元编程的目标是利用语言自身的内省能力是代码的其余部分更具描述性、表达性和灵活</tspan><tspan x="8" style="white-space:pre" y="35.1">性</tspan></text></g><g id="1235" transform="matrix(1,0,0,1,711,11253)" ed:width="514" ed:parentid="192" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">默认情况下，name属性不可写，但可配置，也就是说如果需要的话，可使用</tspan><tspan x="8" style="white-space:pre" y="35.1">Object.defineProperty(..)来手动修改</tspan></text></g><g id="1237" transform="matrix(1,0,0,1,698,11303)" ed:width="382" ed:parentid="194" ed:height="24.5"><path d="M0,24.5L382,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">元属性以属性访问的形式提供特殊的其他方法无法获取的元信息</tspan></text></g><g id="1239" transform="matrix(1,0,0,1,698,11334)" ed:width="514" ed:parentid="194" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">对于所有的元编程技术都要小心，不要编写过于机灵的代码，让未来的你或者其他代码</tspan><tspan x="8" style="white-space:pre" y="35.1">维护者难以理解</tspan></text></g><g id="1241" transform="matrix(1,0,0,1,711,11384)" ed:width="514" ed:parentid="196" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">除了在自己的程序中定义符号之外，JavaScript预先定义了一些内置符号，称为公开符</tspan><tspan x="8" style="white-space:pre" y="35.1">号</tspan></text></g><g id="1243" transform="matrix(1,0,0,1,711,11434)" ed:width="514" ed:parentid="196" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Symbol.iterator表示任意对象上的一个专门位置（属性），语言机制自动在这个位置</tspan><tspan x="8" style="white-space:pre" y="35.1">上寻找一个方法，这个方法构造一个迭代器来消耗这个对象的值</tspan></text></g><g id="1245" transform="matrix(1,0,0,1,711,11484)" ed:width="514" ed:parentid="196" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">最常见的一个元编程任务，就是在一个值上进行内省来找出它是什么种类，这通常是为</tspan><tspan x="8" style="white-space:pre" y="35.1">了确定其上适合执行何种运算。最常用的内省技术是toString()和instanceof</tspan></text></g><g id="1247" transform="matrix(1,0,0,1,711,11534)" ed:width="491" ed:parentid="196" ed:height="24.5"><path d="M0,24.5L491,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">符号@@species，这个符号控制要生成新实例时，类的内置方法使用哪一个构造器</tspan></text></g><g id="1249" transform="matrix(1,0,0,1,711,11565)" ed:width="514" ed:parentid="196" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">抽象类型转换运算ToPrimitive，它用在对象为了某个操作必须被强制转换为一个原生</tspan><tspan x="8" style="white-space:pre" y="35.1">类型值得时候。ES6之前，没有办法控制这个行为</tspan></text></g><g id="1251" transform="matrix(1,0,0,1,711,11615)" ed:width="514" ed:parentid="196" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6中，在任意对象值上作为属性的符号@@toPrimitivesymbol都可以通过指定一个</tspan><tspan x="8" style="white-space:pre" y="35.1">方法来定制这个ToPrimitive强制转换</tspan></text></g><g id="1253" transform="matrix(1,0,0,1,711,11665)" ed:width="514" ed:parentid="196" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">对于正则表达式对象，有4个公开符号可以被覆盖：@@match、@@search、</tspan><tspan x="8" style="white-space:pre" y="35.1">@@split、@@replace</tspan></text></g><g id="1255" transform="matrix(1,0,0,1,711,11715)" ed:width="514" ed:parentid="196" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">符号@@isConcatSpreadable可以被定义为任意对象的布尔型属性</tspan><tspan x="8" style="white-space:pre" y="35.1">（Symbol.isConcattSpreadable），用来指示如果把它传给一个数组的concat(..)是否</tspan><tspan x="8" style="white-space:pre" y="54.1">应该将其展开</tspan></text></g><g id="1257" transform="matrix(1,0,0,1,711,11784)" ed:width="514" ed:parentid="196" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">符号@@unscopables可以被定义为任意对象的对象属性（Symbol.unscopables），</tspan><tspan x="8" style="white-space:pre" y="35.1">用来指示使用with语句时哪些属性可以或部可以暴露为词法变量</tspan></text></g><g id="1259" transform="matrix(1,0,0,1,711,11834)" ed:width="465" ed:parentid="196" ed:height="24.5"><path d="M0,24.5L465,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">strict模式下不允许with语句，因此应当被认为是语言的过时特性。不要使用它</tspan></text></g><g id="1261" transform="matrix(1,0,0,1,685,11865)" ed:width="344" ed:parentid="198" ed:height="24.5"><path d="M0,24.5L344,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ES6种新增的最明显的元编程特性之一是Proxy(代理)特性</tspan></text></g><g id="1263" transform="matrix(1,0,0,1,685,11896)" ed:width="514" ed:parentid="198" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">代理是一种由你创建的特殊的对象，它“封装”另一个普通对象--或者说挡在这个普通</tspan><tspan x="8" style="white-space:pre" y="35.1">对象的前面</tspan></text></g><g id="1265" transform="matrix(1,0,0,1,685,11987)" ed:width="116" ed:parentid="198" ed:height="24.5"><path d="M0,24.5L116,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.4.1.代理局限性</tspan></text></g><g id="1267" transform="matrix(1,0,0,1,828,11946)" ed:width="472" ed:parentid="1265" ed:height="24.5"><path d="M0,24.5L472,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可以在对象上执行的很广泛的一组基本操作都可以通过这些元编程处理函数trap</tspan></text></g><g id="1269" transform="matrix(1,0,0,1,828,11977)" ed:width="422" ed:parentid="1265" ed:height="24.5"><path d="M0,24.5L422,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">代理处理函数总会有一些不变形（invariant），亦即不能被覆盖的行为</tspan></text></g><g id="1271" transform="matrix(1,0,0,1,828,12008)" ed:width="514" ed:parentid="1265" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">这些不变性限制了自定义代理行为的能力，但它们的目的只是为了防止你创建诡异或罕</tspan><tspan x="8" style="white-space:pre" y="35.1">见（或者不一致）的行为</tspan></text></g><g id="1273" transform="matrix(1,0,0,1,685,12133)" ed:width="116" ed:parentid="198" ed:height="24.5"><path d="M0,24.5L116,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.4.2.可取消代理</tspan></text></g><g id="1275" transform="matrix(1,0,0,1,828,12058)" ed:width="514" ed:parentid="1273" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">想要创建一个在你想要停止它作为代理时便可以被停用的代理。解决方案是创建可取消</tspan><tspan x="8" style="white-space:pre" y="35.1">代理</tspan></text></g><g id="1277" transform="matrix(1,0,0,1,828,12108)" ed:width="514" ed:parentid="1273" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可取消代理用Proxy.revocable(..)创建，这是一个普通函数，而不像Proxy(..)一样是构</tspan><tspan x="8" style="white-space:pre" y="35.1">造器</tspan></text></g><g id="1279" transform="matrix(1,0,0,1,828,12158)" ed:width="492" ed:parentid="1273" ed:height="24.5"><path d="M0,24.5L492,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">一旦可取消代理被取消，任何对它的访问（触发它的任意trap）都会抛出TypeError</tspan></text></g><g id="1281" transform="matrix(1,0,0,1,828,12189)" ed:width="514" ed:parentid="1273" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可取消代理的一个可能应用场景是，在你的应用中把代理分发到第三方，其中管理你的</tspan><tspan x="8" style="white-space:pre" y="35.1">模型数据，而不是给出真实模型本身的引用</tspan></text></g><g id="1283" transform="matrix(1,0,0,1,685,12239)" ed:width="103" ed:parentid="198" ed:height="24.5"><path d="M0,24.5L103,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">7.4.3.使用代理</tspan></text></g><g id="1285" transform="matrix(1,0,0,1,815,12239)" ed:width="440" ed:parentid="1283" ed:height="24.5"><path d="M0,24.5L440,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">代理成为了代码交互的主要对象，而实际目标对象保持隐藏/被保护的状态</tspan></text></g><g id="1287" transform="matrix(1,0,0,1,726,12270)" ed:width="502" ed:parentid="200" ed:height="24.5"><path d="M0,24.5L502,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Reflect对象是一个平凡对象（就像Math），不像其他内置原生值一样是函数/构造器</tspan></text></g><g id="1289" transform="matrix(1,0,0,1,726,12301)" ed:width="291" ed:parentid="200" ed:height="24.5"><path d="M0,24.5L291,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">它持有对应于各种可控的元编程任务的静态函数</tspan></text></g><g id="1291" transform="matrix(1,0,0,1,726,12332)" ed:width="514" ed:parentid="200" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">有一个区别是如果第一个参数（目标对象）不是对象的话，Object.*相应工具会试图把</tspan><tspan x="8" style="white-space:pre" y="35.1">它类型转换为一个对象</tspan></text></g><g id="1293" transform="matrix(1,0,0,1,726,12382)" ed:width="514" ed:parentid="200" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Reflect的元编程能力提供了模拟各种语法特性的编程等价物，把之前隐藏的抽象操作</tspan><tspan x="8" style="white-space:pre" y="35.1">暴露出来。可以利用这些能力扩展功能和API，以实现领域特定语言（DSL）</tspan></text></g><g id="1295" transform="matrix(1,0,0,1,726,12494)" ed:width="70" ed:parentid="200" ed:height="24.5"><path d="M0,24.5L70,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">属性排序</tspan></text></g><g id="1297" transform="matrix(1,0,0,1,823,12432)" ed:width="476" ed:parentid="1295" ed:height="24.5"><path d="M0,24.5L476,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在ES6之前，一个对象键/属性的列出顺序是依赖于具体实现，并未在规范中定义</tspan></text></g><g id="1299" transform="matrix(1,0,0,1,823,12463)" ed:width="453" ed:parentid="1295" ed:height="24.5"><path d="M0,24.5L453,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">对于ES6来说，拥有属性的列出顺序是是由[[OwnPropertyKeys]]算法定义的</tspan></text></g><g id="1301" transform="matrix(1,0,0,1,823,12525)" ed:width="70" ed:parentid="1295" ed:height="24.5"><path d="M0,24.5L70,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">其顺序为</tspan></text></g><g id="1303" transform="matrix(1,0,0,1,920,12494)" ed:width="343" ed:parentid="1301" ed:height="24.5"><path d="M0,24.5L343,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">首先，按照数字上升排序，枚举所有整数索引拥有的属性</tspan></text></g><g id="1305" transform="matrix(1,0,0,1,920,12525)" ed:width="321" ed:parentid="1301" ed:height="24.5"><path d="M0,24.5L321,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">然后，按照创建顺序枚举其余的拥有的字符串属性名 </tspan></text></g><g id="1307" transform="matrix(1,0,0,1,920,12556)" ed:width="252" ed:parentid="1301" ed:height="24.5"><path d="M0,24.5L252,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">最后，按照创建顺序枚举拥有的符号属性</tspan></text></g><g id="1309" transform="matrix(1,0,0,1,711,12587)" ed:width="395" ed:parentid="202" ed:height="24.5"><path d="M0,24.5L395,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">特性测试，就是一种由你运行的用来判断一个特性是否可用的测试</tspan></text></g><g id="1311" transform="matrix(1,0,0,1,711,12618)" ed:width="514" ed:parentid="202" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript中最常用的特性测试是检查一个API是否存在，如果不存在的话，定义一个</tspan><tspan x="8" style="white-space:pre" y="35.1">polyfill</tspan></text></g><g id="1313" transform="matrix(1,0,0,1,724,12668)" ed:width="514" ed:parentid="204" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">通常，在一个函数内部调用另一个函数的时候，会分配第二个栈帧来独立管理第二个函</tspan><tspan x="8" style="white-space:pre" y="35.1">数调用的变量/函数</tspan></text></g><g id="1449" transform="matrix(1,0,0,1,724,12718)" ed:width="514" ed:parentid="204" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">当考虑递归编程的时候（一个函数重复调用自身）-或者两个或多个函数彼此调用形成</tspan><tspan x="8" style="white-space:pre" y="35.1">递归-调用栈的深度很容易达到成百上千，甚至更多</tspan></text></g><g id="1451" transform="matrix(1,0,0,1,724,12768)" ed:width="514" ed:parentid="204" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">JavaScript引擎不得不设置一个武断的限制来防止这种编程技术引起浏览器和设备内存</tspan><tspan x="8" style="white-space:pre" y="35.1">消耗尽而崩溃。“RangeError：Maximum call stack size exceeded”</tspan></text></g><g id="1453" transform="matrix(1,0,0,1,724,12818)" ed:width="514" ed:parentid="204" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">调用栈深度限制不由规范控制。它是依赖于具体实现的，并且根据浏览器和设备不同而</tspan><tspan x="8" style="white-space:pre" y="35.1">有所不同</tspan></text></g><g id="1457" transform="matrix(1,0,0,1,724,12868)" ed:width="514" ed:parentid="204" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">尾调用优化（Tail Call Optimization， TCO） - 于是额外的栈帧分配是不需要的。引</tspan><tspan x="8" style="white-space:pre" y="35.1">擎不需要对下一个函数调用创建一个新的栈帧，只需复用已有的栈帧</tspan></text></g><g id="1459" transform="matrix(1,0,0,1,603,12976)" ed:width="514" ed:parentid="116" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">在新特性还没有被需要支持的所有浏览器都实现的情况下，transpiler和polyfill是我们</tspan><tspan x="8" style="white-space:pre" y="35.1">迁移到新特性的桥梁</tspan></text></g><g id="1461" transform="matrix(1,0,0,1,722,13026)" ed:width="514" ed:parentid="208" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">async function 本质上就是生成器+Promise+run(..)模式的语法糖；它们底层的运作</tspan><tspan x="8" style="white-space:pre" y="35.1">方式是一样的</tspan></text></g><g id="1463" transform="matrix(1,0,0,1,793,13076)" ed:width="514" ed:parentid="1057" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">async function有一个没有解决的问题，因为它只返回一个promise，所以没有办法从</tspan><tspan x="8" style="white-space:pre" y="35.1">外部取消一个正在运行的async function实例</tspan></text></g><g id="1465" transform="matrix(1,0,0,1,793,13126)" ed:width="353" ed:parentid="1057" ed:height="24.5"><path d="M0,24.5L353,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Promise是不可取消的（至少在编写本部分的时候是如此）</tspan></text></g><g id="1467" transform="matrix(1,0,0,1,762,13157)" ed:width="498" ed:parentid="210" ed:height="24.5"><path d="M0,24.5L498,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可能在后ES6，我们将会看到通过工具Object.observe(..)直接添加到语言中的支持。</tspan></text></g><g id="1469" transform="matrix(1,0,0,1,762,13188)" ed:width="514" ed:parentid="210" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">本质上说，这个思路就是你可以建立一个侦听者（listener）来观察对象的改变，然后</tspan><tspan x="8" style="white-space:pre" y="35.1">在每次变化发生时调用一个回调</tspan></text></g><g id="1471" transform="matrix(1,0,0,1,762,13238)" ed:width="514" ed:parentid="210" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">可以观察的改变有6种类型：add、update、delete、reconfigure、setPrototype、</tspan><tspan x="8" style="white-space:pre" y="35.1">preventExtensions</tspan></text></g><g id="1473" transform="matrix(1,0,0,1,909,13288)" ed:width="377" ed:parentid="1061" ed:height="24.5"><path d="M0,24.5L377,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">除了前面6类内置改变事件，也可以侦听和发出自定义改变事件</tspan></text></g><g id="1475" transform="matrix(1,0,0,1,722,13350)" ed:width="481" ed:parentid="212" ed:height="24.5"><path d="M0,24.5L481,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">有提案提出为JavaScript新增一个运算符用于执行幂运算，就像Math.pow(..)一样</tspan></text></g><g id="1477" transform="matrix(1,0,0,1,744,13381)" ed:width="339" ed:parentid="214" ed:height="24.5"><path d="M0,24.5L339,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">...运算符展开和收集数组的用法很直观，那么对于对象呢</tspan></text></g><g id="1479" transform="matrix(1,0,0,1,761,13412)" ed:width="514" ed:parentid="216" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">出现了一个获得了大量支持的提案，提出增加一个真正返回布尔值的数组搜索方法</tspan><tspan x="8" style="white-space:pre" y="35.1">includes(..)</tspan></text></g><g id="1481" transform="matrix(1,0,0,1,761,13462)" ed:width="426" ed:parentid="216" ed:height="24.5"><path d="M0,24.5L426,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">Array.includes(..)使用的匹配逻辑能够找到Nan值，但是无法区分-0和0</tspan></text></g><g id="1483" transform="matrix(1,0,0,1,705,13493)" ed:width="417" ed:parentid="218" ed:height="24.5"><path d="M0,24.5L417,24.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">SIMD API暴露了可以同时对多个数字值运算的各种底层（CPU）指令</tspan></text></g><g id="1485" transform="matrix(1,0,0,1,825,13524)" ed:width="514" ed:parentid="220" ed:height="43.5"><path d="M0,43.5L514,43.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">最近（以及不久的将来）JavaScript语言设计修改上的最大压力之一就是需要成为更适</tspan><tspan x="8" style="white-space:pre" y="35.1">合从其他语言（比如C/C++、ClojureScript）变换/交叉编译的目标语言</tspan></text></g><g id="1487" transform="matrix(1,0,0,1,825,13574)" ed:width="514" ed:parentid="220" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">ASM.js是合法JavaScript的一个子集，这个子集最严格地限制了那些使得JavaScript引</tspan><tspan x="8" style="white-space:pre" y="35.1">擎难以优化的行为。结果就是兼容ASM.js的代码运行在支持ASM的引擎上时效率有巨</tspan><tspan x="8" style="white-space:pre" y="54.1">大的提升，几乎与原生优化的等价C程序相当</tspan></text></g><g id="1489" transform="matrix(1,0,0,1,825,13643)" ed:width="514" ed:parentid="220" ed:height="62.5"><path d="M0,62.5L514,62.5" fill="none" stroke="#696969" stroke-linejoin="round"/><text class="st3"><tspan x="8" style="white-space:pre" y="16.1">WASM提出了一种代码的高度压缩AST（语法树）二进制表示格式，然后可以直接向</tspan><tspan x="8" style="white-space:pre" y="35.1">JavaScript引擎发出指令，而它的基础结构，不需要通过JavaScript解析，甚至不需要</tspan><tspan x="8" style="white-space:pre" y="54.1">符合JavaScript的规则</tspan></text></g><symbol id="plus"><path d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6z" fill="url(#lg1)"/><path stroke-width="0.7" d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6zM3,6L9,6M6,3L6,9" fill="none" stroke="#46a000"/></symbol><symbol id="minus"><path d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6z" fill="url(#lg1)"/><path stroke-width="0.7" d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6zM3,6L9,6" fill="none" stroke="#46a000"/></symbol><g transform="translate(370,6873)" ed:togtopicid="101"><use xlink:href="#minus"/></g><g transform="translate(632,137)" ed:togtopicid="102"><use xlink:href="#minus"/></g><g transform="translate(550,2049)" ed:togtopicid="104"><use xlink:href="#minus"/></g><g transform="translate(582,5338)" ed:togtopicid="106"><use xlink:href="#minus"/></g><g transform="translate(598,7414)" ed:togtopicid="108"><use xlink:href="#minus"/></g><g transform="translate(550,8640)" ed:togtopicid="110"><use xlink:href="#minus"/></g><g transform="translate(576,10202)" ed:togtopicid="112"><use xlink:href="#minus"/></g><g transform="translate(566,12026)" ed:togtopicid="114"><use xlink:href="#minus"/></g><g transform="translate(577,13350)" ed:togtopicid="116"><use xlink:href="#minus"/></g><g transform="translate(763,171)" ed:togtopicid="120"><use xlink:href="#minus"/></g><g transform="translate(695,522)" ed:togtopicid="124"><use xlink:href="#minus"/></g><g transform="translate(687,805)" ed:togtopicid="126"><use xlink:href="#minus"/></g><g transform="translate(682,961)" ed:togtopicid="128"><use xlink:href="#minus"/></g><g transform="translate(643,1164)" ed:togtopicid="130"><use xlink:href="#minus"/></g><g transform="translate(734,1341)" ed:togtopicid="132"><use xlink:href="#minus"/></g><g transform="translate(708,1525)" ed:togtopicid="134"><use xlink:href="#minus"/></g><g transform="translate(682,1745)" ed:togtopicid="136"><use xlink:href="#minus"/></g><g transform="translate(669,2035)" ed:togtopicid="138"><use xlink:href="#minus"/></g><g transform="translate(683,2281)" ed:togtopicid="140"><use xlink:href="#minus"/></g><g transform="translate(690,2568)" ed:togtopicid="142"><use xlink:href="#minus"/></g><g transform="translate(716,2805)" ed:togtopicid="144"><use xlink:href="#minus"/></g><g transform="translate(676,3002)" ed:togtopicid="146"><use xlink:href="#minus"/></g><g transform="translate(651,3441)" ed:togtopicid="148"><use xlink:href="#minus"/></g><g transform="translate(651,3759)" ed:togtopicid="150"><use xlink:href="#minus"/></g><g transform="translate(688,4029)" ed:togtopicid="152"><use xlink:href="#minus"/></g><g transform="translate(688,4711)" ed:togtopicid="154"><use xlink:href="#minus"/></g><g transform="translate(675,5733)" ed:togtopicid="156"><use xlink:href="#minus"/></g><g transform="translate(662,6453)" ed:togtopicid="158"><use xlink:href="#minus"/></g><g transform="translate(675,6740)" ed:togtopicid="160"><use xlink:href="#minus"/></g><g transform="translate(714,7305)" ed:togtopicid="162"><use xlink:href="#minus"/></g><g transform="translate(763,7762)" ed:togtopicid="164"><use xlink:href="#minus"/></g><g transform="translate(691,7903)" ed:togtopicid="166"><use xlink:href="#minus"/></g><g transform="translate(687,8297)" ed:togtopicid="168"><use xlink:href="#minus"/></g><g transform="translate(645,8596)" ed:togtopicid="170"><use xlink:href="#minus"/></g><g transform="translate(679,8799)" ed:togtopicid="172"><use xlink:href="#minus"/></g><g transform="translate(637,8951)" ed:togtopicid="174"><use xlink:href="#minus"/></g><g transform="translate(671,9063)" ed:togtopicid="176"><use xlink:href="#minus"/></g><g transform="translate(643,9198)" ed:togtopicid="178"><use xlink:href="#minus"/></g><g transform="translate(676,9751)" ed:togtopicid="180"><use xlink:href="#minus"/></g><g transform="translate(684,10332)" ed:togtopicid="182"><use xlink:href="#minus"/></g><g transform="translate(676,10497)" ed:togtopicid="184"><use xlink:href="#minus"/></g><g transform="translate(694,10678)" ed:togtopicid="186"><use xlink:href="#minus"/></g><g transform="translate(682,10949)" ed:togtopicid="188"><use xlink:href="#minus"/></g><g transform="translate(685,11269)" ed:togtopicid="192"><use xlink:href="#minus"/></g><g transform="translate(672,11334)" ed:togtopicid="194"><use xlink:href="#minus"/></g><g transform="translate(685,11615)" ed:togtopicid="196"><use xlink:href="#minus"/></g><g transform="translate(659,12058)" ed:togtopicid="198"><use xlink:href="#minus"/></g><g transform="translate(700,12419)" ed:togtopicid="200"><use xlink:href="#minus"/></g><g transform="translate(685,12618)" ed:togtopicid="202"><use xlink:href="#minus"/></g><g transform="translate(698,12784)" ed:togtopicid="204"><use xlink:href="#minus"/></g><g transform="translate(696,13082)" ed:togtopicid="208"><use xlink:href="#minus"/></g><g transform="translate(736,13244)" ed:togtopicid="210"><use xlink:href="#minus"/></g><g transform="translate(696,13356)" ed:togtopicid="212"><use xlink:href="#minus"/></g><g transform="translate(718,13387)" ed:togtopicid="214"><use xlink:href="#minus"/></g><g transform="translate(735,13443)" ed:togtopicid="216"><use xlink:href="#minus"/></g><g transform="translate(679,13499)" ed:togtopicid="218"><use xlink:href="#minus"/></g><g transform="translate(799,13608)" ed:togtopicid="220"><use xlink:href="#minus"/></g><g transform="translate(818,444)" ed:togtopicid="232"><use xlink:href="#minus"/></g><g transform="translate(833,637)" ed:togtopicid="244"><use xlink:href="#minus"/></g><g transform="translate(851,740)" ed:togtopicid="256"><use xlink:href="#minus"/></g><g transform="translate(805,1027)" ed:togtopicid="272"><use xlink:href="#minus"/></g><g transform="translate(786,1173)" ed:togtopicid="282"><use xlink:href="#minus"/></g><g transform="translate(773,1229)" ed:togtopicid="284"><use xlink:href="#minus"/></g><g transform="translate(877,1335)" ed:togtopicid="294"><use xlink:href="#minus"/></g><g transform="translate(864,1376)" ed:togtopicid="298"><use xlink:href="#minus"/></g><g transform="translate(864,1407)" ed:togtopicid="302"><use xlink:href="#minus"/></g><g transform="translate(838,1478)" ed:togtopicid="308"><use xlink:href="#minus"/></g><g transform="translate(851,1534)" ed:togtopicid="310"><use xlink:href="#minus"/></g><g transform="translate(825,1730)" ed:togtopicid="326"><use xlink:href="#minus"/></g><g transform="translate(851,1817)" ed:togtopicid="328"><use xlink:href="#minus"/></g><g transform="translate(974,1832)" ed:togtopicid="336"><use xlink:href="#minus"/></g><g transform="translate(879,2116)" ed:togtopicid="352"><use xlink:href="#minus"/></g><g transform="translate(853,2478)" ed:togtopicid="368"><use xlink:href="#minus"/></g><g transform="translate(828,2609)" ed:togtopicid="370"><use xlink:href="#minus"/></g><g transform="translate(870,2715)" ed:togtopicid="372"><use xlink:href="#minus"/></g><g transform="translate(878,2980)" ed:togtopicid="376"><use xlink:href="#minus"/></g><g transform="translate(814,3077)" ed:togtopicid="378"><use xlink:href="#minus"/></g><g transform="translate(789,3547)" ed:togtopicid="382"><use xlink:href="#minus"/></g><g transform="translate(854,3669)" ed:togtopicid="384"><use xlink:href="#minus"/></g><g transform="translate(800,3279)" ed:togtopicid="424"><use xlink:href="#minus"/></g><g transform="translate(792,3923)" ed:togtopicid="458"><use xlink:href="#minus"/></g><g transform="translate(827,3973)" ed:togtopicid="460"><use xlink:href="#minus"/></g><g transform="translate(892,4063)" ed:togtopicid="462"><use xlink:href="#minus"/></g><g transform="translate(844,4175)" ed:togtopicid="466"><use xlink:href="#minus"/></g><g transform="translate(792,4534)" ed:togtopicid="470"><use xlink:href="#minus"/></g><g transform="translate(831,4780)" ed:togtopicid="472"><use xlink:href="#minus"/></g><g transform="translate(818,4961)" ed:togtopicid="474"><use xlink:href="#minus"/></g><g transform="translate(818,5092)" ed:togtopicid="476"><use xlink:href="#minus"/></g><g transform="translate(859,5123)" ed:togtopicid="478"><use xlink:href="#minus"/></g><g transform="translate(831,5170)" ed:togtopicid="480"><use xlink:href="#minus"/></g><g transform="translate(792,5272)" ed:togtopicid="482"><use xlink:href="#minus"/></g><g transform="translate(779,5496)" ed:togtopicid="484"><use xlink:href="#minus"/></g><g transform="translate(792,5832)" ed:togtopicid="486"><use xlink:href="#minus"/></g><g transform="translate(818,6050)" ed:togtopicid="488"><use xlink:href="#minus"/></g><g transform="translate(805,6191)" ed:togtopicid="490"><use xlink:href="#minus"/></g><g transform="translate(769,6306)" ed:togtopicid="492"><use xlink:href="#minus"/></g><g transform="translate(827,6397)" ed:togtopicid="494"><use xlink:href="#minus"/></g><g transform="translate(805,6528)" ed:togtopicid="496"><use xlink:href="#minus"/></g><g transform="translate(773,6624)" ed:togtopicid="498"><use xlink:href="#minus"/></g><g transform="translate(906,7245)" ed:togtopicid="502"><use xlink:href="#minus"/></g><g transform="translate(847,7388)" ed:togtopicid="504"><use xlink:href="#minus"/></g><g transform="translate(866,7575)" ed:togtopicid="506"><use xlink:href="#minus"/></g><g transform="translate(804,8216)" ed:togtopicid="508"><use xlink:href="#minus"/></g><g transform="translate(804,8297)" ed:togtopicid="510"><use xlink:href="#minus"/></g><g transform="translate(856,8394)" ed:togtopicid="512"><use xlink:href="#minus"/></g><g transform="translate(764,8668)" ed:togtopicid="516"><use xlink:href="#minus"/></g><g transform="translate(741,8992)" ed:togtopicid="518"><use xlink:href="#minus"/></g><g transform="translate(954,5170)" ed:togtopicid="578"><use xlink:href="#minus"/></g><g transform="translate(850,5452)" ed:togtopicid="594"><use xlink:href="#minus"/></g><g transform="translate(785,7056)" ed:togtopicid="675"><use xlink:href="#minus"/></g><g transform="translate(847,9384)" ed:togtopicid="1017"><use xlink:href="#minus"/></g><g transform="translate(864,9602)" ed:togtopicid="1019"><use xlink:href="#minus"/></g><g transform="translate(836,9801)" ed:togtopicid="1021"><use xlink:href="#minus"/></g><g transform="translate(876,9863)" ed:togtopicid="1023"><use xlink:href="#minus"/></g><g transform="translate(812,9940)" ed:togtopicid="1025"><use xlink:href="#minus"/></g><g transform="translate(822,10027)" ed:togtopicid="1027"><use xlink:href="#minus"/></g><g transform="translate(856,10108)" ed:togtopicid="1029"><use xlink:href="#minus"/></g><g transform="translate(940,10158)" ed:togtopicid="1031"><use xlink:href="#minus"/></g><g transform="translate(859,10230)" ed:togtopicid="1033"><use xlink:href="#minus"/></g><g transform="translate(1004,10292)" ed:togtopicid="1035"><use xlink:href="#minus"/></g><g transform="translate(945,10323)" ed:togtopicid="1037"><use xlink:href="#minus"/></g><g transform="translate(888,10410)" ed:togtopicid="1039"><use xlink:href="#minus"/></g><g transform="translate(802,10587)" ed:togtopicid="1041"><use xlink:href="#minus"/></g><g transform="translate(908,10647)" ed:togtopicid="1043"><use xlink:href="#minus"/></g><g transform="translate(912,10706)" ed:togtopicid="1045"><use xlink:href="#minus"/></g><g transform="translate(854,10787)" ed:togtopicid="1047"><use xlink:href="#minus"/></g><g transform="translate(815,10893)" ed:togtopicid="1049"><use xlink:href="#minus"/></g><g transform="translate(866,10968)" ed:togtopicid="1051"><use xlink:href="#minus"/></g><g transform="translate(843,11009)" ed:togtopicid="1053"><use xlink:href="#minus"/></g><g transform="translate(829,11040)" ed:togtopicid="1055"><use xlink:href="#minus"/></g><g transform="translate(767,13107)" ed:togtopicid="1057"><use xlink:href="#minus"/></g><g transform="translate(883,13294)" ed:togtopicid="1061"><use xlink:href="#minus"/></g><g transform="translate(985,9617)" ed:togtopicid="1135"><use xlink:href="#minus"/></g><g transform="translate(946,9745)" ed:togtopicid="1147"><use xlink:href="#minus"/></g><g transform="translate(663,11178)" ed:togtopicid="1227"><use xlink:href="#minus"/></g><g transform="translate(802,11993)" ed:togtopicid="1265"><use xlink:href="#minus"/></g><g transform="translate(802,12139)" ed:togtopicid="1273"><use xlink:href="#minus"/></g><g transform="translate(789,12245)" ed:togtopicid="1283"><use xlink:href="#minus"/></g><g transform="translate(797,12500)" ed:togtopicid="1295"><use xlink:href="#minus"/></g><g transform="translate(894,12531)" ed:togtopicid="1301"><use xlink:href="#minus"/></g></svg>